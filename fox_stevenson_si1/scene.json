{
	"camera" : 
	{
		"center" : "-5.32536 -2.34691 5.54830",
		"eye" : "-6.03532 -2.55980 6.21959",
		"up" : "0.00000 1.00000 0.00000"
	},
	"general" : 
	{
		"ambientcolor" : "0.40000 0.49020 0.94118",
		"bloom" : 
		{
			"user" : "fancyasfuckbloom",
			"value" : false
		},
		"bloomhdrfeather" : 0.1,
		"bloomhdriterations" : 8,
		"bloomhdrscatter" : 1.619,
		"bloomhdrstrength" : 2.0,
		"bloomhdrthreshold" : 1.0,
		"bloomstrength" : 1.55,
		"bloomthreshold" : 0.75,
		"camerafade" : true,
		"cameraparallax" : false,
		"cameraparallaxamount" : 888.0,
		"cameraparallaxdelay" : 0.1,
		"cameraparallaxmouseinfluence" : 1.0,
		"camerapreview" : true,
		"camerashake" : false,
		"camerashakeamplitude" : 0.5,
		"camerashakeroughness" : 1.0,
		"camerashakespeed" : 3.0,
		"clearcolor" : 
		{
			"script" : "'use strict';\n\n/**\n * @param {Vec3} value - for property 'clearcolor'\n * @return {Vec3} - update current property value\n */\nexport function update(value) {\n\t\n\treturn value;\n}\n",
			"value" : "1.00000 1.00000 1.00000"
		},
		"clearenabled" : true,
		"farz" : 3807.0801,
		"fov" : 45.860001,
		"hdr" : false,
		"nearz" : 0.029999999,
		"orthogonalprojection" : null,
		"skylightcolor" : "0.30588 0.24706 0.83922",
		"zoom" : 1.0
	},
	"objects" : 
	[
		{
			"angles" : 
			{
				"script" : "/*\nConsults my guide for instructions on how to use this script:\nhttps://steamcommunity.com/sharedfiles/filedetails/?id=2686493967\n*/\n\n'use strict';\nimport * as WEMath from 'WEMath';\n\nexport var scriptProperties = createScriptProperties()\n\t.addCheckbox({name: 'active', label: 'Parenting System (ON/OFF)', value: true})\n\t.addText({name: 'visibilityConfig', label: 'Visibility:', value: ''})\n\t.addText({name: 'originConfig', label: 'Origin:',value: ''})\n\t.addText({name: 'anglesConfig', label: 'Angles:', value: ''})\n\t.addText({name: 'rotationConfig', label: 'Rotation:', value: ''})\n\t.addText({name: 'scaleConfig', label: 'Scale:', value: ''})\n\t.addText({name: 'colorConfig', label: 'Color:', value: ''})\n\t.addText({name: 'opacityConfig', label: 'Opacity:', value: ''})\n\t.finish();\n\nconst logs = true; //Change this value to disable logs in the console.\nlet layers = [], parentLayer, parentInitValues, childrenInitValues = [], layerConfig = [], cachedChildren = [], previousVisibility, anglesOffset = [], nRounds = {x: 0, y: 0, z: 0}, previousAngles = new Vec3(), originOffset;\n\n/**\n * @author Gariam\n */\nexport function update() {\n\tif(shared.angleOperations != undefined){\n\t\tshared.angleOperations();\n\t}\n\tif (scriptProperties.active){\n\t\tfor (let i = 0; i < layerConfig.length; i++){\n\t\t\tif (layerConfig[i].visibility.use && layerConfig[i].visibility.mode == 0 && parentLayer.visible != previousVisibility){ //Status Change visibility\n\t\t\t\tcachedChildren[i].visible = !cachedChildren[i].visible;\n\t\t\t\tpreviousVisibility = parentLayer.visible;\n\t\t\t}\n\t\t\tswitch (parentLayer.visible){\n\t\t\t\tcase false:\n\t\t\t\t\tif (layerConfig[i].visibility.use && layerConfig[i].visibility.mode == 1){\n\t\t\t\t\t\tcachedChildren[i].visible = false; //Direct visibility\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t} else if (layerConfig[i].visibility.use && layerConfig[i].visibility.mode == -1) cachedChildren[i].visible = true; //Direct visibility\n\t\t\t\tcase true:\n\t\t\t\t\tif (layerConfig[i].visibility.use && layerConfig[i].visibility.mode == -1 && parentLayer.visible){\n\t\t\t\t\t\tcachedChildren[i].visible = false; //Inverse visibility\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t} else if (layerConfig[i].visibility.use && layerConfig[i].visibility.mode == 1) cachedChildren[i].visible = true; //Inverse Visibility\n\t\t\t\t\tif (cachedChildren[i].visible || typeof cachedChildren[i].visible == 'undefined'){\n\t\t\t\t\t\tif (layerConfig[i].opacity.use) opacity(i); //Opacity\n\t\t\t\t\t\tif (layerConfig[i].color.use && !parentInitValues.isModel && !childrenInitValues[i].isModel) color(i); //Color\n\t\t\t\t\t}\n\t\t\t\tdefault:\n\t\t\t\t\tlet offsetScale = setAxis('Scale', layerConfig[i].scale.axis, layerConfig[i].scale.axisSign);\n\t\t\t\t\tif (cachedChildren[i].visible || typeof cachedChildren[i].visible == 'undefined'){\n\t\t\t\t\t\tif (layerConfig[i].scale.use) scale(i, offsetScale); //Scale\n\t\t\t\t\t\tif (!layerConfig[i].origin.use) childrenInitValues[i].offset = childrenInitValues[i].origin.subtract(parentLayer.origin);\n\t\t\t\t\t\tif (layerConfig[i].angles.use) angles(i); //Angles\n\t\t\t\t\t\tif (layerConfig[i].rotation.use) rotation(i, offsetScale); //Rotation\n\t\t\t\t\t\telse if (layerConfig[i].origin.use) movement(i, offsetScale); //Origin\n\t\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}\n\n/**\n * @param {number} index - the index of the child layer\n * @param {Vec3} offsetScale - the difference between initial scale and current scale of the parent layer\n * @author Gariam\n */\nfunction movement(index, offsetScale){\n\tlet position;\n\tif (layerConfig[index].angles.use) position = originOffset;\n\telse position = setAxis('Origin', layerConfig[index].origin.offset);\n\tif (layerConfig[index].scale.use && layerConfig[index].scale.scaleDistance){\n\t\tlet x, y, z;\n\t\tif (layerConfig[index].scale.axisSign[0] == 1) x = parentLayer.origin.x + (childrenInitValues[index].offset.x * offsetScale.x);\n\t\telse x = parentLayer.origin.x + (childrenInitValues[index].offset.x / offsetScale.x);\n\t\tif (layerConfig[index].scale.axisSign[1] == 1) y = parentLayer.origin.y + (childrenInitValues[index].offset.y * offsetScale.y);\n\t\telse y = parentLayer.origin.y + (childrenInitValues[index].offset.y / offsetScale.y);\n\t\tif (layerConfig[index].scale.axisSign[2] == 1) z = parentLayer.origin.z + (childrenInitValues[index].offset.z * offsetScale.z);\n\t\telse z = parentLayer.origin.z + (childrenInitValues[index].offset.z / offsetScale.z);\n\t\tcachedChildren[index].origin = new Vec3(x, y, z).add(position).subtract(childrenInitValues[index].offset);\n\t} else {\n\t\tcachedChildren[index].origin = parentLayer.origin.add(position);\n\t}\n}\n\n/**\n * @param {number} index - the index of the child layer\n * @param {Vec3} offsetScale - the difference between initial scale and current scale of the parent layer\n * @author Gariam\n */\nfunction rotation(index, offsetScale){\n\tlet offsetOrigin = setAxis('Origin', layerConfig[index].origin.offset), position, offsetRotation = setAxis('Rotation', layerConfig[index].rotation.axis, layerConfig[index].rotation.axisSign);\n\tif (layerConfig[index].angles.use) position = calculatePosition(originOffset, offsetRotation);\n\telse position = calculatePosition(childrenInitValues[index].offset, offsetRotation);\n\tif (layerConfig[index].scale.use && layerConfig[index].scale.scaleDistance){\n\t\tlet x, y, z;\n\t\tif (layerConfig[index].scale.axisSign[0] == 1) x = parentLayer.origin.x + (position.x * offsetScale.x);\n\t\telse x = parentLayer.origin.x + (position.x / offsetScale.x);\n\t\tif (layerConfig[index].scale.axisSign[1] == 1) y = parentLayer.origin.y + (position.y * offsetScale.y);\n\t\telse y = parentLayer.origin.y + (position.y / offsetScale.y);\n\t\tif (layerConfig[index].scale.axisSign[2] == 1) z = parentLayer.origin.z + (position.z * offsetScale.z);\n\t\telse z = parentLayer.origin.z + (position.z / offsetScale.z);\n\t\tif (layerConfig[index].angles.use) cachedChildren[index].origin = new Vec3(x, y, z);\n\t\telse cachedChildren[index].origin = new Vec3(x, y, z).add(offsetOrigin);\n\t} else {\n\t\tif (layerConfig[index].angles.use) cachedChildren[index].origin = parentLayer.origin.add(position);\n\t\telse cachedChildren[index].origin = parentLayer.origin.add(position).add(offsetOrigin);\n\t}\n}\n\n/**\n * @param {Vec3} offset - the distance between parent and child on every axis\n * @param {Array<number>} axis - the angles value to calculate the position for\n * @author Gariam\n */\nfunction calculatePosition(offset, axis){\n\taxis = axis.multiply(WEMath.deg2rad);\n\tlet x, y, z, xx, xy, xz, yx, yy, yz, zx, zy, zz;\n\tlet cosAlpha = Math.cos(axis.z);\n\tlet sinAlpha = Math.sin(axis.z);\n\tlet cosBeta = Math.cos(axis.y);\n\tlet sinBeta = Math.sin(axis.y);\n\tlet cosGamma = Math.cos(axis.x);\n\tlet sinGamma = Math.sin(axis.x);\n\t\t\n\txx = cosAlpha * cosBeta;\n\txy = cosAlpha * sinBeta * sinGamma - sinAlpha * cosGamma;\n\txz = cosAlpha * sinBeta * cosGamma + sinAlpha * sinGamma;\n\tyx = sinAlpha * cosBeta;\n\tyy = sinAlpha * sinBeta * sinGamma + cosAlpha * cosGamma;\n\tyz = sinAlpha * sinBeta * cosGamma - cosAlpha * sinGamma;\n\tzx = -sinBeta;\n\tzy = cosBeta * sinGamma;\n\tzz = cosBeta * cosGamma;\n\t\n\tx = xx * offset.x + xy * offset.y + xz * offset.z;\n\ty = yx * offset.x + yy * offset.y + yz * offset.z;\n\tz = zx * offset.x + zy * offset.y + zz * offset.z;\n\treturn new Vec3(x, y, z);\n}\n\n/**\n * @param {number} index - the index of the child layer\n * @author Gariam\n */\nfunction angles(index){\n\tlet offsetAngles = setAxis('Angles', layerConfig[index].angles.axis, layerConfig[index].angles.axisSign), offsetOrigin = setAxis('Origin', layerConfig[index].origin.offset);\n\tlet position = calculatePosition(offsetOrigin.multiply(-1), offsetAngles);\n\tcachedChildren[index].angles = childrenInitValues[index].angles.add(offsetAngles);\n\tif (layerConfig[index].scale.scaleDistance && !layerConfig[index].origin.use && !layerConfig[index].rotation.use) originOffset = originOffset.subtract(parentLayer.origin).add(offsetOrigin).add(position);\n\telse originOffset = childrenInitValues[index].offset.add(offsetOrigin).add(position);\n\tcachedChildren[index].origin = parentLayer.origin.add(originOffset);\n}\n\n/**\n * @param {number} index - the index of the child layer\n * @param {Vec3} offsetScale - the difference between initial scale and current scale of the parent layer\n * @author Gariam\n */\nfunction scale(index, offsetScale){\n\tif (layerConfig[index].scale.scaleSize){\n\t\tlet x, y, z;\n\t\tif (layerConfig[index].scale.axisSign[0] == 1) x = childrenInitValues[index].scale.x * offsetScale.x;\n\t\telse x = childrenInitValues[index].scale.x / offsetScale.x;\n\t\tif (layerConfig[index].scale.axisSign[1] == 1) y = childrenInitValues[index].scale.y * offsetScale.y;\n\t\telse y = childrenInitValues[index].scale.y / offsetScale.y;\n\t\tif (layerConfig[index].scale.axisSign[2] == 1) z = childrenInitValues[index].scale.z * offsetScale.z;\n\t\telse z = childrenInitValues[index].scale.z / offsetScale.z;\n\t\tcachedChildren[index].scale = new Vec3(x, y, z);\n\t}\n\tif (layerConfig[index].scale.scaleDistance){\n\t\tlet tempOffset = childrenInitValues[index].origin.subtract(parentLayer.origin);\n\t\tif (!layerConfig[index].origin.use && !layerConfig[index].rotation.use && tempOffset != childrenInitValues[index].offset) cachedChildren[index].origin = originOffset = parentLayer.origin.add(tempOffset.multiply(offsetScale));\n\t\telse if (!layerConfig[index].origin.use && !layerConfig[index].rotation.use) cachedChildren[index].origin = originOffset = parentLayer.origin.add(childrenInitValues[index].offset.multiply(offsetScale));\n\t}\n}\n\n/**\n * @param {number} index - the index of the child layer\n * @author Gariam\n */\nfunction color(index){\n\tlet parentColor = new Vec3(), saturation, brightness, deltaColor, childColor = childrenInitValues[index].color;\n\tif (parentInitValues.isParticleSystem)parentColor.hsv = rgb2hsv(parentLayer.instance.colorn);\n\telse parentColor.hsv = rgb2hsv(parentLayer.color);\n\tif (layerConfig[index].color.bindSB){\n\t\tsaturation = parentColor.hsv.y;\n\t\tbrightness = parentColor.hsv.z;\n\t} else {\n\t\tsaturation = childColor.y;\n\t\tbrightness = childColor.z;\n\t}\n\tdeltaColor = (parentColor.hsv.x + childrenInitValues[index].colorOffset) % 1;\n\tif (childrenInitValues[index].isParticleSystem){\n\t\tcachedChildren[index].instance.colorn = hsv2rgb(new Vec3(deltaColor, saturation, brightness));\n\t} else {\n\t\tcachedChildren[index].color = hsv2rgb(new Vec3(deltaColor, saturation, brightness));\n\t}\n}\n\n/**\n * @param {number} index - the index of the child layer\n * @author Gariam\n */\nfunction opacity(index){\n\tif (parentInitValues.isParticleSystem){\n\t\tif (childrenInitValues[index].isParticleSystem){\n\t\t\tif (layerConfig[index].opacity.mode == 1) cachedChildren[index].instance.alpha = parentLayer.instance.alpha;\n\t\t\telse if (layerConfig[index].opacity.mode == -1) cachedChildren[index].instance.alpha = 1 - parentLayer.instance.alpha;\n\t\t} else {\n\t\t\tif (layerConfig[index].opacity.mode == 1) cachedChildren[index].alpha = parentLayer.instance.alpha;\n\t\t\telse if (layerConfig[index].opacity.mode == -1) cachedChildren[index].alpha = 1 - parentLayer.instance.alpha;\n\t\t}\n\t} else {\n\t\tif (childrenInitValues[index].isParticleSystem){\n\t\t\tif (layerConfig[index].opacity.mode == 1) cachedChildren[index].instance.alpha = parentLayer.alpha;\n\t\t\telse if (layerConfig[index].opacity.mode == -1) cachedChildren[index].instance.alpha = 1 - parentLayer.alpha;\n\t\t} else {\n\t\t\tif (layerConfig[index].opacity.mode == 1) cachedChildren[index].alpha = parentLayer.alpha;\n\t\t\telse if (layerConfig[index].opacity.mode == -1) cachedChildren[index].alpha = 1 - parentLayer.alpha;\n\t\t}\n\t}\n}\n\n/**\n * @param {string} property - the property beeing worked on\n * @param {Array<string>} configuration - the axis configuration to apply to the property\n * @param {Array<number>=} sign - the sign of every axis, to determine direction\n * @author Gariam\n */\nfunction setAxis(property, configuration, sign){\n\tlet axis = [], parentProperty = new Vec3();\n\tif (property == 'Angles' || property == 'Rotation'){\n\t\tparentProperty = parentLayer.angles.subtract(parentInitValues.angles);\n\t\tif (Math.abs(previousAngles.x % 360) > Math.abs(parentLayer.angles.x % 360)) nRounds.x++;\n\t\tif (Math.abs(previousAngles.y % 360) > Math.abs(parentLayer.angles.y % 360)) nRounds.y++;\n\t\tif (Math.abs(previousAngles.z % 360) > Math.abs(parentLayer.angles.z % 360)) nRounds.z++;\n\t} else parentProperty = parentLayer.scale.divide(parentInitValues.scale);\n\tif (property == 'Origin'){\n\t\taxis = [parseInt(configuration[0].substring(1, configuration[0].length)), parseInt(configuration[1].substring(1, configuration[1].length)), parseInt(configuration[2].substring(1, configuration[2].length))];\n\t\tfor (let i = 0; i < 3; i++) if (Number.isNaN(axis[i])) axis[i] = 0;\n\t} else {\n\t\tfor (let i = 0; i < 3; i++){\n\t\t\tlet multiplier = 1, offset = new Vec3();\n\t\t\tif (isFinite(configuration[i].charAt(0)) || configuration[i].charAt(0) == '+' || configuration[i].charAt(0) == '-' && isFinite(configuration[i].substring(0, configuration[i].length - 1))) multiplier = Math.abs(parseFloat(configuration[i].substring(0, configuration[i].length - 1)));\n\t\t\tif (property == 'Angles' || property == 'Rotation'){\n\t\t\t\toffset.x = (360 * multiplier * nRounds.x * sign[i]) % 360;\n\t\t\t\toffset.y = (360 * multiplier * nRounds.y * sign[i]) % 360;\n\t\t\t\toffset.z = (360 * multiplier * nRounds.z * sign[i]) % 360;\n\t\t\t\tif (configuration[i].endsWith('x')) axis[i] = ((parentProperty.x * multiplier * sign[i] + offset.x)) % 360;\n\t\t\t\tif (configuration[i].endsWith('y')) axis[i] = ((parentProperty.y * multiplier * sign[i] + offset.y)) % 360;\n\t\t\t\tif (configuration[i].endsWith('z')) axis[i] = ((parentProperty.z * multiplier * sign[i] + offset.z)) % 360;\n\t\t\t} else if (property == 'Scale') {\n\t\t\t\tif (sign[i] >= 1){\n\t\t\t\t\tif (configuration[i].endsWith('x')) axis[i] = parentInitValues.scale.x + ((parentProperty.x - parentInitValues.scale.x) * multiplier);\n\t\t\t\t\tif (configuration[i].endsWith('y')) axis[i] = parentInitValues.scale.y + ((parentProperty.y - parentInitValues.scale.y) * multiplier);\n\t\t\t\t\tif (configuration[i].endsWith('z')) axis[i] = parentInitValues.scale.z + ((parentProperty.z - parentInitValues.scale.z) * multiplier);\n\t\t\t\t} else {\n\t\t\t\t\tif (configuration[i].endsWith('x')) axis[i] = parentInitValues.scale.x - ((parentProperty.x - parentInitValues.scale.x) * multiplier);\n\t\t\t\t\tif (configuration[i].endsWith('y')) axis[i] = parentInitValues.scale.y - ((parentProperty.y - parentInitValues.scale.y) * multiplier);\n\t\t\t\t\tif (configuration[i].endsWith('z')) axis[i] = parentInitValues.scale.z - ((parentProperty.z - parentInitValues.scale.z) * multiplier);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\tpreviousAngles = parentLayer.angles;\n\treturn new Vec3(axis[0], axis[1], axis[2]);\n}\n\n/**\n * @author Gariam\n */\nexport function init(){\n\tif (logs) console.log('Parenting system > Parent Layer: ' + thisLayer.name + ' > Active: ' + scriptProperties.active);\n\tif (scriptProperties.active){\n\t\tparentLayer = thisLayer;\n\t\tif (logs) console.log('Parenting system > Parent Layer: ' + parentLayer.name + ' > Initializing...');\n\t\tparentInitValues = new LayerInitValues(parentLayer, true);\n\t\tpreviousVisibility = parentLayer.visible;\n\t\tpreviousAngles = parentLayer.angles;\n\t\tlayers = thisScene.enumerateLayers();\n\n\t\tlet axis = [], axisSign = [], mode = [], scaleSize = [], scaleDistance = [];\n\t\tif (scriptProperties.visibilityConfig != ''){\n\t\t\tlet string = scriptProperties.visibilityConfig.split('\\n');\n\t\t\tfor (let i = 0; i < string.length; i++){\n\t\t\t\tif (!string[i].startsWith('-')){\n\t\t\t\t\tlet temp = string[i].split(',');\n\t\t\t\t\tlet name = temp[0].trim();\n\t\t\t\t\tif (!layers.includes(thisScene.getLayer(name))) throwError(0, 'Visibility', name);\n\t\t\t\t\tif (temp.length < 2) throwError(7, 'Visibility', name, 2);\n\t\t\t\t\telse if (temp.length > 2) throwError(8, 'Visibility', name, 2);\n\t\t\t\t\tlet modeTemp = parseInt(temp[1].trim());\n\t\t\t\t\treadSettings('Visibility', name, modeTemp);\n\t\t\t\t\tif (!searchLayer(name, childrenInitValues)){\n\t\t\t\t\t\tchildrenInitValues.push(new LayerInitValues(thisScene.getLayer(name), false));\n\t\t\t\t\t\tmode.push([]);\n\t\t\t\t\t\taxis.push([]);\n\t\t\t\t\t\taxisSign.push([]);\n\t\t\t\t\t\tscaleSize.push([]);\n\t\t\t\t\t\tscaleDistance.push([]);\n\t\t\t\t\t}\n\t\t\t\t\tlet index = getLayerIndex(name, childrenInitValues);\n\t\t\t\t\tchildrenInitValues[index].useVisibility = true;\n\t\t\t\t\tmode[index][0] = modeTemp;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tif (scriptProperties.originConfig != ''){\n\t\t\tlet string = scriptProperties.originConfig.split('\\n');\n\t\t\tfor (let i = 0; i < string.length; i++){\n\t\t\t\tif (!string[i].startsWith('-')){\n\t\t\t\t\tlet temp = string[i].split(',');\n\t\t\t\t\tlet name = temp[0].trim(), axisTemp, modeTemp;\n\t\t\t\t\tif (!layers.includes(thisScene.getLayer(name))) throwError(0, 'Origin', name);\n\t\t\t\t\tif (temp.length > 3) throwError(8, 'Origin', name, 3);\n\t\t\t\t\tif (temp.length == 3){\n\t\t\t\t\t\taxisTemp = temp[1].trim().toLowerCase();\n\t\t\t\t\t\tmodeTemp = temp[2].trim().toLowerCase();\n\t\t\t\t\t\taxisTemp = readSettings('Origin', name, modeTemp, axisTemp);\n\t\t\t\t\t} else if (temp.length == 2){\n\t\t\t\t\t\tthrowError(7, 'Origin', name, '1 or 3');\n\t\t\t\t\t} else readSettings('Origin', name, 'true');\n\t\t\t\t\tif (!searchLayer(name, childrenInitValues)){\n\t\t\t\t\t\tchildrenInitValues.push(new LayerInitValues(thisScene.getLayer(name), false));\n\t\t\t\t\t\tmode.push([]);\n\t\t\t\t\t\taxis.push([]);\n\t\t\t\t\t\taxisSign.push([]);\n\t\t\t\t\t\tscaleSize.push([]);\n\t\t\t\t\t\tscaleDistance.push([]);\n\t\t\t\t\t}\n\t\t\t\t\tlet index = getLayerIndex(name, childrenInitValues);\n\t\t\t\t\tchildrenInitValues[index].useOrigin = true;\n\t\t\t\t\tif (temp.length == 3){\n\t\t\t\t\t\taxis[index][1] = [];\n\t\t\t\t\t\tfor (let i = 0; i < 3; i++){\n\t\t\t\t\t\t\tif (axisTemp[i].startsWith('x')) axis[index][1][0] = axisTemp[i];\n\t\t\t\t\t\t\tif (axisTemp[i].startsWith('y')) axis[index][1][1] = axisTemp[i];\n\t\t\t\t\t\t\tif (axisTemp[i].startsWith('z')) axis[index][1][2] = axisTemp[i];\n\t\t\t\t\t\t}\n\t\t\t\t\t\tmode[index][1] = modeTemp;\n\t\t\t\t\t} else axis[index][1] = ['x', 'y', 'z'];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tif (scriptProperties.anglesConfig != ''){\n\t\t\tlet string = scriptProperties.anglesConfig.split('\\n');\n\t\t\tfor (let i = 0; i < string.length; i++){\n\t\t\t\tif (!string[i].startsWith('-')){\n\t\t\t\t\tlet temp = string[i].split(',');\n\t\t\t\t\tlet name = temp[0].trim(), axisTemp;\n\t\t\t\t\tif (!layers.includes(thisScene.getLayer(name))) throwError(0, 'Angles', name);\n\t\t\t\t\tif (temp.length > 2) throwError(8, 'Angles', name, 2);\n\t\t\t\t\tif (temp.length == 2){\n\t\t\t\t\t\taxisTemp = temp[1].trim().toLowerCase();\n\t\t\t\t\t\taxisTemp = readSettings('Angles', name, 1, axisTemp);\n\t\t\t\t\t} else readSettings('Angles', name, 1);\n\t\t\t\t\tif (!searchLayer(name, childrenInitValues)){\n\t\t\t\t\t\tchildrenInitValues.push(new LayerInitValues(thisScene.getLayer(name), false));\n\t\t\t\t\t\tmode.push([]);\n\t\t\t\t\t\taxis.push([]);\n\t\t\t\t\t\taxisSign.push([]);\n\t\t\t\t\t\tscaleSize.push([]);\n\t\t\t\t\t\tscaleDistance.push([]);\n\t\t\t\t\t}\n\t\t\t\t\tlet index = getLayerIndex(name, childrenInitValues);\n\t\t\t\t\tchildrenInitValues[index].useAngles = true;\n\t\t\t\t\tif (temp.length == 2){\n\t\t\t\t\t\taxis[index][2] = axisTemp;\n\t\t\t\t\t\taxisSign[index][2] = [];\n\t\t\t\t\t\tfor (let i = 0; i < axis[index][2].length; i++){\n\t\t\t\t\t\t\tif (axis[index][2][i].startsWith('-')) axisSign[index][2][i] = -1;\n\t\t\t\t\t\t\telse axisSign[index][2][i] = 1;\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\taxis[index][2] = ['x', 'y', 'z'];\n\t\t\t\t\t\taxisSign[index][2] = [1, 1, 1];\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tif (scriptProperties.rotationConfig != ''){\n\t\t\tlet string = scriptProperties.rotationConfig.split('\\n');\n\t\t\tfor (let i = 0; i < string.length; i++){\n\t\t\t\tif (!string[i].startsWith('-')){\n\t\t\t\t\tlet temp = string[i].split(',');\n\t\t\t\t\tlet name = temp[0].trim(), axisTemp;\n\t\t\t\t\tif (!layers.includes(thisScene.getLayer(name))) throwError(0, 'Rotation', name);\n\t\t\t\t\tif (temp.length > 2) throwError(8, 'Rotation', name, 2);\n\t\t\t\t\tif (temp.length == 2){\n\t\t\t\t\t\taxisTemp = temp[1].trim().toLowerCase();\n\t\t\t\t\t\taxisTemp = readSettings('Rotation', name, 1, axisTemp);\n\t\t\t\t\t} else readSettings('Rotation', name, 1);\n\t\t\t\t\tif (!searchLayer(name, childrenInitValues)){\n\t\t\t\t\t\tchildrenInitValues.push(new LayerInitValues(thisScene.getLayer(name), false));\n\t\t\t\t\t\tmode.push([]);\n\t\t\t\t\t\taxis.push([]);\n\t\t\t\t\t\taxisSign.push([]);\n\t\t\t\t\t\tscaleSize.push([]);\n\t\t\t\t\t\tscaleDistance.push([]);\n\t\t\t\t\t}\n\t\t\t\t\tlet index = getLayerIndex(name, childrenInitValues);\n\t\t\t\t\tchildrenInitValues[index].useRotation = true;\n\t\t\t\t\tif (temp.length == 2){\n\t\t\t\t\t\taxis[index][3] = axisTemp;\n\t\t\t\t\t\taxisSign[index][3] = [];\n\t\t\t\t\t\tfor (let i = 0; i < axis[index][3].length; i++){\n\t\t\t\t\t\t\tif (axis[index][3][i].startsWith('-')) axisSign[index][3][i] = -1;\n\t\t\t\t\t\t\telse axisSign[index][3][i] = 1;\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\taxis[index][3] = ['x', 'y', 'z'];\n\t\t\t\t\t\taxisSign[index][3] = [1, 1, 1];\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tif (scriptProperties.scaleConfig != ''){\n\t\t\tlet string = scriptProperties.scaleConfig.split('\\n');\n\t\t\tfor (let i = 0; i < string.length; i++){\n\t\t\t\tif (!string[i].startsWith('-')){\n\t\t\t\t\tlet temp = string[i].split(',');\n\t\t\t\t\tlet name = temp[0].trim(), axisTemp;\n\t\t\t\t\tif (!layers.includes(thisScene.getLayer(name))) throwError(0, 'Scale', name);\n\t\t\t\t\tif (temp.length > 4) throwError(8, 'Scale', name, 4);\n\t\t\t\t\tlet scaleSizeTemp = temp[1].trim().toLowerCase();\n\t\t\t\t\tlet scaleDistanceTemp = temp[2].trim().toLowerCase();\n\t\t\t\t\tif (temp.length == 4){\n\t\t\t\t\t\taxisTemp = temp[3].trim().toLowerCase();\n\t\t\t\t\t\taxisTemp = readSettings('Scale', name, scaleSizeTemp, axisTemp, scaleDistanceTemp);\n\t\t\t\t\t} else readSettings('Scale', name, scaleSizeTemp, undefined, scaleDistanceTemp);\n\t\t\t\t\tif (!searchLayer(name, childrenInitValues)){\n\t\t\t\t\t\tchildrenInitValues.push(new LayerInitValues(thisScene.getLayer(name), false));\n\t\t\t\t\t\tmode.push([]);\n\t\t\t\t\t\taxis.push([]);\n\t\t\t\t\t\taxisSign.push([]);\n\t\t\t\t\t\tscaleSize.push([]);\n\t\t\t\t\t\tscaleDistance.push([]);\n\t\t\t\t\t}\n\t\t\t\t\tlet index = getLayerIndex(name, childrenInitValues);\n\t\t\t\t\tchildrenInitValues[index].useScale = true;\n\t\t\t\t\tscaleSize[index] = scaleSizeTemp;\n\t\t\t\t\tscaleDistance[index] = scaleDistanceTemp;\n\t\t\t\t\tif (temp.length == 4){\n\t\t\t\t\t\taxis[index][4] = axisTemp;\n\t\t\t\t\t\taxisSign[index][4] = [];\n\t\t\t\t\t\tfor (let i = 0; i < axis[index][4].length; i++){\n\t\t\t\t\t\t\tif (axis[index][4][i].startsWith('-')) axisSign[index][4][i] = -1;\n\t\t\t\t\t\t\telse axisSign[index][4][i] = 1;\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\taxis[index][4] = ['x', 'y', 'z'];\n\t\t\t\t\t\taxisSign[index][4] = [1, 1, 1];\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tif (scriptProperties.colorConfig != ''){\n\t\t\tlet string = scriptProperties.colorConfig.split('\\n');\n\t\t\tfor (let i = 0; i < string.length; i++){\n\t\t\t\tif (!string[i].startsWith('-')){\n\t\t\t\t\tlet temp = string[i].split(',');\n\t\t\t\t\tlet name = temp[0].trim();\n\t\t\t\t\tif (!layers.includes(thisScene.getLayer(name))) throwError(0, 'Color', name);\n\t\t\t\t\tif (temp.length < 2) throwError(7, 'Color', name, 2);\n\t\t\t\t\telse if (temp.length > 2) throwError(8, 'Color', name, 2);\n\t\t\t\t\tlet modeTemp = temp[1].trim();\n\t\t\t\t\treadSettings('Color', name, modeTemp);\n\t\t\t\t\tif (!searchLayer(name, childrenInitValues)){\n\t\t\t\t\t\tchildrenInitValues.push(new LayerInitValues(thisScene.getLayer(name), false));\n\t\t\t\t\t\tmode.push([]);\n\t\t\t\t\t\taxis.push([]);\n\t\t\t\t\t\taxisSign.push([]);\n\t\t\t\t\t\tscaleSize.push([]);\n\t\t\t\t\t\tscaleDistance.push([]);\n\t\t\t\t\t}\n\t\t\t\t\tlet index = getLayerIndex(name, childrenInitValues);\n\t\t\t\t\tchildrenInitValues[index].useColor = true;\n\t\t\t\t\tmode[index][5] = modeTemp;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tif (scriptProperties.opacityConfig != ''){\n\t\t\tlet string = scriptProperties.opacityConfig.split('\\n');\n\t\t\tfor (let i = 0; i < string.length; i++){\n\t\t\t\tif (!string[i].startsWith('-')){\n\t\t\t\t\tlet temp = string[i].split(',');\n\t\t\t\t\tlet name = temp[0].trim();\n\t\t\t\t\tif (!layers.includes(thisScene.getLayer(name))) throwError(0, 'Opacity', name);\n\t\t\t\t\tif (temp.length < 2) throwError(7, 'Opacity', name, 2);\n\t\t\t\t\telse if (temp.length > 2) throwError(8, 'Opacity', name, 2);\n\t\t\t\t\tlet modeTemp = temp[1].trim();\n\t\t\t\t\tif (!isFinite(modeTemp) && !Number.isInteger(parseFloat(modeTemp))) throwError(5, 'Opacity', name, modeTemp);\n\t\t\t\t\telse modeTemp = parseInt(modeTemp);\n\t\t\t\t\treadSettings('Opacity', name, modeTemp);\n\t\t\t\t\tif (!searchLayer(name, childrenInitValues)){\n\t\t\t\t\t\tchildrenInitValues.push(new LayerInitValues(thisScene.getLayer(name), false));\n\t\t\t\t\t\tmode.push([]);\n\t\t\t\t\t\taxis.push([]);\n\t\t\t\t\t\taxisSign.push([]);\n\t\t\t\t\t\tscaleSize.push([]);\n\t\t\t\t\t\tscaleDistance.push([]);\n\t\t\t\t\t}\n\t\t\t\t\tlet index = getLayerIndex(name, childrenInitValues);\n\t\t\t\t\tchildrenInitValues[index].useOpacity = true;\n\t\t\t\t\tmode[index][6] = modeTemp;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tif (childrenInitValues.length > 0){\n\t\t\tfor (let i = 0; i < childrenInitValues.length; i++){\n\t\t\t\tcachedChildren.push(thisScene.getLayer(childrenInitValues[i].name));\n\t\t\t\tanglesOffset.push([0, 0, 0]);\n\t\t\t\tlayerConfig[i] = new LayerConfiguration();\n\t\t\t\tif (childrenInitValues[i].useVisibility){\n\t\t\t\t\tlayerConfig[i].visibility.use = true;\n\t\t\t\t\tlayerConfig[i].visibility.mode = mode[i][0];\n\t\t\t\t}\n\t\t\t\tif (childrenInitValues[i].useOrigin){\n\t\t\t\t\tif (mode[i][1] == 'true') layerConfig[i].origin.use = true;\n\t\t\t\t\telse layerConfig[i].origin.use = false;\n\t\t\t\t\tlayerConfig[i].origin.offset = axis[i][1];\n\t\t\t\t}\n\t\t\t\tif (childrenInitValues[i].useAngles){\n\t\t\t\t\tlayerConfig[i].angles.use = true;\n\t\t\t\t\tlayerConfig[i].angles.axis = axis[i][2];\n\t\t\t\t\tlayerConfig[i].angles.axisSign = axisSign[i][2];\n\t\t\t\t}\n\t\t\t\tif (childrenInitValues[i].useRotation){\n\t\t\t\t\tlayerConfig[i].rotation.use = true;\n\t\t\t\t\tlayerConfig[i].rotation.axis = axis[i][3];\n\t\t\t\t\tlayerConfig[i].rotation.axisSign = axisSign[i][3];\n\t\t\t\t}\n\t\t\t\tif (childrenInitValues[i].useScale){\n\t\t\t\t\tlayerConfig[i].scale.use = true;\n\t\t\t\t\tlayerConfig[i].scale.axis = axis[i][4];\n\t\t\t\t\tlayerConfig[i].scale.axisSign = axisSign[i][4];\n\t\t\t\t\tif (scaleSize[i] == 'true') layerConfig[i].scale.scaleSize = true;\n\t\t\t\t\telse layerConfig[i].scale.scaleSize = false;\n\t\t\t\t\tif (scaleDistance[i] == 'true') layerConfig[i].scale.scaleDistance = true;\n\t\t\t\t\telse layerConfig[i].scale.scaleDistance = false;\n\t\t\t\t}\n\t\t\t\tif (childrenInitValues[i].useColor){\n\t\t\t\t\tlayerConfig[i].color.use = true;\n\t\t\t\t\tif (mode[i][5] == 'true') layerConfig[i].color.bindSB = true;\n\t\t\t\t\telse layerConfig[i].color.bindSB = false;\n\t\t\t\t}\n\t\t\t\tif (childrenInitValues[i].useOpacity){\n\t\t\t\t\tlayerConfig[i].opacity.use = true;\n\t\t\t\t\tlayerConfig[i].opacity.mode = mode[i][6];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tif (logs){\n\t\t\tconsole.log('Parenting system > Parent Layer: ' + parentLayer.name + ' > Initializing... Complete');\n\t\t\tlet names = '';\n\t\t\tfor (let i = 0; i < childrenInitValues.length; i++){\n\t\t\t\tif (i == 0) names = childrenInitValues[i].name;\n\t\t\t\telse names += ', ' + childrenInitValues[i].name;\n\t\t\t}\n\t\t\tconsole.log('Parenting system > Parent Layer: ' + parentLayer.name + ' > Children layers[' + childrenInitValues.length + ']: ' + names);\n\t\t}\n\t}\n}\n\n/**\n * @param {string} property\n * @param {string} name\n * @param {number=} mode\n * @param {Array<number>=} axis\n * @param {boolean=} scaleDistance\n * @author Gariam\n */\nfunction readSettings(property, name, mode, axis, scaleDistance){\n\tif (searchLayer(name, childrenInitValues)){\n\t\tif (property == 'Visibility' && childrenInitValues[getLayerIndex(name, childrenInitValues)].useScale) throwError(9, property, name);\n\t\telse if (property == 'Origin' && childrenInitValues[getLayerIndex(name, childrenInitValues)].useOrigin) throwError(9, property, name);\n\t\telse if (property == 'Angles' && childrenInitValues[getLayerIndex(name, childrenInitValues)].useAngles) throwError(9, property, name);\n\t\telse if (property == 'Rotation' && childrenInitValues[getLayerIndex(name, childrenInitValues)].useRotation) throwError(9, property, name);\n\t\telse if (property == 'Scale' && childrenInitValues[getLayerIndex(name, childrenInitValues)].useScale) throwError(9, property, name);\n\t\telse if (property == 'Color' && childrenInitValues[getLayerIndex(name, childrenInitValues)].useColor) throwError(9, property, name);\n\t\telse if (property == 'Opacity' && childrenInitValues[getLayerIndex(name, childrenInitValues)].useOpacity) throwError(9, property, name);\n\t}\n\tif ((property == 'Origin' || property == 'Angles' || property == 'Rotation' || property == 'Scale') && typeof axis != 'undefined'){\n\t\taxis = axis.trim().split(' ');\n\t\tlet axisTemp = ['x', 'y', 'z'], used = [false, false, false];\n\t\tfor(let i = 0; i < 3; i++){\n\t\t\tif (property != 'Origin'){\n\t\t\t\taxis[i].trim();\n\t\t\t\tif (axis.length < 3) throwError(3, property, name);\n\t\t\t\telse if (axis.length > 3) throwError(4, property, name);\n\t\t\t\tif ((isFinite(axis[i].charAt(0)) || axis[i].charAt(0) == '-' || axis[i].charAt(0) == '+') && isFinite(axis[i].substring(0, axis[i].length - 1))){\n\t\t\t\t\tif (!axis[i].endsWith('x') && !axis[i].endsWith('y') && !axis[i].endsWith('z')) throwError(2, property, name, axis[i].charAt(axis[i].length - 1));\n\t\t\t\t} else if (!axis[i].startsWith('x') && !axis[i].startsWith('y') && !axis[i].startsWith('z')) throwError(2, property, name, axis[i].charAt(axis[i].length - 1));\n\t\t\t} else {\n\t\t\t\tif (axis.length > 3) throwError(4, property, name);\n\t\t\t\tif (typeof axis[i] == 'undefined'){\n\t\t\t\t\taxis = [axisTemp[0], axisTemp[1], axisTemp[2]];\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\taxis[i].trim();\n\t\t\t\tif (!axis[i].startsWith('x') && !axis[i].startsWith('y') && !axis[i].startsWith('z')) throwError(12, property, name, axis[i].charAt(0));\n\t\t\t\telse if (axis[i].startsWith('x') && used[0]) throwError(13, property, name, axis[i].charAt(0).toUpperCase());\n\t\t\t\telse if (axis[i].startsWith('y') && used[1]) throwError(13, property, name, axis[i].charAt(0).toUpperCase());\n\t\t\t\telse if (axis[i].startsWith('z') && used[2]) throwError(13, property, name, axis[i].charAt(0).toUpperCase());\n\t\t\t\tif (axis[i].charAt(1) != ''){\n\t\t\t\t\tif ((axis[i].charAt(1) == '-' || axis[i].charAt(1) == '+') && isFinite(axis[i].substring(1, axis[i].length))){\n\t\t\t\t\t\tif (axis[i].substring(1, axis[i].length) % 1 != 0) throwError(10, property, name, axis[i].substring(2, axis[i].length), axis[i].charAt(0).toUpperCase());\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tif (axis[i].startsWith('x') && !used[0]){\n\t\t\t\t\t\t\t\tused[0] = true;\n\t\t\t\t\t\t\t\taxisTemp[0] = axis[i];\n\t\t\t\t\t\t\t} else if (axis[i].startsWith('y') && !used[1]){\n\t\t\t\t\t\t\t\tused[1] = true;\n\t\t\t\t\t\t\t\taxisTemp[1] = axis[i];\n\t\t\t\t\t\t\t} else if (axis[i].startsWith('z') && !used[2]){\n\t\t\t\t\t\t\t\tused[2] = true;\n\t\t\t\t\t\t\t\taxisTemp[2] = axis[i];\n\t\t\t\t\t\t\t} else throwError(13, property, name, axis[i].charAt(0).toUpperCase());\n\t\t\t\t\t\t}\n\t\t\t\t\t} else if (isFinite(axis[i].charAt(1)) && isFinite(axis[i].substring(1, axis[i].length))) throwError(11, property, name, axis[i].charAt(0).toUpperCase());\n\t\t\t\t\telse throwError(10, property, name, axis[i].substring(1, axis[i].length), axis[i].charAt(0).toUpperCase());\n\t\t\t\t}\n\t\t\t\tif (i == 2) axis = [axisTemp[0], axisTemp[1], axisTemp[2]];\n\t\t\t\t\n\t\t\t}\n\t\t}\n\t} else if (property == 'Visibility' && mode != 1 && mode != -1 && mode != 0) throwError(1, property, name, mode);\n\telse if (property == 'Opacity' && mode != 1 && mode != -1) throwError(5, property, name, mode);\n\telse if (property == 'Color' && mode != 'true' && mode != 'false') throwError(6, property, name, mode, 'Overwrite Saturation and Brightness');\n\tif (property == 'Origin' && mode != 'true' && mode != 'false') throwError(6, property, name, mode, 'Bind origin');\n\tif (property == 'Scale' && mode != 'true' && mode != 'false') throwError(6, property, name, mode, 'Scale size');\n\tif (scaleDistance != 'true' && scaleDistance != 'false' && property == 'Scale') throwError(6, property, name, scaleDistance, 'Scale distance');\n\treturn axis;\n}\n\n/**\n * @param {string} layer\n * @param {Array<ILayer>} list\n * @return {number}\n * @author Gariam\n */\nfunction getLayerIndex(layer, list){\n\tfor (let i = 0; i < list.length; i++){\n\t\tif (layer == list[i].name){\n\t\t\treturn i;\n\t\t}\n\t}\n\treturn null;\n}\n\n/**\n * @param {string} layer\n * @param {Array<ILayer>} list\n * @return {boolean}\n * @author Gariam\n */\nfunction searchLayer(layer, list){\n\tfor (let i = 0; i < list.length; i++){\n\t\tif (layer == list[i].name){\n\t\t\treturn true;\n\t\t}\n\t}\n\treturn false;\n}\n\n/**\n * @param {ILayer} layer\n * @param {boolean} isParent\n * @author Gariam\n */\nfunction LayerInitValues(layer, isParent){\n\tthis.name = layer.name;\n\tthis.visible = layer.visible;\n\tthis.origin = layer.origin;\n\tthis.angles = layer.angles;\n\tthis.scale = layer.scale;\n\tthis.isParticleSystem = false;\n\tthis.isModel = false;\n\ttry {\n\t\tthis.color = rgb2hsv(layer.instance.colorn);\n\t\tthis.isParticleSystem = true;\n\t} catch {\n\t\ttry {this.color = rgb2hsv(layer.color);\n\t\t} catch {this.isModel = true;}\n\t}\n\tif (!this.isParticleSystem) this.alpha = layer.alpha;\n\telse this.alpha = layer.instance.alpha;\n\tif (!isParent) this.offset = this.origin.subtract(parentInitValues.origin);\n\tif (!isParent && !this.isModel && !parentInitValues.isModel){\n\t\tlet parentColor = parentInitValues.color.x;\n\t\tif (this.isParticleSystem){\n\t\t\tif (parentColor + this.color.x > 0) this.colorOffset = (parentColor + this.color.x) % 1;\n\t\t\telse this.colorOffset = (1 - (parentColor + this.color.x)) % 1;\n\t\t} else {\n\t\t\tif (parentColor + this.color.x > 0) this.colorOffset = (parentColor + this.color.x) % 1;\n\t\t\telse this.colorOffset = (1 - (parentColor + this.color.x)) % 1;\n\t\t}\n\t}\n\tthis.useVisibility = false;\n\tthis.useOrigin = false;\n\tthis.useAngles = false;\n\tthis.useRotation = false;\n\tthis.useScale = false;\n\tthis.useColor = false;\n\tthis.useOpacity = false;\n}\n\n/**\n * @author Gariam\n */\nfunction LayerConfiguration(){\n\tthis.visibility = {use: false, mode: 1};\n\tthis.origin = {use: false, offset: ['x', 'y', 'z']};\n\tthis.angles = {use: false, axis: ['x', 'y', 'z'], axisSign: [1, 1, 1]};\n\tthis.rotation = {use: false, axis: ['x', 'y', 'z'], axisSign: [1, 1, 1]};\n\tthis.scale = {use: false, axis: ['x', 'y', 'z'], axisSign: [1, 1, 1], scaleSize: true, scaleDistance: true};\n\tthis.color = {use: false, bindSB: false};\n\tthis.opacity = {use: false, mode: 1};\n}\n\n/**\n * @param {number} index - number identifing the error message\n * @param {string} property - the property that is giving the error\n * @param {string=} name - the child layer that is giving the error\n * @param {any=} issue - additional value that may appear in the message\n * @param {any=} issue2 - additional value that may appear in the message\n * @author Gariam\n */\nfunction throwError(index, property, name, issue, issue2){\n\tif (logs) console.log('Parenting system > Parent Layer: ' + parentLayer.name + ' > Initializing... Fail');\n\tif (logs) console.log('Parenting system > Parent Layer: ' + parentLayer.name + ' > Execution halted');\n\tswitch (index){\n\t\tcase 0: throw ' Parenting system > Parent Layer: ' + parentLayer.name + ' > Property: ' + property + ' > Issue: layer \"' + name + '\" not found.';\n\t\tcase 1: throw ' Parenting system > Parent Layer: ' + parentLayer.name + ' > Property: ' + property + ' > Child layer: ' + name + ' > Issue: \"' + issue + '\" is not a valid argument for \"Parenting mode\". Valid arguments: 1, 0, -1';\n\t\tcase 2: throw ' Parenting system > Parent Layer: ' + parentLayer.name + ' > Property: ' + property + ' > Child layer: ' + name + ' > Issue: \"' + issue + '\" it\\'s not a valid argument for \"Axis configuration\". Valid arguments: x, y, z';\n\t\tcase 3: throw ' Parenting system > Parent Layer: ' + parentLayer.name + ' > Property: ' + property + ' > Child layer: ' + name + ' > Issue: missing arguments for \"Axis configuration\". Necessary number of arguments: 3';\n\t\tcase 4: throw ' Parenting system > Parent Layer: ' + parentLayer.name + ' > Property: ' + property + ' > Child layer: ' + name + ' > Issue: too many arguments for \"Axis configuration\". Allowed number of arguments: 3';\n\t\tcase 5: throw ' Parenting system > Parent Layer: ' + parentLayer.name + ' > Property: ' + property + ' > Child layer: ' + name + ' > Issue: \"' + issue + '\" is not a valid argument for \"mode indicator\". Valid arguments: 1, -1';\n\t\tcase 6: throw ' Parenting system > Parent Layer: ' + parentLayer.name + ' > Property: ' + property + ' > Child layer: ' + name + ' > Issue: \"' + issue + '\" is not a valid argument for \"' + issue2 + '\". Valid arguments: true, false';\n\t\tcase 7: throw ' Parenting system > Parent Layer: ' + parentLayer.name + ' > Property: ' + property + ' > Child layer: ' + name + ' > Issue: missing parameters. Parameters needed: ' + issue;\n\t\tcase 8: throw ' Parenting system > Parent Layer: ' + parentLayer.name + ' > Property: ' + property + ' > Child layer: ' + name + ' > Issue: too many parameters. Allowed parameters: ' + issue;\n\t\tcase 9: throw ' Parenting system > Parent Layer: ' + parentLayer.name + ' > Property: ' + property + ' > Issue: layer \"' + name + '\" duplicated.';\n\t\tcase 10: throw ' Parenting system > Parent Layer: ' + parentLayer.name + ' > Property: ' + property + ' > Child layer: ' + name + ' > Issue: \"' + issue + '\" is not a valid value for \"Origin offset\", ' + issue2 + ' axis. Only integers are accepted.';\n\t\tcase 11: throw ' Parenting system > Parent Layer: ' + parentLayer.name + ' > Property: ' + property + ' > Child layer: ' + name + ' > Issue: Sign not specified for ' + issue + ' axis.';\n\t\tcase 12: throw ' Parenting system > Parent Layer: ' + parentLayer.name + ' > Property: ' + property + ' > Child layer: ' + name + ' > Issue: \"' + issue + '\" is not a valid argument for \"Origin offset\".';\n\t\tcase 13: throw ' Parenting system > Parent Layer: ' + parentLayer.name + ' > Property: ' + property + ' > Child layer: ' + name + ' > Issue: ' + issue + ' axis already declared for \"Origin offset\".';\n\t}\n}\n\n/**\n * @param {Vec3} color - the color in the RGB configuration\n * @return {Vec3} the color in the HSV configuration\n */\nfunction rgb2hsv(color) {\n\tlet rr, gg, bb, h, s, v, diff, diffc, percentRoundFn;\n\tv = Math.max(color.x, color.y, color.z),\n\tdiff = v - Math.min(color.x, color.y, color.z);\n\tdiffc = c => (v - c) / 6 / diff + 1 / 2;\n\tpercentRoundFn = num => Math.round(num * 100) / 100;\n\tif (diff == 0) {\n\t\th = s = 0;\n\t} else {\n\t\ts = diff / v;\n\t\trr = diffc(color.x);\n\t\tgg = diffc(color.y);\n\t\tbb = diffc(color.z);\n\n\t\tif (color.x === v) {\n\t\t\th = bb - gg;\n\t\t} else if (color.y === v) {\n\t\t\th = (1 / 3) + rr - bb;\n\t\t} else if (color.z === v) {\n\t\t\th = (2 / 3) + gg - rr;\n\t\t}\n\t\tif (h < 0) {\n\t\t\th += 1;\n\t\t}else if (h > 1) {\n\t\t\th -= 1;\n\t\t}\n\t}\n\treturn new Vec3(h, percentRoundFn(s), percentRoundFn(v));\n}\n\n/**\n * @param {Vec3} color - the color in the HSV configuration\n * @return {Vec3} the color in the RGB configuration\n */\nfunction hsv2rgb(color) {\n\tvar r, g, b, i, f, p, q, t;\n\ti = Math.floor(color.x * 6);\n\tf = color.x * 6 - i;\n\tp = color.z * (1 - color.y);\n\tq = color.z * (1 - f * color.y);\n\tt = color.z * (1 - (1 - f) * color.y);\n\tswitch (i % 6) {\n\t\tcase 0: r = color.z, g = t, b = p; break;\n\t\tcase 1: r = q, g = color.z, b = p; break;\n\t\tcase 2: r = p, g = color.z, b = t; break;\n\t\tcase 3: r = p, g = q, b = color.z; break;\n\t\tcase 4: r = t, g = p, b = color.z; break;\n\t\tcase 5: r = color.z, g = p, b = q; break;\n\t}\n\treturn new Vec3(r, g, b);\n}\n",
				"scriptproperties" : 
				{
					"active" : true,
					"anglesConfig" : "1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24",
					"colorConfig" : "",
					"opacityConfig" : "",
					"originConfig" : "",
					"rotationConfig" : "1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24",
					"scaleConfig" : "",
					"visibilityConfig" : ""
				},
				"value" : "0.00000 0.00000 0.00000"
			},
			"id" : 92,
			"locktransforms" : false,
			"model" : "models/block/block.mdl",
			"name" : "block",
			"origin" : "0.00000 0.00000 -0.72891",
			"parallaxDepth" : "1.00000 1.00000",
			"perspective" : false,
			"scale" : 
			{
				"script" : "'use strict';\n\nimport * as WEMath from 'WEMath';\n\nlet movementType = 0;\n/**\n * @param {Vec3} value - for property 'scale'\n * @return {Vec3} - update current property value\n */\nlet counter = 0.1;\nlet direction=0;\nlet usingmathfunc = false;\nlet time=0.01;\nlet vel=0;\nexport function angleOperations() { // Is being executed in The origin script to render correctly after the parent operations\n\tif(movementType == 1){\n\t\tif(direction==0){\n\t\t\t\tthisLayer.angles = new Vec3(0,0,smootherstep(0,180,counter)*360);\n\t\t\t\t\n\t\t}else\tif(direction==2){\n\t\t\t\tthisLayer.angles = new Vec3(0,0,-smootherstep(0,180,counter)*360);\n\t\t\t\t\n\t\t}else if(direction==1){\t\t\n\t\t\t\n\t\t\t\tthisLayer.angles = new Vec3(0,-smootherstep(0,180,counter)*360,0);\n\t\t\t\t\n\t\t}\telse if(direction==3){\t\t\n\t\t\t\n\t\t\t\tthisLayer.angles = new Vec3(0,smootherstep(0,180,counter)*360,0);\n\t\t\t\t\n\t\t}\t\n\t\t\n\t\t\tcounter+=engine.frametime*20;\n\t\t\n\t\tif(counter >= 180){\n\t\t\tcounter=0;\n\t\t\tdirection=(1+direction)%4;\n\t\t}\n\t}else if(movementType == 2){\n\t\ttime=(shared.smoothbass>0.4?Math.min(time*1.1,0.05):Math.max(time*0.95,0.003));\n\t\tthisLayer.rotateObjectSpace(new Vec3(0,time,0));\n\t}\n\t//thisLayer.rotateObjectSpace(new Vec3(0,0,0.01));\n\t\n\t\t\n/*\n\t\tif(shared.smoothbass>0.5){\n\t\t\tcounter = Math.min(0.05, counter*=1.1);\n\t\t\tthisLayer.rotateObjectSpace(new Vec3(0,counter*engine.frametime*50,0));\n\t\t\tusingmathfunc = false;\n\t\t}else{\n\t\t\tlet mathfunc = Math.sin(counter*150)*Math.log(counter*250)*(counter*500);\n\t\t\t\n\n\t\t\t\tthisLayer.angles = new Vec3(0,Math.max(0.01,thisLayer.angles.y-0.1),0);\n\t\t\t\n\t\t}\n\t\t*/\n\t\t\t\n\n\n}\nexport function smootherstep(a, b, x) {\n\tx = clamp((x - a) / (b - a), 0., 1.);\n\treturn x * x * x * (x * (x * 6. - 15.) + 10.);\n}\nfunction clamp(num, min, max) {\n\treturn num <= min ? min : num >= max ? max : num;\n}\n/**\n * @param {Vec3} value - for property 'scale'\n * @return {Vec3} - update current property value\n */\nexport function init() {\n\n}\nshared.angleOperations = angleOperations;\n/**\n * @param {Object} changedUserProperties - only includes user properties that were recently changed!\n */\nexport function applyUserProperties(uprops) {\n\tif(uprops.cubemovement != undefined){\n\t\t\n\t\tif(parseInt(uprops.cubemovement) != movementType || uprops.cubemovement == 0 ){\n\t\t\tthisLayer.angles = new Vec3(0,0,0);\n\t\t}\n\t\tmovementType= uprops.cubemovement;\n\t}\n}\n",
				"value" : "1.00000 1.00000 1.00000"
			}
		},
		{
			"angles" : "0.00000 0.00000 0.00000",
			"id" : 98,
			"locktransforms" : false,
			"model" : "models/block/block.mdl",
			"name" : "1",
			"origin" : "-0.47105 0.44034 0.27196",
			"parallaxDepth" : "1.00000 1.00000",
			"perspective" : false,
			"scale" : 
			{
				"animation" : 
				{
					"c0" : 
					[
						{
							"back" : 
							{
								"enabled" : true,
								"x" : -1,
								"y" : 0
							},
							"frame" : 0,
							"front" : 
							{
								"enabled" : true,
								"x" : 1,
								"y" : 0
							},
							"lockangle" : true,
							"locklength" : true,
							"value" : 0.41832
						},
						{
							"back" : 
							{
								"enabled" : true,
								"x" : -1,
								"y" : 0
							},
							"frame" : 29,
							"front" : 
							{
								"enabled" : true,
								"x" : 1,
								"y" : 0
							},
							"lockangle" : true,
							"locklength" : true,
							"value" : 0.41832
						}
					],
					"c1" : 
					[
						{
							"back" : 
							{
								"enabled" : true,
								"x" : -1,
								"y" : 0
							},
							"frame" : 0,
							"front" : 
							{
								"enabled" : true,
								"x" : 1,
								"y" : 0
							},
							"lockangle" : true,
							"locklength" : true,
							"value" : 0.41832
						},
						{
							"back" : 
							{
								"enabled" : true,
								"x" : -1,
								"y" : 0
							},
							"frame" : 29,
							"front" : 
							{
								"enabled" : true,
								"x" : 1,
								"y" : 0
							},
							"lockangle" : true,
							"locklength" : true,
							"value" : 0.41832
						}
					],
					"c2" : 
					[
						{
							"back" : 
							{
								"enabled" : true,
								"x" : -1,
								"y" : 0
							},
							"frame" : 0,
							"front" : 
							{
								"enabled" : true,
								"x" : 1,
								"y" : 0
							},
							"lockangle" : true,
							"locklength" : true,
							"value" : 0.050000001
						},
						{
							"back" : 
							{
								"enabled" : true,
								"x" : -1,
								"y" : 0
							},
							"frame" : 29,
							"front" : 
							{
								"enabled" : true,
								"x" : 1,
								"y" : 0
							},
							"lockangle" : true,
							"locklength" : true,
							"value" : 0.5
						}
					],
					"options" : 
					{
						"fps" : 5.8000002,
						"length" : 29,
						"mode" : "mirror",
						"name" : "idle",
						"startpaused" : true
					}
				},
				"script" : "'use strict';\n\nimport * as WEMath from 'WEMath';\n\n\nexport var scriptProperties = createScriptProperties()\n\t.addSlider({\n\t\tname: 'frequency',\n\t\tlabel: 'ui_editor_properties_audio_frequency',\n\t\tvalue: 0,\n\t\tmin: 0,\n\t\tmax: 15,\n\t\tinteger: true\n\t})\n\t.addSlider({\n\t\tname: 'smoothing',\n\t\tlabel: 'ui_editor_properties_audio_response',\n\t\tvalue: 2,\n\t\tmin: 0,\n\t\tmax: 20,\n\t\tinteger: false\n\t})\n\t.addSlider({\n\t\tname: 'minvalue',\n\t\tlabel: 'ui_editor_properties_min',\n\t\tvalue: 0.8,\n\t\tmin: 0,\n\t\tmax: 3,\n\t\tinteger: false\n\t})\n\t.addSlider({\n\t\tname: 'maxvalue',\n\t\tlabel: 'ui_editor_properties_max',\n\t\tvalue: 1.2,\n\t\tmin: 0,\n\t\tmax: 3,\n\t\tinteger: false\n\t})\n\t.addCheckbox({\n\t\tname: 'bassonly',\n\t\tlabel: 'Only Bass frequencies',\n\t\tvalue: false\n\t})\n\t.addCheckbox({\n\t\tname: 'smoothAudio',\n\t\tlabel: 'smoother Audio',\n\t\tvalue: false\n\t})\n\t.addCheckbox({\n\t\tname: 'idle',\n\t\tlabel: 'Idle Anim',\n\t\tvalue: true\n\t})\n\t.addSlider({\n\t\tname: 'smoothrate',\n\t\tlabel: 'Smooth rate',\n\t\tvalue: 5,\n\t\tmin: 2,\n\t\tmax: 50,\n\t\tinteger: true\n\t})\n\t.finish();\n\n/**\n * Configure these to control smoothing and the frequency.\n */\nlet frequencyResolution = 32; // Must be 16, 32 or 64 per channel.\n\n/**\n * This creates a permanent link to the audio response data.\n */\nlet audioBuffer = engine.registerAudioBuffers(frequencyResolution);\nvar smoothValue = 0;\nvar initialScale;\nvar cubeLayers = [];\nvar time = Date.now();\nvar currentfreq = 0;\nlet smoothvalue;\nvar audioCache = [];\nlet animtime = 0;\nlet fadein = 0;\n\n/**\n * Handles Cube idle animation and audio input\n */\n\nexport function update(value) {\n\tif (audioBuffer.average.reduce((a, b) => a + b) < 1 && engine.userProperties.idle) {\n\t\tidleProcessing();\n\n\t} else {\n\t\tfadein = 0;\n\t\taudioProcessing();\n\t}\n\n\n\n\n}\n\n\n/**\n * Incomming audio is being processed as normal. Smooth audio appends x samples into an array to find out the mean.\n *Audio  will be clamped from 0.2 to 1.1 to erase weak values.\n */\nexport function audioProcessing() {\n\tconst scaleDelta = scriptProperties.maxvalue - scriptProperties.minvalue;\n\n\tfor (var i = 0; i < cubeLayers.length; i++) {\n\t\tlet audioDelta = audioBuffer.average[i] - smoothValue;\n\t\tsmoothValue += audioDelta * Math.min(1.0, engine.frametime * scriptProperties.smoothing);\n\n\t\tif (scriptProperties.smoothAudio) {\n\t\t\taudioCache[i].unshift(audioBuffer.average[i]);//TODO: avg values in array return > 1...\n\t\t\taudioCache[i].length = scriptProperties.smoothrate;\n\t\t\tlet audiomean = (audioCache[i].reduce((a, b) => (a + b)) / (audioCache[i].length));\n\t\t\tsmoothvalue = normalize(0.2, 1, audiomean);\n\t\t\tif (i == 0) {\n\n\t\t\t\tshared.smoothbass = smoothvalue;\n\t\t\t}\n\t\t\tcubeLayers[i].scale = new Vec3(cubeLayers[i].scale.x, cubeLayers[i].scale.y, smoothvalue * scriptProperties.maxvalue * 0.05 + 0.03, scriptProperties.maxvalue);\n\n\t\t} else {\n\t\t\tcubeLayers[i].scale = new Vec3(cubeLayers[i].scale.x, cubeLayers[i].scale.y, initialScale.z * smoothValue * scaleDelta + scriptProperties.minvalue);\n\t\t}\n\t\tif (i == 0) {\n\n\t\t\tvar audio = initialScale.z * smoothValue * scaleDelta + scriptProperties.minvalue;\n\t\t\tshared.audiodata = audio;\n\t\t\tshared.smoothbass = (scriptProperties.smoothAudio ? shared.smoothbass : audio);\n\t\t}\n\t}\n\n}\n\n\nfunction idleProcessing() {\n\tcubeLayers.forEach((element, index) => {\n\t\tlet sideshift = 0;\n\t\tsideshift = (index / 4) || 0;\n\t\telement.scale = new Vec3(element.scale.x, element.scale.y, Math.max((Math.sin(animtime + sideshift + index * (Math.PI / 2)) / 4 + 0.33) * fadein, 0.03));\n\t});\n\tanimtime += engine.frametime / 2;\n\tanimtime >= Math.PI ? 0 : animtime;\n\tshared.smoothbass = 0;\n\tfadein = Math.min(1, fadein + 0.001);\n}\n\nexport function normalize(x, y, z) {\n\treturn Math.max(Math.min((z - x) / (y - x), 1), 0);\n}\n\n\nexport function smootherstep(a, b, x) {\n\tx = clamp((x - a) / (b - a), 0., 1.);\n\treturn x * x * x * (x * (x * 6. - 15.) + 10.);\n}\n\nfunction clamp(num, min, max) {\n\treturn num <= min ? min : num >= max ? max : num;\n}\n\n/**\n * @param {Vec3} value\n */\nexport function init(value) {\n\tfor (var i = 1; i < 25; i++) {\n\t\tcubeLayers.push(thisScene.getLayer(i.toString()));\n\t\taudioCache.push([0]);\n\t}\n\tinitialScale = value;\n}\n",
				"scriptproperties" : 
				{
					"bassonly" : false,
					"frequency" : 0,
					"idle" : 
					{
						"user" : "idle",
						"value" : true
					},
					"maxvalue" : 
					{
						"user" : "maximumsize",
						"value" : 1.2
					},
					"minvalue" : 0.079999998,
					"smoothAudio" : 
					{
						"user" : "smoothaudio",
						"value" : false
					},
					"smoothing" : 
					{
						"user" : "responsiveness",
						"value" : 2
					},
					"smoothrate" : 
					{
						"user" : "smoothrate",
						"value" : 5
					}
				},
				"value" : "0.41832 0.41832 0.05000"
			}
		},
		{
			"angles" : "0.00000 0.00000 0.00000",
			"id" : 99,
			"locktransforms" : false,
			"model" : "models/block/block.mdl",
			"name" : "2",
			"origin" : "-0.47105 -0.44034 0.27196",
			"parallaxDepth" : "1.00000 1.00000",
			"perspective" : false,
			"scale" : 
			{
				"animation" : 
				{
					"c0" : 
					[
						{
							"back" : 
							{
								"enabled" : true,
								"x" : -1,
								"y" : 0
							},
							"frame" : 0,
							"front" : 
							{
								"enabled" : true,
								"x" : 1,
								"y" : 0
							},
							"lockangle" : true,
							"locklength" : true,
							"value" : 0
						},
						{
							"back" : 
							{
								"enabled" : true,
								"x" : -1,
								"y" : 0
							},
							"frame" : 29,
							"front" : 
							{
								"enabled" : true,
								"x" : 1,
								"y" : 0
							},
							"lockangle" : true,
							"locklength" : true,
							"value" : 0
						}
					],
					"c1" : 
					[
						{
							"back" : 
							{
								"enabled" : true,
								"x" : -1,
								"y" : 0
							},
							"frame" : 0,
							"front" : 
							{
								"enabled" : true,
								"x" : 1,
								"y" : 0
							},
							"lockangle" : true,
							"locklength" : true,
							"value" : 0
						},
						{
							"back" : 
							{
								"enabled" : true,
								"x" : -1,
								"y" : 0
							},
							"frame" : 29,
							"front" : 
							{
								"enabled" : true,
								"x" : 1,
								"y" : 0
							},
							"lockangle" : true,
							"locklength" : true,
							"value" : 0
						}
					],
					"c2" : 
					[
						{
							"back" : 
							{
								"enabled" : true,
								"x" : -1,
								"y" : 0
							},
							"frame" : 0,
							"front" : 
							{
								"enabled" : true,
								"x" : 1,
								"y" : 0
							},
							"lockangle" : true,
							"locklength" : true,
							"value" : 0
						},
						{
							"back" : 
							{
								"enabled" : true,
								"x" : -1,
								"y" : 0
							},
							"frame" : 29,
							"front" : 
							{
								"enabled" : true,
								"x" : 1,
								"y" : 0
							},
							"lockangle" : true,
							"locklength" : true,
							"value" : 0.44999999
						}
					],
					"options" : 
					{
						"fps" : 5.8000002,
						"length" : 29,
						"mode" : "mirror",
						"name" : "idle",
						"startpaused" : true
					},
					"relative" : true
				},
				"value" : "0.41832 0.41832 0.05000"
			}
		},
		{
			"angles" : "0.00000 0.00000 0.00000",
			"id" : 100,
			"locktransforms" : false,
			"model" : "models/block/block.mdl",
			"name" : "3",
			"origin" : "0.47105 -0.44034 0.27196",
			"parallaxDepth" : "1.00000 1.00000",
			"perspective" : false,
			"scale" : 
			{
				"animation" : 
				{
					"c0" : 
					[
						{
							"back" : 
							{
								"enabled" : true,
								"x" : -1,
								"y" : 0
							},
							"frame" : 0,
							"front" : 
							{
								"enabled" : true,
								"x" : 1,
								"y" : 0
							},
							"lockangle" : true,
							"locklength" : true,
							"value" : 0
						},
						{
							"back" : 
							{
								"enabled" : true,
								"x" : -1,
								"y" : 0
							},
							"frame" : 29,
							"front" : 
							{
								"enabled" : true,
								"x" : 1,
								"y" : 0
							},
							"lockangle" : true,
							"locklength" : true,
							"value" : 0
						}
					],
					"c1" : 
					[
						{
							"back" : 
							{
								"enabled" : true,
								"x" : -1,
								"y" : 0
							},
							"frame" : 0,
							"front" : 
							{
								"enabled" : true,
								"x" : 1,
								"y" : 0
							},
							"lockangle" : true,
							"locklength" : true,
							"value" : 0
						},
						{
							"back" : 
							{
								"enabled" : true,
								"x" : -1,
								"y" : 0
							},
							"frame" : 29,
							"front" : 
							{
								"enabled" : true,
								"x" : 1,
								"y" : 0
							},
							"lockangle" : true,
							"locklength" : true,
							"value" : 0
						}
					],
					"c2" : 
					[
						{
							"back" : 
							{
								"enabled" : true,
								"x" : -1,
								"y" : 0
							},
							"frame" : 0,
							"front" : 
							{
								"enabled" : true,
								"x" : 1,
								"y" : 0
							},
							"lockangle" : true,
							"locklength" : true,
							"value" : 0
						},
						{
							"back" : 
							{
								"enabled" : true,
								"x" : -1,
								"y" : 0
							},
							"frame" : 29,
							"front" : 
							{
								"enabled" : true,
								"x" : 1,
								"y" : 0
							},
							"lockangle" : true,
							"locklength" : true,
							"value" : 0.44999999
						}
					],
					"options" : 
					{
						"fps" : 5.8000002,
						"length" : 29,
						"mode" : "mirror",
						"name" : "idle",
						"startpaused" : true
					},
					"relative" : true
				},
				"value" : "0.41832 0.41832 0.05000"
			}
		},
		{
			"angles" : "0.00000 0.00000 0.00000",
			"id" : 101,
			"locktransforms" : false,
			"model" : "models/block/block.mdl",
			"name" : "4",
			"origin" : "0.47105 0.44034 0.27196",
			"parallaxDepth" : "1.00000 1.00000",
			"perspective" : false,
			"scale" : 
			{
				"animation" : 
				{
					"c0" : 
					[
						{
							"back" : 
							{
								"enabled" : true,
								"x" : -1,
								"y" : 0
							},
							"frame" : 0,
							"front" : 
							{
								"enabled" : true,
								"x" : 1,
								"y" : 0
							},
							"lockangle" : true,
							"locklength" : true,
							"value" : 0
						},
						{
							"back" : 
							{
								"enabled" : true,
								"x" : -1,
								"y" : 0
							},
							"frame" : 29,
							"front" : 
							{
								"enabled" : true,
								"x" : 1,
								"y" : 0
							},
							"lockangle" : true,
							"locklength" : true,
							"value" : 0
						}
					],
					"c1" : 
					[
						{
							"back" : 
							{
								"enabled" : true,
								"x" : -1,
								"y" : 0
							},
							"frame" : 0,
							"front" : 
							{
								"enabled" : true,
								"x" : 1,
								"y" : 0
							},
							"lockangle" : true,
							"locklength" : true,
							"value" : 0
						},
						{
							"back" : 
							{
								"enabled" : true,
								"x" : -1,
								"y" : 0
							},
							"frame" : 29,
							"front" : 
							{
								"enabled" : true,
								"x" : 1,
								"y" : 0
							},
							"lockangle" : true,
							"locklength" : true,
							"value" : 0
						}
					],
					"c2" : 
					[
						{
							"back" : 
							{
								"enabled" : true,
								"x" : -1,
								"y" : 0
							},
							"frame" : 0,
							"front" : 
							{
								"enabled" : true,
								"x" : 1,
								"y" : 0
							},
							"lockangle" : true,
							"locklength" : true,
							"value" : 0
						},
						{
							"back" : 
							{
								"enabled" : true,
								"x" : -1,
								"y" : 0
							},
							"frame" : 29,
							"front" : 
							{
								"enabled" : true,
								"x" : 1,
								"y" : 0
							},
							"lockangle" : true,
							"locklength" : true,
							"value" : 0.44999999
						}
					],
					"options" : 
					{
						"fps" : 5.8000002,
						"length" : 29,
						"mode" : "mirror",
						"name" : "idle",
						"startpaused" : true
					},
					"relative" : true
				},
				"value" : "0.41832 0.41832 0.05000"
			}
		},
		{
			"angles" : "0.00000 -1.57080 0.00000",
			"id" : 138,
			"locktransforms" : false,
			"model" : "models/block/block.mdl",
			"name" : "5",
			"origin" : "-0.99950 0.44034 -0.24748",
			"parallaxDepth" : "1.00000 1.00000",
			"perspective" : false,
			"scale" : 
			{
				"animation" : 
				{
					"c0" : 
					[
						{
							"back" : 
							{
								"enabled" : true,
								"x" : -1,
								"y" : 0
							},
							"frame" : 0,
							"front" : 
							{
								"enabled" : true,
								"x" : 1,
								"y" : 0
							},
							"lockangle" : true,
							"locklength" : true,
							"value" : 0
						},
						{
							"back" : 
							{
								"enabled" : true,
								"x" : -1,
								"y" : 0
							},
							"frame" : 29,
							"front" : 
							{
								"enabled" : true,
								"x" : 1,
								"y" : 0
							},
							"lockangle" : true,
							"locklength" : true,
							"value" : 0
						}
					],
					"c1" : 
					[
						{
							"back" : 
							{
								"enabled" : true,
								"x" : -1,
								"y" : 0
							},
							"frame" : 0,
							"front" : 
							{
								"enabled" : true,
								"x" : 1,
								"y" : 0
							},
							"lockangle" : true,
							"locklength" : true,
							"value" : 0
						},
						{
							"back" : 
							{
								"enabled" : true,
								"x" : -1,
								"y" : 0
							},
							"frame" : 29,
							"front" : 
							{
								"enabled" : true,
								"x" : 1,
								"y" : 0
							},
							"lockangle" : true,
							"locklength" : true,
							"value" : 0
						}
					],
					"c2" : 
					[
						{
							"back" : 
							{
								"enabled" : true,
								"x" : -1,
								"y" : 0
							},
							"frame" : 0,
							"front" : 
							{
								"enabled" : true,
								"x" : 1,
								"y" : 0
							},
							"lockangle" : true,
							"locklength" : true,
							"value" : 0
						},
						{
							"back" : 
							{
								"enabled" : true,
								"x" : -1,
								"y" : 0
							},
							"frame" : 29,
							"front" : 
							{
								"enabled" : true,
								"x" : 1,
								"y" : 0
							},
							"lockangle" : true,
							"locklength" : true,
							"value" : 0.44999999
						}
					],
					"options" : 
					{
						"fps" : 5.8000002,
						"length" : 29,
						"mode" : "mirror",
						"name" : "idle",
						"startpaused" : true
					},
					"relative" : true
				},
				"value" : "0.41832 0.41832 0.05000"
			}
		},
		{
			"angles" : "0.00000 -1.57080 0.00000",
			"id" : 170,
			"locktransforms" : false,
			"model" : "models/block/block.mdl",
			"name" : "6",
			"origin" : "-0.99950 -0.44265 -0.24748",
			"parallaxDepth" : "1.00000 1.00000",
			"perspective" : false,
			"scale" : 
			{
				"animation" : 
				{
					"c0" : 
					[
						{
							"back" : 
							{
								"enabled" : true,
								"x" : -1,
								"y" : 0
							},
							"frame" : 0,
							"front" : 
							{
								"enabled" : true,
								"x" : 1,
								"y" : 0
							},
							"lockangle" : true,
							"locklength" : true,
							"value" : 0
						},
						{
							"back" : 
							{
								"enabled" : true,
								"x" : -1,
								"y" : 0
							},
							"frame" : 29,
							"front" : 
							{
								"enabled" : true,
								"x" : 1,
								"y" : 0
							},
							"lockangle" : true,
							"locklength" : true,
							"value" : 0
						}
					],
					"c1" : 
					[
						{
							"back" : 
							{
								"enabled" : true,
								"x" : -1,
								"y" : 0
							},
							"frame" : 0,
							"front" : 
							{
								"enabled" : true,
								"x" : 1,
								"y" : 0
							},
							"lockangle" : true,
							"locklength" : true,
							"value" : 0
						},
						{
							"back" : 
							{
								"enabled" : true,
								"x" : -1,
								"y" : 0
							},
							"frame" : 29,
							"front" : 
							{
								"enabled" : true,
								"x" : 1,
								"y" : 0
							},
							"lockangle" : true,
							"locklength" : true,
							"value" : 0
						}
					],
					"c2" : 
					[
						{
							"back" : 
							{
								"enabled" : true,
								"x" : -1,
								"y" : 0
							},
							"frame" : 0,
							"front" : 
							{
								"enabled" : true,
								"x" : 1,
								"y" : 0
							},
							"lockangle" : true,
							"locklength" : true,
							"value" : 0
						},
						{
							"back" : 
							{
								"enabled" : true,
								"x" : -1,
								"y" : 0
							},
							"frame" : 29,
							"front" : 
							{
								"enabled" : true,
								"x" : 1,
								"y" : 0
							},
							"lockangle" : true,
							"locklength" : true,
							"value" : 0.44999999
						}
					],
					"options" : 
					{
						"fps" : 5.8000002,
						"length" : 29,
						"mode" : "mirror",
						"name" : "idle",
						"startpaused" : true
					},
					"relative" : true
				},
				"value" : "0.41832 0.41832 0.05000"
			}
		},
		{
			"angles" : "0.00000 -1.57080 0.00000",
			"id" : 173,
			"locktransforms" : false,
			"model" : "models/block/block.mdl",
			"name" : "7",
			"origin" : "-0.99950 -0.44265 -1.19736",
			"parallaxDepth" : "1.00000 1.00000",
			"perspective" : false,
			"scale" : 
			{
				"animation" : 
				{
					"c0" : 
					[
						{
							"back" : 
							{
								"enabled" : true,
								"x" : -1,
								"y" : 0
							},
							"frame" : 0,
							"front" : 
							{
								"enabled" : true,
								"x" : 1,
								"y" : 0
							},
							"lockangle" : true,
							"locklength" : true,
							"value" : 0
						},
						{
							"back" : 
							{
								"enabled" : true,
								"x" : -1,
								"y" : 0
							},
							"frame" : 29,
							"front" : 
							{
								"enabled" : true,
								"x" : 1,
								"y" : 0
							},
							"lockangle" : true,
							"locklength" : true,
							"value" : 0
						}
					],
					"c1" : 
					[
						{
							"back" : 
							{
								"enabled" : true,
								"x" : -1,
								"y" : 0
							},
							"frame" : 0,
							"front" : 
							{
								"enabled" : true,
								"x" : 1,
								"y" : 0
							},
							"lockangle" : true,
							"locklength" : true,
							"value" : 0
						},
						{
							"back" : 
							{
								"enabled" : true,
								"x" : -1,
								"y" : 0
							},
							"frame" : 29,
							"front" : 
							{
								"enabled" : true,
								"x" : 1,
								"y" : 0
							},
							"lockangle" : true,
							"locklength" : true,
							"value" : 0
						}
					],
					"c2" : 
					[
						{
							"back" : 
							{
								"enabled" : true,
								"x" : -1,
								"y" : 0
							},
							"frame" : 0,
							"front" : 
							{
								"enabled" : true,
								"x" : 1,
								"y" : 0
							},
							"lockangle" : true,
							"locklength" : true,
							"value" : 0
						},
						{
							"back" : 
							{
								"enabled" : true,
								"x" : -1,
								"y" : 0
							},
							"frame" : 29,
							"front" : 
							{
								"enabled" : true,
								"x" : 1,
								"y" : 0
							},
							"lockangle" : true,
							"locklength" : true,
							"value" : 0.44999999
						}
					],
					"options" : 
					{
						"fps" : 5.8000002,
						"length" : 29,
						"mode" : "mirror",
						"name" : "idle",
						"startpaused" : true
					},
					"relative" : true
				},
				"value" : "0.41832 0.41832 0.05000"
			}
		},
		{
			"angles" : "0.00000 -1.57080 0.00000",
			"id" : 174,
			"locktransforms" : false,
			"model" : "models/block/block.mdl",
			"name" : "8",
			"origin" : "-0.99950 0.44368 -1.19736",
			"parallaxDepth" : "1.00000 1.00000",
			"perspective" : false,
			"scale" : 
			{
				"animation" : 
				{
					"c0" : 
					[
						{
							"back" : 
							{
								"enabled" : true,
								"x" : -1,
								"y" : 0
							},
							"frame" : 0,
							"front" : 
							{
								"enabled" : true,
								"x" : 1,
								"y" : 0
							},
							"lockangle" : true,
							"locklength" : true,
							"value" : 0
						},
						{
							"back" : 
							{
								"enabled" : true,
								"x" : -1,
								"y" : 0
							},
							"frame" : 29,
							"front" : 
							{
								"enabled" : true,
								"x" : 1,
								"y" : 0
							},
							"lockangle" : true,
							"locklength" : true,
							"value" : 0
						}
					],
					"c1" : 
					[
						{
							"back" : 
							{
								"enabled" : true,
								"x" : -1,
								"y" : 0
							},
							"frame" : 0,
							"front" : 
							{
								"enabled" : true,
								"x" : 1,
								"y" : 0
							},
							"lockangle" : true,
							"locklength" : true,
							"value" : 0
						},
						{
							"back" : 
							{
								"enabled" : true,
								"x" : -1,
								"y" : 0
							},
							"frame" : 29,
							"front" : 
							{
								"enabled" : true,
								"x" : 1,
								"y" : 0
							},
							"lockangle" : true,
							"locklength" : true,
							"value" : 0
						}
					],
					"c2" : 
					[
						{
							"back" : 
							{
								"enabled" : true,
								"x" : -1,
								"y" : 0
							},
							"frame" : 0,
							"front" : 
							{
								"enabled" : true,
								"x" : 1,
								"y" : 0
							},
							"lockangle" : true,
							"locklength" : true,
							"value" : 0
						},
						{
							"back" : 
							{
								"enabled" : true,
								"x" : -1,
								"y" : 0
							},
							"frame" : 29,
							"front" : 
							{
								"enabled" : true,
								"x" : 1,
								"y" : 0
							},
							"lockangle" : true,
							"locklength" : true,
							"value" : 0.44999999
						}
					],
					"options" : 
					{
						"fps" : 5.8000002,
						"length" : 29,
						"mode" : "mirror",
						"name" : "idle",
						"startpaused" : true
					},
					"relative" : true
				},
				"value" : "0.41832 0.41832 0.05000"
			}
		},
		{
			"angles" : "-1.57080 -1.57080 0.00000",
			"id" : 178,
			"locktransforms" : false,
			"model" : "models/block/block.mdl",
			"name" : "9",
			"origin" : "-0.46468 -0.99416 -1.19736",
			"parallaxDepth" : "1.00000 1.00000",
			"perspective" : false,
			"scale" : 
			{
				"animation" : 
				{
					"c0" : 
					[
						{
							"back" : 
							{
								"enabled" : true,
								"x" : -1,
								"y" : 0
							},
							"frame" : 0,
							"front" : 
							{
								"enabled" : true,
								"x" : 1,
								"y" : 0
							},
							"lockangle" : true,
							"locklength" : true,
							"value" : 0
						},
						{
							"back" : 
							{
								"enabled" : true,
								"x" : -1,
								"y" : 0
							},
							"frame" : 29,
							"front" : 
							{
								"enabled" : true,
								"x" : 1,
								"y" : 0
							},
							"lockangle" : true,
							"locklength" : true,
							"value" : 0
						}
					],
					"c1" : 
					[
						{
							"back" : 
							{
								"enabled" : true,
								"x" : -1,
								"y" : 0
							},
							"frame" : 0,
							"front" : 
							{
								"enabled" : true,
								"x" : 1,
								"y" : 0
							},
							"lockangle" : true,
							"locklength" : true,
							"value" : 0
						},
						{
							"back" : 
							{
								"enabled" : true,
								"x" : -1,
								"y" : 0
							},
							"frame" : 29,
							"front" : 
							{
								"enabled" : true,
								"x" : 1,
								"y" : 0
							},
							"lockangle" : true,
							"locklength" : true,
							"value" : 0
						}
					],
					"c2" : 
					[
						{
							"back" : 
							{
								"enabled" : true,
								"x" : -1,
								"y" : 0
							},
							"frame" : 0,
							"front" : 
							{
								"enabled" : true,
								"x" : 1,
								"y" : 0
							},
							"lockangle" : true,
							"locklength" : true,
							"value" : 0
						},
						{
							"back" : 
							{
								"enabled" : true,
								"x" : -1,
								"y" : 0
							},
							"frame" : 29,
							"front" : 
							{
								"enabled" : true,
								"x" : 1,
								"y" : 0
							},
							"lockangle" : true,
							"locklength" : true,
							"value" : 0.44999999
						}
					],
					"options" : 
					{
						"fps" : 5.8000002,
						"length" : 29,
						"mode" : "mirror",
						"name" : "idle",
						"startpaused" : true
					},
					"relative" : true
				},
				"script" : "'use strict';\n\n/**\n * @param {Vec3} value - for property 'scale'\n * @return {Vec3} - update current property value\n */\nexport function update(value) {\n\t\n\treturn value;\n}\n",
				"value" : "0.41832 0.41832 0.05000"
			}
		},
		{
			"angles" : "-1.57080 -1.57080 0.00000",
			"id" : 179,
			"locktransforms" : false,
			"model" : "models/block/block.mdl",
			"name" : "10",
			"origin" : "0.46468 -0.99416 -1.19736",
			"parallaxDepth" : "1.00000 1.00000",
			"perspective" : false,
			"scale" : 
			{
				"animation" : 
				{
					"c0" : 
					[
						{
							"back" : 
							{
								"enabled" : true,
								"x" : -1,
								"y" : 0
							},
							"frame" : 0,
							"front" : 
							{
								"enabled" : true,
								"x" : 1,
								"y" : 0
							},
							"lockangle" : true,
							"locklength" : true,
							"value" : 0
						},
						{
							"back" : 
							{
								"enabled" : true,
								"x" : -1,
								"y" : 0
							},
							"frame" : 29,
							"front" : 
							{
								"enabled" : true,
								"x" : 1,
								"y" : 0
							},
							"lockangle" : true,
							"locklength" : true,
							"value" : 0
						}
					],
					"c1" : 
					[
						{
							"back" : 
							{
								"enabled" : true,
								"x" : -1,
								"y" : 0
							},
							"frame" : 0,
							"front" : 
							{
								"enabled" : true,
								"x" : 1,
								"y" : 0
							},
							"lockangle" : true,
							"locklength" : true,
							"value" : 0
						},
						{
							"back" : 
							{
								"enabled" : true,
								"x" : -1,
								"y" : 0
							},
							"frame" : 29,
							"front" : 
							{
								"enabled" : true,
								"x" : 1,
								"y" : 0
							},
							"lockangle" : true,
							"locklength" : true,
							"value" : 0
						}
					],
					"c2" : 
					[
						{
							"back" : 
							{
								"enabled" : true,
								"x" : -1,
								"y" : 0
							},
							"frame" : 0,
							"front" : 
							{
								"enabled" : true,
								"x" : 1,
								"y" : 0
							},
							"lockangle" : true,
							"locklength" : true,
							"value" : 0
						},
						{
							"back" : 
							{
								"enabled" : true,
								"x" : -1,
								"y" : 0
							},
							"frame" : 29,
							"front" : 
							{
								"enabled" : true,
								"x" : 1,
								"y" : 0
							},
							"lockangle" : true,
							"locklength" : true,
							"value" : 0.44999999
						}
					],
					"options" : 
					{
						"fps" : 5.8000002,
						"length" : 29,
						"mode" : "mirror",
						"name" : "idle",
						"startpaused" : true
					},
					"relative" : true
				},
				"value" : "0.41832 0.41832 0.05000"
			}
		},
		{
			"angles" : "-1.57080 -1.57080 0.00000",
			"id" : 181,
			"locktransforms" : false,
			"model" : "models/block/block.mdl",
			"name" : "11",
			"origin" : "0.46468 -0.99416 -0.24557",
			"parallaxDepth" : "1.00000 1.00000",
			"perspective" : false,
			"scale" : 
			{
				"animation" : 
				{
					"c0" : 
					[
						{
							"back" : 
							{
								"enabled" : true,
								"x" : -1,
								"y" : 0
							},
							"frame" : 0,
							"front" : 
							{
								"enabled" : true,
								"x" : 1,
								"y" : 0
							},
							"lockangle" : true,
							"locklength" : true,
							"value" : 0
						},
						{
							"back" : 
							{
								"enabled" : true,
								"x" : -1,
								"y" : 0
							},
							"frame" : 29,
							"front" : 
							{
								"enabled" : true,
								"x" : 1,
								"y" : 0
							},
							"lockangle" : true,
							"locklength" : true,
							"value" : 0
						}
					],
					"c1" : 
					[
						{
							"back" : 
							{
								"enabled" : true,
								"x" : -1,
								"y" : 0
							},
							"frame" : 0,
							"front" : 
							{
								"enabled" : true,
								"x" : 1,
								"y" : 0
							},
							"lockangle" : true,
							"locklength" : true,
							"value" : 0
						},
						{
							"back" : 
							{
								"enabled" : true,
								"x" : -1,
								"y" : 0
							},
							"frame" : 29,
							"front" : 
							{
								"enabled" : true,
								"x" : 1,
								"y" : 0
							},
							"lockangle" : true,
							"locklength" : true,
							"value" : 0
						}
					],
					"c2" : 
					[
						{
							"back" : 
							{
								"enabled" : true,
								"x" : -1,
								"y" : 0
							},
							"frame" : 0,
							"front" : 
							{
								"enabled" : true,
								"x" : 1,
								"y" : 0
							},
							"lockangle" : true,
							"locklength" : true,
							"value" : 0
						},
						{
							"back" : 
							{
								"enabled" : true,
								"x" : -1,
								"y" : 0
							},
							"frame" : 29,
							"front" : 
							{
								"enabled" : true,
								"x" : 1,
								"y" : 0
							},
							"lockangle" : true,
							"locklength" : true,
							"value" : 0.44999999
						}
					],
					"options" : 
					{
						"fps" : 5.8000002,
						"length" : 29,
						"mode" : "mirror",
						"name" : "idle",
						"startpaused" : true
					},
					"relative" : true
				},
				"script" : "'use strict';\n\n/**\n * @param {Vec3} value - for property 'scale'\n * @return {Vec3} - update current property value\n */\nexport function update(value) {\n\t\n\treturn value;\n}\n",
				"value" : "0.41832 0.41832 0.05000"
			}
		},
		{
			"angles" : "-1.57080 -1.57080 0.00000",
			"id" : 182,
			"locktransforms" : false,
			"model" : "models/block/block.mdl",
			"name" : "12",
			"origin" : "-0.46468 -0.99416 -0.25087",
			"parallaxDepth" : "1.00000 1.00000",
			"perspective" : false,
			"scale" : 
			{
				"animation" : 
				{
					"c0" : 
					[
						{
							"back" : 
							{
								"enabled" : true,
								"x" : -1,
								"y" : 0
							},
							"frame" : 0,
							"front" : 
							{
								"enabled" : true,
								"x" : 1,
								"y" : 0
							},
							"lockangle" : true,
							"locklength" : true,
							"value" : 0.41832
						},
						{
							"back" : 
							{
								"enabled" : true,
								"x" : -1,
								"y" : 0
							},
							"frame" : 29,
							"front" : 
							{
								"enabled" : true,
								"x" : 1,
								"y" : 0
							},
							"lockangle" : true,
							"locklength" : true,
							"value" : 0.41832
						}
					],
					"c1" : 
					[
						{
							"back" : 
							{
								"enabled" : true,
								"x" : -1,
								"y" : 0
							},
							"frame" : 0,
							"front" : 
							{
								"enabled" : true,
								"x" : 1,
								"y" : 0
							},
							"lockangle" : true,
							"locklength" : true,
							"value" : 0.41832
						},
						{
							"back" : 
							{
								"enabled" : true,
								"x" : -1,
								"y" : 0
							},
							"frame" : 29,
							"front" : 
							{
								"enabled" : true,
								"x" : 1,
								"y" : 0
							},
							"lockangle" : true,
							"locklength" : true,
							"value" : 0.41832
						}
					],
					"c2" : 
					[
						{
							"back" : 
							{
								"enabled" : true,
								"x" : -1,
								"y" : 0
							},
							"frame" : 0,
							"front" : 
							{
								"enabled" : true,
								"x" : 1,
								"y" : 0
							},
							"lockangle" : true,
							"locklength" : true,
							"value" : 0.050000001
						},
						{
							"back" : 
							{
								"enabled" : true,
								"x" : -1,
								"y" : 0
							},
							"frame" : 29,
							"front" : 
							{
								"enabled" : true,
								"x" : 1,
								"y" : 0
							},
							"lockangle" : true,
							"locklength" : true,
							"value" : 0.5
						}
					],
					"options" : 
					{
						"fps" : 5.8000002,
						"length" : 29,
						"mode" : "mirror",
						"name" : "idle",
						"startpaused" : true
					}
				},
				"value" : "0.41832 0.41832 0.05000"
			}
		},
		{
			"angles" : "-1.57080 -1.57080 0.00000",
			"id" : 215,
			"locktransforms" : false,
			"model" : "models/block/block.mdl",
			"name" : "13",
			"origin" : "-0.46468 0.99416 -0.25087",
			"parallaxDepth" : "1.00000 1.00000",
			"perspective" : false,
			"scale" : 
			{
				"animation" : 
				{
					"c0" : 
					[
						{
							"back" : 
							{
								"enabled" : true,
								"x" : -1,
								"y" : 0
							},
							"frame" : 0,
							"front" : 
							{
								"enabled" : true,
								"x" : 1,
								"y" : 0
							},
							"lockangle" : true,
							"locklength" : true,
							"value" : 0.41832
						},
						{
							"back" : 
							{
								"enabled" : true,
								"x" : -1,
								"y" : 0
							},
							"frame" : 29,
							"front" : 
							{
								"enabled" : true,
								"x" : 1,
								"y" : 0
							},
							"lockangle" : true,
							"locklength" : true,
							"value" : 0.41832
						}
					],
					"c1" : 
					[
						{
							"back" : 
							{
								"enabled" : true,
								"x" : -1,
								"y" : 0
							},
							"frame" : 0,
							"front" : 
							{
								"enabled" : true,
								"x" : 1,
								"y" : 0
							},
							"lockangle" : true,
							"locklength" : true,
							"value" : 0.41832
						},
						{
							"back" : 
							{
								"enabled" : true,
								"x" : -1,
								"y" : 0
							},
							"frame" : 29,
							"front" : 
							{
								"enabled" : true,
								"x" : 1,
								"y" : 0
							},
							"lockangle" : true,
							"locklength" : true,
							"value" : 0.41832
						}
					],
					"c2" : 
					[
						{
							"back" : 
							{
								"enabled" : true,
								"x" : -1,
								"y" : 0
							},
							"frame" : 0,
							"front" : 
							{
								"enabled" : true,
								"x" : 1,
								"y" : 0
							},
							"lockangle" : true,
							"locklength" : true,
							"value" : 0.050000001
						},
						{
							"back" : 
							{
								"enabled" : true,
								"x" : -1,
								"y" : 0
							},
							"frame" : 29,
							"front" : 
							{
								"enabled" : true,
								"x" : 1,
								"y" : 0
							},
							"lockangle" : true,
							"locklength" : true,
							"value" : 0.5
						}
					],
					"options" : 
					{
						"fps" : 5.8000002,
						"length" : 29.000002,
						"mode" : "mirror",
						"name" : "idle12",
						"startpaused" : true
					}
				},
				"value" : "0.41832 0.41832 0.05000"
			}
		},
		{
			"angles" : "-1.57080 -1.57080 0.00000",
			"id" : 216,
			"locktransforms" : false,
			"model" : "models/block/block.mdl",
			"name" : "14",
			"origin" : "0.46468 0.99416 -0.25087",
			"parallaxDepth" : "1.00000 1.00000",
			"perspective" : false,
			"scale" : 
			{
				"animation" : 
				{
					"c0" : 
					[
						{
							"back" : 
							{
								"enabled" : true,
								"x" : -1,
								"y" : 0
							},
							"frame" : 0,
							"front" : 
							{
								"enabled" : true,
								"x" : 1,
								"y" : 0
							},
							"lockangle" : true,
							"locklength" : true,
							"value" : 0
						},
						{
							"back" : 
							{
								"enabled" : true,
								"x" : -1,
								"y" : 0
							},
							"frame" : 1,
							"front" : 
							{
								"enabled" : true,
								"x" : 1,
								"y" : 0
							},
							"lockangle" : true,
							"locklength" : true,
							"value" : 0
						},
						{
							"back" : 
							{
								"enabled" : true,
								"x" : -1,
								"y" : 0
							},
							"frame" : 29,
							"front" : 
							{
								"enabled" : true,
								"x" : 1,
								"y" : 0
							},
							"lockangle" : true,
							"locklength" : true,
							"value" : 0
						}
					],
					"c1" : 
					[
						{
							"back" : 
							{
								"enabled" : true,
								"x" : -1,
								"y" : 0
							},
							"frame" : 0,
							"front" : 
							{
								"enabled" : true,
								"x" : 1,
								"y" : 0
							},
							"lockangle" : true,
							"locklength" : true,
							"value" : 0
						},
						{
							"back" : 
							{
								"enabled" : true,
								"x" : -1,
								"y" : 0
							},
							"frame" : 1,
							"front" : 
							{
								"enabled" : true,
								"x" : 1,
								"y" : 0
							},
							"lockangle" : true,
							"locklength" : true,
							"value" : 0
						},
						{
							"back" : 
							{
								"enabled" : true,
								"x" : -1,
								"y" : 0
							},
							"frame" : 29,
							"front" : 
							{
								"enabled" : true,
								"x" : 1,
								"y" : 0
							},
							"lockangle" : true,
							"locklength" : true,
							"value" : 0
						}
					],
					"c2" : 
					[
						{
							"back" : 
							{
								"enabled" : true,
								"x" : -1,
								"y" : 0
							},
							"frame" : 0,
							"front" : 
							{
								"enabled" : true,
								"x" : 1,
								"y" : 0
							},
							"lockangle" : true,
							"locklength" : true,
							"value" : 0
						},
						{
							"back" : 
							{
								"enabled" : true,
								"x" : -1,
								"y" : 0
							},
							"frame" : 1,
							"front" : 
							{
								"enabled" : true,
								"x" : 1,
								"y" : 0
							},
							"lockangle" : true,
							"locklength" : true,
							"value" : 0
						},
						{
							"back" : 
							{
								"enabled" : true,
								"x" : -1,
								"y" : 0
							},
							"frame" : 29,
							"front" : 
							{
								"enabled" : true,
								"x" : 1,
								"y" : 0
							},
							"lockangle" : true,
							"locklength" : true,
							"value" : 0.44999999
						}
					],
					"options" : 
					{
						"fps" : 5.8000002,
						"length" : 29.000002,
						"mode" : "single",
						"name" : "idle13",
						"startpaused" : true
					},
					"relative" : true
				},
				"value" : "0.41832 0.41832 0.05000"
			}
		},
		{
			"angles" : "-1.57080 -1.57080 0.00000",
			"id" : 217,
			"locktransforms" : false,
			"model" : "models/block/block.mdl",
			"name" : "15",
			"origin" : "0.46469 0.99416 -1.17697",
			"parallaxDepth" : "1.00000 1.00000",
			"perspective" : false,
			"scale" : "0.41832 0.41832 0.05000"
		},
		{
			"angles" : "-1.57080 -1.57080 0.00000",
			"id" : 218,
			"locktransforms" : false,
			"model" : "models/block/block.mdl",
			"name" : "16",
			"origin" : "-0.46469 0.99416 -1.17697",
			"parallaxDepth" : "1.00000 1.00000",
			"perspective" : false,
			"scale" : "0.41832 0.41832 0.05000"
		},
		{
			"angles" : "0.00000 0.00000 0.00000",
			"id" : 169,
			"locktransforms" : false,
			"model" : "models/block/block.mdl",
			"name" : "17",
			"origin" : "-0.48741 0.44043 -1.71565",
			"parallaxDepth" : "1.00000 1.00000",
			"perspective" : false,
			"scale" : 
			{
				"animation" : 
				{
					"c0" : 
					[
						{
							"back" : 
							{
								"enabled" : true,
								"x" : -1,
								"y" : 0
							},
							"frame" : 0,
							"front" : 
							{
								"enabled" : true,
								"x" : 1,
								"y" : 0
							},
							"lockangle" : true,
							"locklength" : true,
							"value" : 0
						},
						{
							"back" : 
							{
								"enabled" : true,
								"x" : -1,
								"y" : 0
							},
							"frame" : 29,
							"front" : 
							{
								"enabled" : true,
								"x" : 1,
								"y" : 0
							},
							"lockangle" : true,
							"locklength" : true,
							"value" : 0
						}
					],
					"c1" : 
					[
						{
							"back" : 
							{
								"enabled" : true,
								"x" : -1,
								"y" : 0
							},
							"frame" : 0,
							"front" : 
							{
								"enabled" : true,
								"x" : 1,
								"y" : 0
							},
							"lockangle" : true,
							"locklength" : true,
							"value" : 0
						},
						{
							"back" : 
							{
								"enabled" : true,
								"x" : -1,
								"y" : 0
							},
							"frame" : 29,
							"front" : 
							{
								"enabled" : true,
								"x" : 1,
								"y" : 0
							},
							"lockangle" : true,
							"locklength" : true,
							"value" : 0
						}
					],
					"c2" : 
					[
						{
							"back" : 
							{
								"enabled" : true,
								"x" : -1,
								"y" : 0
							},
							"frame" : 0,
							"front" : 
							{
								"enabled" : true,
								"x" : 1,
								"y" : 0
							},
							"lockangle" : true,
							"locklength" : true,
							"value" : 0
						},
						{
							"back" : 
							{
								"enabled" : true,
								"x" : -1,
								"y" : 0
							},
							"frame" : 29,
							"front" : 
							{
								"enabled" : true,
								"x" : 1,
								"y" : 0
							},
							"lockangle" : true,
							"locklength" : true,
							"value" : 0.44999999
						}
					],
					"options" : 
					{
						"fps" : 5.8000002,
						"length" : 29,
						"mode" : "mirror",
						"name" : "idle",
						"startpaused" : true
					},
					"relative" : true
				},
				"value" : "0.41832 0.41832 0.05000"
			}
		},
		{
			"angles" : "0.00000 0.00000 0.00000",
			"id" : 184,
			"locktransforms" : false,
			"model" : "models/block/block.mdl",
			"name" : "18",
			"origin" : "0.48741 0.44043 -1.71565",
			"parallaxDepth" : "1.00000 1.00000",
			"perspective" : false,
			"scale" : 
			{
				"animation" : 
				{
					"c0" : 
					[
						{
							"back" : 
							{
								"enabled" : true,
								"x" : -1,
								"y" : 0
							},
							"frame" : 0,
							"front" : 
							{
								"enabled" : true,
								"x" : 1,
								"y" : 0
							},
							"lockangle" : true,
							"locklength" : true,
							"value" : 0
						},
						{
							"back" : 
							{
								"enabled" : true,
								"x" : -1,
								"y" : 0
							},
							"frame" : 29,
							"front" : 
							{
								"enabled" : true,
								"x" : 1,
								"y" : 0
							},
							"lockangle" : true,
							"locklength" : true,
							"value" : 0
						}
					],
					"c1" : 
					[
						{
							"back" : 
							{
								"enabled" : true,
								"x" : -1,
								"y" : 0
							},
							"frame" : 0,
							"front" : 
							{
								"enabled" : true,
								"x" : 1,
								"y" : 0
							},
							"lockangle" : true,
							"locklength" : true,
							"value" : 0
						},
						{
							"back" : 
							{
								"enabled" : true,
								"x" : -1,
								"y" : 0
							},
							"frame" : 29,
							"front" : 
							{
								"enabled" : true,
								"x" : 1,
								"y" : 0
							},
							"lockangle" : true,
							"locklength" : true,
							"value" : 0
						}
					],
					"c2" : 
					[
						{
							"back" : 
							{
								"enabled" : true,
								"x" : -1,
								"y" : 0
							},
							"frame" : 0,
							"front" : 
							{
								"enabled" : true,
								"x" : 1,
								"y" : 0
							},
							"lockangle" : true,
							"locklength" : true,
							"value" : 0
						},
						{
							"back" : 
							{
								"enabled" : true,
								"x" : -1,
								"y" : 0
							},
							"frame" : 29,
							"front" : 
							{
								"enabled" : true,
								"x" : 1,
								"y" : 0
							},
							"lockangle" : true,
							"locklength" : true,
							"value" : 0.44999999
						}
					],
					"options" : 
					{
						"fps" : 5.8000002,
						"length" : 29,
						"mode" : "mirror",
						"name" : "idle",
						"startpaused" : true
					},
					"relative" : true
				},
				"value" : "0.41832 0.41832 0.05000"
			}
		},
		{
			"angles" : "0.00000 0.00000 0.00000",
			"id" : 183,
			"locktransforms" : false,
			"model" : "models/block/block.mdl",
			"name" : "19",
			"origin" : "-0.48741 -0.44043 -1.71565",
			"parallaxDepth" : "1.00000 1.00000",
			"perspective" : false,
			"scale" : 
			{
				"animation" : 
				{
					"c0" : 
					[
						{
							"back" : 
							{
								"enabled" : true,
								"x" : -1,
								"y" : 0
							},
							"frame" : 0,
							"front" : 
							{
								"enabled" : true,
								"x" : 1,
								"y" : 0
							},
							"lockangle" : true,
							"locklength" : true,
							"value" : 0
						},
						{
							"back" : 
							{
								"enabled" : true,
								"x" : -1,
								"y" : 0
							},
							"frame" : 29,
							"front" : 
							{
								"enabled" : true,
								"x" : 1,
								"y" : 0
							},
							"lockangle" : true,
							"locklength" : true,
							"value" : 0
						}
					],
					"c1" : 
					[
						{
							"back" : 
							{
								"enabled" : true,
								"x" : -1,
								"y" : 0
							},
							"frame" : 0,
							"front" : 
							{
								"enabled" : true,
								"x" : 1,
								"y" : 0
							},
							"lockangle" : true,
							"locklength" : true,
							"value" : 0
						},
						{
							"back" : 
							{
								"enabled" : true,
								"x" : -1,
								"y" : 0
							},
							"frame" : 29,
							"front" : 
							{
								"enabled" : true,
								"x" : 1,
								"y" : 0
							},
							"lockangle" : true,
							"locklength" : true,
							"value" : 0
						}
					],
					"c2" : 
					[
						{
							"back" : 
							{
								"enabled" : true,
								"x" : -1,
								"y" : 0
							},
							"frame" : 0,
							"front" : 
							{
								"enabled" : true,
								"x" : 1,
								"y" : 0
							},
							"lockangle" : true,
							"locklength" : true,
							"value" : 0
						},
						{
							"back" : 
							{
								"enabled" : true,
								"x" : -1,
								"y" : 0
							},
							"frame" : 29,
							"front" : 
							{
								"enabled" : true,
								"x" : 1,
								"y" : 0
							},
							"lockangle" : true,
							"locklength" : true,
							"value" : 0.44999999
						}
					],
					"options" : 
					{
						"fps" : 5.8000002,
						"length" : 29,
						"mode" : "mirror",
						"name" : "idle",
						"startpaused" : true
					},
					"relative" : true
				},
				"value" : "0.41832 0.41832 0.05000"
			}
		},
		{
			"angles" : "0.00000 0.00000 0.00000",
			"id" : 180,
			"locktransforms" : false,
			"model" : "models/block/block.mdl",
			"name" : "20",
			"origin" : "0.48741 -0.44043 -1.71565",
			"parallaxDepth" : "1.00000 1.00000",
			"perspective" : false,
			"scale" : 
			{
				"animation" : 
				{
					"c0" : 
					[
						{
							"back" : 
							{
								"enabled" : true,
								"x" : -1,
								"y" : 0
							},
							"frame" : 0,
							"front" : 
							{
								"enabled" : true,
								"x" : 1,
								"y" : 0
							},
							"lockangle" : true,
							"locklength" : true,
							"value" : 0
						},
						{
							"back" : 
							{
								"enabled" : true,
								"x" : -1,
								"y" : 0
							},
							"frame" : 29,
							"front" : 
							{
								"enabled" : true,
								"x" : 1,
								"y" : 0
							},
							"lockangle" : true,
							"locklength" : true,
							"value" : 0
						}
					],
					"c1" : 
					[
						{
							"back" : 
							{
								"enabled" : true,
								"x" : -1,
								"y" : 0
							},
							"frame" : 0,
							"front" : 
							{
								"enabled" : true,
								"x" : 1,
								"y" : 0
							},
							"lockangle" : true,
							"locklength" : true,
							"value" : 0
						},
						{
							"back" : 
							{
								"enabled" : true,
								"x" : -1,
								"y" : 0
							},
							"frame" : 29,
							"front" : 
							{
								"enabled" : true,
								"x" : 1,
								"y" : 0
							},
							"lockangle" : true,
							"locklength" : true,
							"value" : 0
						}
					],
					"c2" : 
					[
						{
							"back" : 
							{
								"enabled" : true,
								"x" : -1,
								"y" : 0
							},
							"frame" : 0,
							"front" : 
							{
								"enabled" : true,
								"x" : 1,
								"y" : 0
							},
							"lockangle" : true,
							"locklength" : true,
							"value" : 0
						},
						{
							"back" : 
							{
								"enabled" : true,
								"x" : -1,
								"y" : 0
							},
							"frame" : 29,
							"front" : 
							{
								"enabled" : true,
								"x" : 1,
								"y" : 0
							},
							"lockangle" : true,
							"locklength" : true,
							"value" : 0.44999999
						}
					],
					"options" : 
					{
						"fps" : 5.8000002,
						"length" : 29,
						"mode" : "mirror",
						"name" : "idle",
						"startpaused" : true
					},
					"relative" : true
				},
				"value" : "0.41832 0.41832 0.05000"
			}
		},
		{
			"angles" : "0.00000 1.57080 0.00000",
			"id" : 161,
			"locktransforms" : false,
			"model" : "models/block/block.mdl",
			"name" : "21",
			"origin" : "0.98568 0.44043 -1.22639",
			"parallaxDepth" : "1.00000 1.00000",
			"perspective" : false,
			"scale" : 
			{
				"animation" : 
				{
					"c0" : 
					[
						{
							"back" : 
							{
								"enabled" : true,
								"x" : -1,
								"y" : 0
							},
							"frame" : 0,
							"front" : 
							{
								"enabled" : true,
								"x" : 1,
								"y" : 0
							},
							"lockangle" : true,
							"locklength" : true,
							"value" : 0
						},
						{
							"back" : 
							{
								"enabled" : true,
								"x" : -1,
								"y" : 0
							},
							"frame" : 29,
							"front" : 
							{
								"enabled" : true,
								"x" : 1,
								"y" : 0
							},
							"lockangle" : true,
							"locklength" : true,
							"value" : 0
						}
					],
					"c1" : 
					[
						{
							"back" : 
							{
								"enabled" : true,
								"x" : -1,
								"y" : 0
							},
							"frame" : 0,
							"front" : 
							{
								"enabled" : true,
								"x" : 1,
								"y" : 0
							},
							"lockangle" : true,
							"locklength" : true,
							"value" : 0
						},
						{
							"back" : 
							{
								"enabled" : true,
								"x" : -1,
								"y" : 0
							},
							"frame" : 29,
							"front" : 
							{
								"enabled" : true,
								"x" : 1,
								"y" : 0
							},
							"lockangle" : true,
							"locklength" : true,
							"value" : 0
						}
					],
					"c2" : 
					[
						{
							"back" : 
							{
								"enabled" : true,
								"x" : -1,
								"y" : 0
							},
							"frame" : 0,
							"front" : 
							{
								"enabled" : true,
								"x" : 1,
								"y" : 0
							},
							"lockangle" : true,
							"locklength" : true,
							"value" : 0
						},
						{
							"back" : 
							{
								"enabled" : true,
								"x" : -1,
								"y" : 0
							},
							"frame" : 29,
							"front" : 
							{
								"enabled" : true,
								"x" : 1,
								"y" : 0
							},
							"lockangle" : true,
							"locklength" : true,
							"value" : 0.44999999
						}
					],
					"options" : 
					{
						"fps" : 5.8000002,
						"length" : 29,
						"mode" : "mirror",
						"name" : "idle",
						"startpaused" : true
					},
					"relative" : true
				},
				"value" : "0.41832 0.41832 0.05000"
			}
		},
		{
			"angles" : "0.00000 1.57080 0.00000",
			"id" : 165,
			"locktransforms" : false,
			"model" : "models/block/block.mdl",
			"name" : "22",
			"origin" : "0.98568 0.44043 -0.24871",
			"parallaxDepth" : "1.00000 1.00000",
			"perspective" : false,
			"scale" : 
			{
				"animation" : 
				{
					"c0" : 
					[
						{
							"back" : 
							{
								"enabled" : true,
								"x" : -1,
								"y" : 0
							},
							"frame" : 0,
							"front" : 
							{
								"enabled" : true,
								"x" : 1,
								"y" : 0
							},
							"lockangle" : true,
							"locklength" : true,
							"value" : 0
						},
						{
							"back" : 
							{
								"enabled" : true,
								"x" : -1,
								"y" : 0
							},
							"frame" : 29,
							"front" : 
							{
								"enabled" : true,
								"x" : 1,
								"y" : 0
							},
							"lockangle" : true,
							"locklength" : true,
							"value" : 0
						}
					],
					"c1" : 
					[
						{
							"back" : 
							{
								"enabled" : true,
								"x" : -1,
								"y" : 0
							},
							"frame" : 0,
							"front" : 
							{
								"enabled" : true,
								"x" : 1,
								"y" : 0
							},
							"lockangle" : true,
							"locklength" : true,
							"value" : 0
						},
						{
							"back" : 
							{
								"enabled" : true,
								"x" : -1,
								"y" : 0
							},
							"frame" : 29,
							"front" : 
							{
								"enabled" : true,
								"x" : 1,
								"y" : 0
							},
							"lockangle" : true,
							"locklength" : true,
							"value" : 0
						}
					],
					"c2" : 
					[
						{
							"back" : 
							{
								"enabled" : true,
								"x" : -1,
								"y" : 0
							},
							"frame" : 0,
							"front" : 
							{
								"enabled" : true,
								"x" : 1,
								"y" : 0
							},
							"lockangle" : true,
							"locklength" : true,
							"value" : 0
						},
						{
							"back" : 
							{
								"enabled" : true,
								"x" : -1,
								"y" : 0
							},
							"frame" : 29,
							"front" : 
							{
								"enabled" : true,
								"x" : 1,
								"y" : 0
							},
							"lockangle" : true,
							"locklength" : true,
							"value" : 0.44999999
						}
					],
					"options" : 
					{
						"fps" : 5.8000002,
						"length" : 29,
						"mode" : "mirror",
						"name" : "idle",
						"startpaused" : true
					},
					"relative" : true
				},
				"value" : "0.41832 0.41832 0.05000"
			}
		},
		{
			"angles" : "0.00000 1.57080 0.00000",
			"id" : 166,
			"locktransforms" : false,
			"model" : "models/block/block.mdl",
			"name" : "23",
			"origin" : "0.98568 -0.44043 -0.24871",
			"parallaxDepth" : "1.00000 1.00000",
			"perspective" : false,
			"scale" : 
			{
				"animation" : 
				{
					"c0" : 
					[
						{
							"back" : 
							{
								"enabled" : true,
								"x" : -1,
								"y" : 0
							},
							"frame" : 0,
							"front" : 
							{
								"enabled" : true,
								"x" : 1,
								"y" : 0
							},
							"lockangle" : true,
							"locklength" : true,
							"value" : 0
						},
						{
							"back" : 
							{
								"enabled" : true,
								"x" : -1,
								"y" : 0
							},
							"frame" : 29,
							"front" : 
							{
								"enabled" : true,
								"x" : 1,
								"y" : 0
							},
							"lockangle" : true,
							"locklength" : true,
							"value" : 0
						}
					],
					"c1" : 
					[
						{
							"back" : 
							{
								"enabled" : true,
								"x" : -1,
								"y" : 0
							},
							"frame" : 0,
							"front" : 
							{
								"enabled" : true,
								"x" : 1,
								"y" : 0
							},
							"lockangle" : true,
							"locklength" : true,
							"value" : 0
						},
						{
							"back" : 
							{
								"enabled" : true,
								"x" : -1,
								"y" : 0
							},
							"frame" : 29,
							"front" : 
							{
								"enabled" : true,
								"x" : 1,
								"y" : 0
							},
							"lockangle" : true,
							"locklength" : true,
							"value" : 0
						}
					],
					"c2" : 
					[
						{
							"back" : 
							{
								"enabled" : true,
								"x" : -1,
								"y" : 0
							},
							"frame" : 0,
							"front" : 
							{
								"enabled" : true,
								"x" : 1,
								"y" : 0
							},
							"lockangle" : true,
							"locklength" : true,
							"value" : 0
						},
						{
							"back" : 
							{
								"enabled" : true,
								"x" : -1,
								"y" : 0
							},
							"frame" : 29,
							"front" : 
							{
								"enabled" : true,
								"x" : 1,
								"y" : 0
							},
							"lockangle" : true,
							"locklength" : true,
							"value" : 0.44999999
						}
					],
					"options" : 
					{
						"fps" : 5.8000002,
						"length" : 29,
						"mode" : "mirror",
						"name" : "idle",
						"startpaused" : true
					},
					"relative" : true
				},
				"value" : "0.41832 0.41832 0.05000"
			}
		},
		{
			"angles" : "0.00000 1.57080 0.00000",
			"id" : 163,
			"locktransforms" : false,
			"model" : "models/block/block.mdl",
			"name" : "24",
			"origin" : "0.98568 -0.44043 -1.22639",
			"parallaxDepth" : "1.00000 1.00000",
			"perspective" : false,
			"scale" : 
			{
				"animation" : 
				{
					"c0" : 
					[
						{
							"back" : 
							{
								"enabled" : true,
								"x" : -1,
								"y" : 0
							},
							"frame" : 0,
							"front" : 
							{
								"enabled" : true,
								"x" : 1,
								"y" : 0
							},
							"lockangle" : true,
							"locklength" : true,
							"value" : 0
						},
						{
							"back" : 
							{
								"enabled" : true,
								"x" : -1,
								"y" : 0
							},
							"frame" : 29,
							"front" : 
							{
								"enabled" : true,
								"x" : 1,
								"y" : 0
							},
							"lockangle" : true,
							"locklength" : true,
							"value" : 0
						}
					],
					"c1" : 
					[
						{
							"back" : 
							{
								"enabled" : true,
								"x" : -1,
								"y" : 0
							},
							"frame" : 0,
							"front" : 
							{
								"enabled" : true,
								"x" : 1,
								"y" : 0
							},
							"lockangle" : true,
							"locklength" : true,
							"value" : 0
						},
						{
							"back" : 
							{
								"enabled" : true,
								"x" : -1,
								"y" : 0
							},
							"frame" : 29,
							"front" : 
							{
								"enabled" : true,
								"x" : 1,
								"y" : 0
							},
							"lockangle" : true,
							"locklength" : true,
							"value" : 0
						}
					],
					"c2" : 
					[
						{
							"back" : 
							{
								"enabled" : true,
								"x" : -1,
								"y" : 0
							},
							"frame" : 0,
							"front" : 
							{
								"enabled" : true,
								"x" : 1,
								"y" : 0
							},
							"lockangle" : true,
							"locklength" : true,
							"value" : 0
						},
						{
							"back" : 
							{
								"enabled" : true,
								"x" : -1,
								"y" : 0
							},
							"frame" : 29,
							"front" : 
							{
								"enabled" : true,
								"x" : 1,
								"y" : 0
							},
							"lockangle" : true,
							"locklength" : true,
							"value" : 0.44999999
						}
					],
					"options" : 
					{
						"events" : [],
						"fps" : 5.8000002,
						"length" : 29,
						"mode" : "mirror",
						"name" : "idle",
						"startpaused" : true,
						"wraploop" : null
					},
					"relative" : true
				},
				"value" : "0.41832 0.41832 0.05000"
			}
		},
		{
			"angles" : "0.00000 0.00000 0.00000",
			"id" : 1755,
			"locktransforms" : false,
			"model" : "models/glasstest/glasstest.mdl",
			"name" : "glasstest",
			"origin" : 
			{
				"animation" : 
				{
					"c0" : 
					[
						{
							"back" : 
							{
								"enabled" : false,
								"x" : -1,
								"y" : 0
							},
							"frame" : -0.0,
							"front" : 
							{
								"enabled" : false,
								"x" : 1,
								"y" : 0
							},
							"lockangle" : true,
							"locklength" : true,
							"value" : 0.14544
						},
						{
							"back" : 
							{
								"enabled" : true,
								"x" : -1,
								"y" : 0
							},
							"frame" : 29,
							"front" : 
							{
								"enabled" : true,
								"x" : 1,
								"y" : 0
							},
							"lockangle" : true,
							"locklength" : true,
							"value" : 0.14544
						}
					],
					"c1" : 
					[
						{
							"back" : 
							{
								"enabled" : true,
								"x" : -1,
								"y" : 0
							},
							"frame" : -0.0,
							"front" : 
							{
								"enabled" : true,
								"x" : 1,
								"y" : 0
							},
							"lockangle" : true,
							"locklength" : true,
							"value" : -0.02149
						},
						{
							"back" : 
							{
								"enabled" : true,
								"x" : -1,
								"y" : 0
							},
							"frame" : 29,
							"front" : 
							{
								"enabled" : true,
								"x" : 1,
								"y" : 0
							},
							"lockangle" : true,
							"locklength" : true,
							"value" : 1.04705
						}
					],
					"c2" : 
					[
						{
							"back" : 
							{
								"enabled" : false,
								"x" : -1,
								"y" : 0
							},
							"frame" : -0.0,
							"front" : 
							{
								"enabled" : false,
								"x" : 1,
								"y" : 0
							},
							"lockangle" : true,
							"locklength" : true,
							"value" : 0.14544
						},
						{
							"back" : 
							{
								"enabled" : true,
								"x" : -1,
								"y" : 0
							},
							"frame" : 29,
							"front" : 
							{
								"enabled" : true,
								"x" : 1,
								"y" : 0
							},
							"lockangle" : true,
							"locklength" : true,
							"value" : 0.14544
						}
					],
					"options" : 
					{
						"fps" : 5.8000002,
						"length" : 29,
						"mode" : "mirror",
						"name" : "particlecube"
					},
					"relative" : true
				},
				"script" : "'use strict';\n\n/**\n * @param {Vec3} value - for property 'origin'\n * @return {Vec3} - update current property value\n */\nexport function update(value) {\n\t\n\treturn value;\n}\n\n\n\n/**\n * @param {Object} changedUserProperties - only includes user properties that were recently changed!\n */\nexport function applyUserProperties(changedUserProperties) {\n\t\n\tif(changedUserProperties.extraobjects != undefined){\n\t\tvar isPlaying;\n\t\ttry{\n\t\t\tisPlaying=thisScene.getAnimation(\"glasstest\").isPlaying()\n\t\t}catch{\n\n\t\t}\n\t\tif(!changedUserProperties.extraobjects){\n\t\t\tvar index = 0;\n\t\t\tvar animlayers =[];\n\t\t\tvar layers = thisScene.enumerateLayers();\n\t\t\tlayers.forEach(element=>{\n\t\t\t\tif (element.name == \"glasstest\"){\n\n\t\t\t\t\tanimlayers.push(element);\n\t\t\t\t\telement.scale = new Vec3(0,0,0);\n\t\t\t\t\telement.getAnimation().stop();\n\t\t\t\t\t\n\n\t\t\t\t}\n\t\t\t});\n\t\t}else if(!isPlaying && changedUserProperties.extraobjects){\n\t\t\n\t\tvar animlayers =[];\n\t\tvar layers = thisScene.enumerateLayers();\n\t\t\tlayers.forEach(element=>{\n\t\t\t\tif (element.name == \"glasstest\"){\n\n\t\t\t\t\tanimlayers.push(element);\n\t\t\t\t\telement.getAnimation().play();\n\t\t\t\t\t\n\t\t\t\t\t\n\n\t\t\t\t}\n\t\t\t});\n\t\t\t\n\t\tfor(var i = 0; i<animlayers.length;i++){\n\t\t\t\t\n\t\t\tswitch(i){\n\t\t\t\tcase 0:\n\t\t\t\tanimlayers[i].scale = new Vec3(0.0001, 0.0005, 0.0001);\n\t\t\t\tbreak;\n\t\t\t\t\n\t\t\t\tcase 1:\n\t\t\t\tanimlayers[i].scale = new Vec3(0.0001, 0.0005, 0.0001);\n\t\t\t\tbreak;\n\n\t\t\t\tcase 2:\n\t\t\t\tanimlayers[i].scale = new Vec3(0.0001, 0.0005, 0.0001);\n\t\t\t\tbreak;\n\n\t\t\t\tcase 3:\n\t\t\t\t\n\t\t\t\tanimlayers[i].scale = new Vec3(0.001, 0.001, 0.001);\n\t\t\t\tbreak;\n\n\t\t\t\tcase 4:\n\t\t\t\tanimlayers[i].scale = new Vec3(0.0005, 0.0005, 0.0005);\n\t\t\t\tbreak;\n\n\t\t\t\tcase 5:\n\t\t\t\tanimlayers[i].scale = new Vec3(0.0002, 0.0002, 0.0002);\n\t\t\t\tbreak;\n\n\n\t\t\t\tcase 6:\n\t\t\t\tanimlayers[i].scale = new Vec3(0.0001, 0.0001, 0.0001);\n\t\t\t\tbreak;\n\t\t\t\t\t\t\t\n\t\t\t\tcase 7:\n\t\t\t\tanimlayers[i].scale = new Vec3(0.0001, 0.0001, 0.0001);\n\t\t\t\tbreak;\t\n\n\t\t\t\tcase 8:\n\t\t\t\tanimlayers[i].scale = new Vec3(0, 0, 0.0001);\n\t\t\t\tbreak;\n\t\t\t\n\t\t\t}\n\t\t}\n\t}\n\t\n\t}\n\t\n\t\n}\n",
				"value" : "0.39959 -0.90061 1.40285"
			},
			"parallaxDepth" : "1.00000 1.00000",
			"perspective" : false,
			"scale" : "0.00010 0.00050 0.00010"
		},
		{
			"angles" : "0.00000 0.00000 0.00000",
			"id" : 1761,
			"locktransforms" : false,
			"model" : "models/glasstest/glasstest.mdl",
			"name" : "glasstest",
			"origin" : 
			{
				"animation" : 
				{
					"c0" : 
					[
						{
							"back" : 
							{
								"enabled" : false,
								"x" : -1,
								"y" : 0
							},
							"frame" : 0,
							"front" : 
							{
								"enabled" : true,
								"x" : 1,
								"y" : 0
							},
							"lockangle" : true,
							"locklength" : true,
							"value" : -0.04087
						},
						{
							"back" : 
							{
								"enabled" : true,
								"x" : -1,
								"y" : 0
							},
							"frame" : 36,
							"front" : 
							{
								"enabled" : true,
								"x" : 1,
								"y" : 0
							},
							"lockangle" : true,
							"locklength" : true,
							"value" : 0.0080891764
						}
					],
					"c1" : 
					[
						{
							"back" : 
							{
								"enabled" : false,
								"x" : -1,
								"y" : 0
							},
							"frame" : 0,
							"front" : 
							{
								"enabled" : true,
								"x" : 1,
								"y" : 0
							},
							"lockangle" : true,
							"locklength" : true,
							"value" : -0.19850001
						},
						{
							"back" : 
							{
								"enabled" : true,
								"x" : -0.89931947,
								"y" : 0.024551211
							},
							"frame" : 29,
							"front" : 
							{
								"enabled" : true,
								"x" : 0.89931947,
								"y" : -0.024551211
							},
							"lockangle" : true,
							"locklength" : true,
							"value" : 0.75765789
						}
					],
					"c2" : 
					[
						{
							"back" : 
							{
								"enabled" : false,
								"x" : -1,
								"y" : 0
							},
							"frame" : 0,
							"front" : 
							{
								"enabled" : true,
								"x" : 1,
								"y" : 0
							},
							"lockangle" : true,
							"locklength" : true,
							"value" : -0.04087
						},
						{
							"back" : 
							{
								"enabled" : true,
								"x" : -1,
								"y" : 0
							},
							"frame" : 36,
							"front" : 
							{
								"enabled" : true,
								"x" : 1,
								"y" : 0
							},
							"lockangle" : true,
							"locklength" : true,
							"value" : 0.0080891764
						}
					],
					"options" : 
					{
						"fps" : 5.8000002,
						"length" : 29,
						"mode" : "mirror",
						"name" : "particlecube"
					},
					"relative" : true
				},
				"script" : "'use strict';\n\n/**\n * @param {Vec3} value - for property 'origin'\n * @return {Vec3} - update current property value\n */\nexport function update(value) {\n\t\n\treturn value;\n}\n",
				"value" : "-1.88424 -0.78714 -1.94001"
			},
			"parallaxDepth" : "1.00000 1.00000",
			"perspective" : false,
			"scale" : "0.00010 0.00050 0.00010"
		},
		{
			"angles" : "0.00000 0.00000 0.00000",
			"id" : 1759,
			"locktransforms" : false,
			"model" : "models/glasstest/glasstest.mdl",
			"name" : "glasstest",
			"origin" : 
			{
				"animation" : 
				{
					"c0" : 
					[
						{
							"back" : 
							{
								"enabled" : false,
								"x" : -1,
								"y" : 0
							},
							"frame" : 0,
							"front" : 
							{
								"enabled" : false,
								"x" : 1,
								"y" : 0
							},
							"lockangle" : true,
							"locklength" : true,
							"value" : 0
						},
						{
							"back" : 
							{
								"enabled" : true,
								"x" : -1,
								"y" : 0
							},
							"frame" : 16,
							"front" : 
							{
								"enabled" : true,
								"x" : 1,
								"y" : 0
							},
							"lockangle" : true,
							"locklength" : true,
							"value" : 0.048960581
						},
						{
							"back" : 
							{
								"enabled" : false,
								"x" : -1,
								"y" : 0
							},
							"frame" : 29,
							"front" : 
							{
								"enabled" : false,
								"x" : 1,
								"y" : 0
							},
							"lockangle" : true,
							"locklength" : true,
							"value" : 0
						}
					],
					"c1" : 
					[
						{
							"back" : 
							{
								"enabled" : false,
								"x" : -1,
								"y" : 0
							},
							"frame" : 0,
							"front" : 
							{
								"enabled" : false,
								"x" : 1,
								"y" : 0
							},
							"lockangle" : true,
							"locklength" : true,
							"value" : -0.65974998
						},
						{
							"back" : 
							{
								"enabled" : true,
								"x" : -1.2928958,
								"y" : -0.016320195
							},
							"frame" : 13,
							"front" : 
							{
								"enabled" : true,
								"x" : 1.2928958,
								"y" : 0.016320195
							},
							"lockangle" : true,
							"locklength" : true,
							"value" : -0.018898835
						},
						{
							"back" : 
							{
								"enabled" : true,
								"x" : -1.1265069,
								"y" : -1.093453
							},
							"frame" : 29,
							"front" : 
							{
								"enabled" : true,
								"x" : 1.1265069,
								"y" : 1.093453
							},
							"lockangle" : true,
							"locklength" : true,
							"value" : -0.65974998
						}
					],
					"c2" : 
					[
						{
							"back" : 
							{
								"enabled" : false,
								"x" : -1,
								"y" : 0
							},
							"frame" : 0,
							"front" : 
							{
								"enabled" : false,
								"x" : 1,
								"y" : 0
							},
							"lockangle" : true,
							"locklength" : true,
							"value" : 0
						},
						{
							"back" : 
							{
								"enabled" : true,
								"x" : -1,
								"y" : 0
							},
							"frame" : 16,
							"front" : 
							{
								"enabled" : true,
								"x" : 1,
								"y" : 0
							},
							"lockangle" : true,
							"locklength" : true,
							"value" : 0.048960581
						},
						{
							"back" : 
							{
								"enabled" : false,
								"x" : -1,
								"y" : 0
							},
							"frame" : 29,
							"front" : 
							{
								"enabled" : false,
								"x" : 1,
								"y" : 0
							},
							"lockangle" : true,
							"locklength" : true,
							"value" : 0
						}
					],
					"options" : 
					{
						"fps" : 5.8000002,
						"length" : 29,
						"mode" : "loop",
						"name" : "particlecube"
					},
					"relative" : true
				},
				"value" : "-1.28828 1.65867 0.51115"
			},
			"parallaxDepth" : "1.00000 1.00000",
			"perspective" : false,
			"scale" : "0.00010 0.00050 0.00010"
		},
		{
			"angles" : 
			{
				"animation" : 
				{
					"c0" : 
					[
						{
							"back" : 
							{
								"enabled" : false,
								"x" : -1,
								"y" : 0
							},
							"frame" : 0,
							"front" : 
							{
								"enabled" : true,
								"x" : 1,
								"y" : 0
							},
							"lockangle" : true,
							"locklength" : true,
							"value" : 0.39954001
						},
						{
							"back" : 
							{
								"enabled" : true,
								"x" : -1,
								"y" : 0
							},
							"frame" : 33,
							"front" : 
							{
								"enabled" : true,
								"x" : 1,
								"y" : 0
							},
							"lockangle" : true,
							"locklength" : true,
							"value" : -1.9312268
						},
						{
							"back" : 
							{
								"enabled" : true,
								"x" : -1,
								"y" : 0
							},
							"frame" : 59,
							"front" : 
							{
								"enabled" : false,
								"x" : 1,
								"y" : 0
							},
							"lockangle" : true,
							"locklength" : true,
							"value" : 0.39954001
						}
					],
					"c1" : 
					[
						{
							"back" : 
							{
								"enabled" : false,
								"x" : -1,
								"y" : 0
							},
							"frame" : 0,
							"front" : 
							{
								"enabled" : true,
								"x" : 1,
								"y" : 0
							},
							"lockangle" : true,
							"locklength" : true,
							"value" : 0
						},
						{
							"back" : 
							{
								"enabled" : true,
								"x" : -1,
								"y" : 0
							},
							"frame" : 33,
							"front" : 
							{
								"enabled" : true,
								"x" : 1,
								"y" : 0
							},
							"lockangle" : true,
							"locklength" : true,
							"value" : 8.4159842
						},
						{
							"back" : 
							{
								"enabled" : true,
								"x" : -1,
								"y" : 0
							},
							"frame" : 59,
							"front" : 
							{
								"enabled" : false,
								"x" : 1,
								"y" : 0
							},
							"lockangle" : true,
							"locklength" : true,
							"value" : 0
						}
					],
					"c2" : 
					[
						{
							"back" : 
							{
								"enabled" : false,
								"x" : -1,
								"y" : 0
							},
							"frame" : 0,
							"front" : 
							{
								"enabled" : true,
								"x" : 1,
								"y" : 0
							},
							"lockangle" : true,
							"locklength" : true,
							"value" : 0.70850998
						},
						{
							"back" : 
							{
								"enabled" : true,
								"x" : -1,
								"y" : 0
							},
							"frame" : 33,
							"front" : 
							{
								"enabled" : true,
								"x" : 1,
								"y" : 0
							},
							"lockangle" : true,
							"locklength" : true,
							"value" : -8.8138027
						},
						{
							"back" : 
							{
								"enabled" : true,
								"x" : -1,
								"y" : 0
							},
							"frame" : 59,
							"front" : 
							{
								"enabled" : false,
								"x" : 1,
								"y" : 0
							},
							"lockangle" : true,
							"locklength" : true,
							"value" : 0.70850998
						}
					],
					"options" : 
					{
						"fps" : 5.9000001,
						"length" : 59,
						"mode" : "loop",
						"parent" : 
						{
							"key" : "origin"
						}
					}
				},
				"value" : "0.00000 0.00000 0.00000"
			},
			"id" : 225,
			"locktransforms" : false,
			"model" : "models/glasstest/glasstest.mdl",
			"name" : "glasstest",
			"origin" : 
			{
				"animation" : 
				{
					"c0" : 
					[
						{
							"back" : 
							{
								"enabled" : true,
								"x" : -0.41514161,
								"y" : 0.54884493
							},
							"frame" : 0,
							"front" : 
							{
								"enabled" : true,
								"x" : 0.41514161,
								"y" : -0.54884493
							},
							"lockangle" : true,
							"locklength" : true,
							"value" : 0
						},
						{
							"back" : 
							{
								"enabled" : true,
								"x" : -1,
								"y" : 0
							},
							"frame" : 18,
							"front" : 
							{
								"enabled" : true,
								"x" : 1,
								"y" : 0
							},
							"lockangle" : true,
							"locklength" : true,
							"value" : -2.7376201
						},
						{
							"back" : 
							{
								"enabled" : true,
								"x" : -0.39264706,
								"y" : -0.62750739
							},
							"frame" : 29,
							"front" : 
							{
								"enabled" : true,
								"x" : 0.39264706,
								"y" : 0.62750739
							},
							"lockangle" : true,
							"locklength" : true,
							"value" : -1.29184
						},
						{
							"back" : 
							{
								"enabled" : true,
								"x" : -0.70757079,
								"y" : 0
							},
							"frame" : 39,
							"front" : 
							{
								"enabled" : true,
								"x" : 0.70757079,
								"y" : -0.0
							},
							"lockangle" : true,
							"locklength" : true,
							"value" : 2.574935
						},
						{
							"back" : 
							{
								"enabled" : true,
								"x" : -0.41514161,
								"y" : 0.54884493
							},
							"frame" : 59,
							"front" : 
							{
								"enabled" : true,
								"x" : 0.41514161,
								"y" : -0.54884493
							},
							"lockangle" : true,
							"locklength" : true,
							"value" : 0
						}
					],
					"c1" : 
					[
						{
							"back" : 
							{
								"enabled" : true,
								"x" : -1.3824074,
								"y" : 1.7327819
							},
							"frame" : 0,
							"front" : 
							{
								"enabled" : true,
								"x" : 1.3824074,
								"y" : -1.7327819
							},
							"lockangle" : true,
							"locklength" : true,
							"value" : -0.02352
						},
						{
							"back" : 
							{
								"enabled" : true,
								"x" : -0.50690919,
								"y" : 0.078676827
							},
							"frame" : 15,
							"front" : 
							{
								"enabled" : true,
								"x" : 0.50690919,
								"y" : -0.078676827
							},
							"lockangle" : true,
							"locklength" : true,
							"value" : -1.9192704
						},
						{
							"back" : 
							{
								"enabled" : true,
								"x" : -0.55912286,
								"y" : -0.66506469
							},
							"frame" : 29,
							"front" : 
							{
								"enabled" : true,
								"x" : 0.55912286,
								"y" : 0.66506469
							},
							"lockangle" : true,
							"locklength" : true,
							"value" : 1.4862498
						},
						{
							"back" : 
							{
								"enabled" : true,
								"x" : -0.41514161,
								"y" : -0.0
							},
							"frame" : 39,
							"front" : 
							{
								"enabled" : true,
								"x" : 0.41514161,
								"y" : 0
							},
							"lockangle" : true,
							"locklength" : true,
							"value" : 2.434845
						},
						{
							"back" : 
							{
								"enabled" : true,
								"x" : -1.3824074,
								"y" : 1.7327819
							},
							"frame" : 59,
							"front" : 
							{
								"enabled" : true,
								"x" : 1.3824074,
								"y" : -1.7327819
							},
							"lockangle" : true,
							"locklength" : true,
							"value" : -0.02352
						}
					],
					"c2" : 
					[
						{
							"back" : 
							{
								"enabled" : true,
								"x" : -1.2249455,
								"y" : 0.5174824
							},
							"frame" : 0,
							"front" : 
							{
								"enabled" : true,
								"x" : 1.2249455,
								"y" : -0.5174824
							},
							"lockangle" : true,
							"locklength" : true,
							"value" : 1.79063
						},
						{
							"back" : 
							{
								"enabled" : false,
								"x" : -1,
								"y" : 0
							},
							"frame" : 18,
							"front" : 
							{
								"enabled" : true,
								"x" : 0.95501089,
								"y" : -1.6505835
							},
							"lockangle" : true,
							"locklength" : true,
							"value" : -0.21019006
						},
						{
							"back" : 
							{
								"enabled" : true,
								"x" : -0.84253812,
								"y" : -1.7347235e-18
							},
							"frame" : 33,
							"front" : 
							{
								"enabled" : true,
								"x" : 0.84253812,
								"y" : 1.7347235e-18
							},
							"lockangle" : true,
							"locklength" : true,
							"value" : -3.493722
						},
						{
							"back" : 
							{
								"enabled" : true,
								"x" : -0.46013072,
								"y" : -1.7171326
							},
							"frame" : 44,
							"front" : 
							{
								"enabled" : true,
								"x" : 0.46013072,
								"y" : 1.7171326
							},
							"lockangle" : true,
							"locklength" : true,
							"value" : 0.78618008
						},
						{
							"back" : 
							{
								"enabled" : true,
								"x" : -1.2249455,
								"y" : 0.5174824
							},
							"frame" : 59,
							"front" : 
							{
								"enabled" : true,
								"x" : 1.2249455,
								"y" : -0.5174824
							},
							"lockangle" : true,
							"locklength" : true,
							"value" : 1.79063
						}
					],
					"options" : 
					{
						"children" : 
						[
							{
								"key" : "angles"
							}
						],
						"fps" : 5.9000001,
						"length" : 59,
						"mode" : "loop",
						"name" : "smallcube"
					}
				},
				"script" : "'use strict';\n\n/**\n * @param {Vec3} value - for property 'origin'\n * @return {Vec3} - update current property value\n */\nexport function update(value) {\n\t\n\treturn value;\n}\n",
				"value" : "0.00000 0.00000 1.14738"
			},
			"parallaxDepth" : "1.00000 1.00000",
			"perspective" : false,
			"scale" : "0.00100 0.00100 0.00100"
		},
		{
			"angles" : 
			{
				"animation" : 
				{
					"c0" : 
					[
						{
							"back" : 
							{
								"enabled" : false,
								"x" : -1,
								"y" : 0
							},
							"frame" : 1,
							"front" : 
							{
								"enabled" : true,
								"x" : 1,
								"y" : 0
							},
							"lockangle" : true,
							"locklength" : true,
							"value" : 0.39954001
						},
						{
							"back" : 
							{
								"enabled" : true,
								"x" : -1,
								"y" : 0
							},
							"frame" : 35,
							"front" : 
							{
								"enabled" : true,
								"x" : 1,
								"y" : 0
							},
							"lockangle" : true,
							"locklength" : true,
							"value" : -1.9312268
						},
						{
							"back" : 
							{
								"enabled" : true,
								"x" : -1,
								"y" : 0
							},
							"frame" : 59,
							"front" : 
							{
								"enabled" : false,
								"x" : 1,
								"y" : 0
							},
							"lockangle" : true,
							"locklength" : true,
							"value" : 0.39954001
						}
					],
					"c1" : 
					[
						{
							"back" : 
							{
								"enabled" : false,
								"x" : -1,
								"y" : 0
							},
							"frame" : 1,
							"front" : 
							{
								"enabled" : true,
								"x" : 1,
								"y" : 0
							},
							"lockangle" : true,
							"locklength" : true,
							"value" : 0
						},
						{
							"back" : 
							{
								"enabled" : true,
								"x" : -1,
								"y" : 0
							},
							"frame" : 35,
							"front" : 
							{
								"enabled" : true,
								"x" : 1,
								"y" : 0
							},
							"lockangle" : true,
							"locklength" : true,
							"value" : 8.4159842
						},
						{
							"back" : 
							{
								"enabled" : true,
								"x" : -1,
								"y" : 0
							},
							"frame" : 59,
							"front" : 
							{
								"enabled" : false,
								"x" : 1,
								"y" : 0
							},
							"lockangle" : true,
							"locklength" : true,
							"value" : 0
						}
					],
					"c2" : 
					[
						{
							"back" : 
							{
								"enabled" : false,
								"x" : -1,
								"y" : 0
							},
							"frame" : 1,
							"front" : 
							{
								"enabled" : true,
								"x" : 1,
								"y" : 0
							},
							"lockangle" : true,
							"locklength" : true,
							"value" : 0.70850998
						},
						{
							"back" : 
							{
								"enabled" : true,
								"x" : -1,
								"y" : 0
							},
							"frame" : 35,
							"front" : 
							{
								"enabled" : true,
								"x" : 1,
								"y" : 0
							},
							"lockangle" : true,
							"locklength" : true,
							"value" : -8.8138027
						},
						{
							"back" : 
							{
								"enabled" : true,
								"x" : -1,
								"y" : 0
							},
							"frame" : 59,
							"front" : 
							{
								"enabled" : false,
								"x" : 1,
								"y" : 0
							},
							"lockangle" : true,
							"locklength" : true,
							"value" : 0.70850998
						}
					],
					"options" : 
					{
						"fps" : 5.9000001,
						"length" : 59,
						"mode" : "loop",
						"parent" : 
						{
							"key" : "origin"
						}
					}
				},
				"value" : "0.00000 0.00000 0.00000"
			},
			"id" : 1879,
			"locktransforms" : false,
			"model" : "models/glasstest/glasstest.mdl",
			"name" : "glasstest",
			"origin" : 
			{
				"animation" : 
				{
					"c0" : 
					[
						{
							"back" : 
							{
								"enabled" : true,
								"x" : -0.41514161,
								"y" : 0.54884493
							},
							"frame" : 1,
							"front" : 
							{
								"enabled" : true,
								"x" : 0.41514161,
								"y" : -0.54884493
							},
							"lockangle" : true,
							"locklength" : true,
							"value" : 0
						},
						{
							"back" : 
							{
								"enabled" : true,
								"x" : -1,
								"y" : 0
							},
							"frame" : 20,
							"front" : 
							{
								"enabled" : true,
								"x" : 1,
								"y" : 0
							},
							"lockangle" : true,
							"locklength" : true,
							"value" : -2.7376201
						},
						{
							"back" : 
							{
								"enabled" : true,
								"x" : -0.39264706,
								"y" : -0.62750739
							},
							"frame" : 31,
							"front" : 
							{
								"enabled" : true,
								"x" : 0.39264706,
								"y" : 0.62750739
							},
							"lockangle" : true,
							"locklength" : true,
							"value" : -1.29184
						},
						{
							"back" : 
							{
								"enabled" : true,
								"x" : -0.70757079,
								"y" : 0
							},
							"frame" : 41,
							"front" : 
							{
								"enabled" : true,
								"x" : 0.70757079,
								"y" : -0.0
							},
							"lockangle" : true,
							"locklength" : true,
							"value" : 2.574935
						},
						{
							"back" : 
							{
								"enabled" : true,
								"x" : -0.41514161,
								"y" : 0.54884493
							},
							"frame" : 59,
							"front" : 
							{
								"enabled" : true,
								"x" : 0.41514161,
								"y" : -0.54884493
							},
							"lockangle" : true,
							"locklength" : true,
							"value" : 0
						}
					],
					"c1" : 
					[
						{
							"back" : 
							{
								"enabled" : true,
								"x" : -1.3824074,
								"y" : 1.7327819
							},
							"frame" : 1,
							"front" : 
							{
								"enabled" : true,
								"x" : 1.3824074,
								"y" : -1.7327819
							},
							"lockangle" : true,
							"locklength" : true,
							"value" : -0.02352
						},
						{
							"back" : 
							{
								"enabled" : true,
								"x" : -0.50690919,
								"y" : 0.078676827
							},
							"frame" : 17,
							"front" : 
							{
								"enabled" : true,
								"x" : 0.50690919,
								"y" : -0.078676827
							},
							"lockangle" : true,
							"locklength" : true,
							"value" : -1.9192704
						},
						{
							"back" : 
							{
								"enabled" : true,
								"x" : -0.55912286,
								"y" : -0.66506469
							},
							"frame" : 31,
							"front" : 
							{
								"enabled" : true,
								"x" : 0.55912286,
								"y" : 0.66506469
							},
							"lockangle" : true,
							"locklength" : true,
							"value" : 1.4862498
						},
						{
							"back" : 
							{
								"enabled" : true,
								"x" : -0.41514161,
								"y" : -0.0
							},
							"frame" : 41,
							"front" : 
							{
								"enabled" : true,
								"x" : 0.41514161,
								"y" : 0
							},
							"lockangle" : true,
							"locklength" : true,
							"value" : 2.434845
						},
						{
							"back" : 
							{
								"enabled" : true,
								"x" : -1.3824074,
								"y" : 1.7327819
							},
							"frame" : 59,
							"front" : 
							{
								"enabled" : true,
								"x" : 1.3824074,
								"y" : -1.7327819
							},
							"lockangle" : true,
							"locklength" : true,
							"value" : -0.02352
						}
					],
					"c2" : 
					[
						{
							"back" : 
							{
								"enabled" : true,
								"x" : -1.2249455,
								"y" : 0.5174824
							},
							"frame" : 1,
							"front" : 
							{
								"enabled" : true,
								"x" : 1.2249455,
								"y" : -0.5174824
							},
							"lockangle" : true,
							"locklength" : true,
							"value" : 1.79063
						},
						{
							"back" : 
							{
								"enabled" : false,
								"x" : -1,
								"y" : 0
							},
							"frame" : 20,
							"front" : 
							{
								"enabled" : true,
								"x" : 0.95501089,
								"y" : -1.6505835
							},
							"lockangle" : true,
							"locklength" : true,
							"value" : -0.21019006
						},
						{
							"back" : 
							{
								"enabled" : true,
								"x" : -0.84253812,
								"y" : -1.7347235e-18
							},
							"frame" : 35,
							"front" : 
							{
								"enabled" : true,
								"x" : 0.84253812,
								"y" : 1.7347235e-18
							},
							"lockangle" : true,
							"locklength" : true,
							"value" : -3.493722
						},
						{
							"back" : 
							{
								"enabled" : true,
								"x" : -0.46013072,
								"y" : -1.7171326
							},
							"frame" : 46,
							"front" : 
							{
								"enabled" : true,
								"x" : 0.46013072,
								"y" : 1.7171326
							},
							"lockangle" : true,
							"locklength" : true,
							"value" : 0.78618008
						},
						{
							"back" : 
							{
								"enabled" : true,
								"x" : -1.2249455,
								"y" : 0.5174824
							},
							"frame" : 59,
							"front" : 
							{
								"enabled" : true,
								"x" : 1.2249455,
								"y" : -0.5174824
							},
							"lockangle" : true,
							"locklength" : true,
							"value" : 1.79063
						}
					],
					"options" : 
					{
						"children" : 
						[
							{
								"key" : "angles"
							}
						],
						"fps" : 5.9000001,
						"length" : 59,
						"mode" : "loop",
						"name" : "smallcube"
					}
				},
				"value" : "0.00000 0.00000 1.14738"
			},
			"parallaxDepth" : "1.00000 1.00000",
			"perspective" : false,
			"scale" : "0.00050 0.00050 0.00050"
		},
		{
			"angles" : 
			{
				"animation" : 
				{
					"c0" : 
					[
						{
							"back" : 
							{
								"enabled" : false,
								"x" : -1,
								"y" : 0
							},
							"frame" : 3,
							"front" : 
							{
								"enabled" : true,
								"x" : 1,
								"y" : 0
							},
							"lockangle" : true,
							"locklength" : true,
							"value" : 0.39954001
						},
						{
							"back" : 
							{
								"enabled" : true,
								"x" : -1,
								"y" : 0
							},
							"frame" : 36,
							"front" : 
							{
								"enabled" : true,
								"x" : 1,
								"y" : 0
							},
							"lockangle" : true,
							"locklength" : true,
							"value" : -1.9312268
						},
						{
							"back" : 
							{
								"enabled" : true,
								"x" : -1,
								"y" : 0
							},
							"frame" : 59,
							"front" : 
							{
								"enabled" : false,
								"x" : 1,
								"y" : 0
							},
							"lockangle" : true,
							"locklength" : true,
							"value" : 0.39954001
						}
					],
					"c1" : 
					[
						{
							"back" : 
							{
								"enabled" : false,
								"x" : -1,
								"y" : 0
							},
							"frame" : 3,
							"front" : 
							{
								"enabled" : true,
								"x" : 1,
								"y" : 0
							},
							"lockangle" : true,
							"locklength" : true,
							"value" : 0
						},
						{
							"back" : 
							{
								"enabled" : true,
								"x" : -1,
								"y" : 0
							},
							"frame" : 36,
							"front" : 
							{
								"enabled" : true,
								"x" : 1,
								"y" : 0
							},
							"lockangle" : true,
							"locklength" : true,
							"value" : 8.4159842
						},
						{
							"back" : 
							{
								"enabled" : true,
								"x" : -1,
								"y" : 0
							},
							"frame" : 59,
							"front" : 
							{
								"enabled" : false,
								"x" : 1,
								"y" : 0
							},
							"lockangle" : true,
							"locklength" : true,
							"value" : 0
						}
					],
					"c2" : 
					[
						{
							"back" : 
							{
								"enabled" : false,
								"x" : -1,
								"y" : 0
							},
							"frame" : 3,
							"front" : 
							{
								"enabled" : true,
								"x" : 1,
								"y" : 0
							},
							"lockangle" : true,
							"locklength" : true,
							"value" : 0.70850998
						},
						{
							"back" : 
							{
								"enabled" : true,
								"x" : -1,
								"y" : 0
							},
							"frame" : 36,
							"front" : 
							{
								"enabled" : true,
								"x" : 1,
								"y" : 0
							},
							"lockangle" : true,
							"locklength" : true,
							"value" : -8.8138027
						},
						{
							"back" : 
							{
								"enabled" : true,
								"x" : -1,
								"y" : 0
							},
							"frame" : 59,
							"front" : 
							{
								"enabled" : false,
								"x" : 1,
								"y" : 0
							},
							"lockangle" : true,
							"locklength" : true,
							"value" : 0.70850998
						}
					],
					"options" : 
					{
						"fps" : 5.9000001,
						"length" : 59,
						"mode" : "loop",
						"parent" : 
						{
							"key" : "origin"
						}
					}
				},
				"value" : "0.39954 0.00000 0.70851"
			},
			"id" : 226,
			"locktransforms" : false,
			"model" : "models/glasstest/glasstest.mdl",
			"name" : "glasstest",
			"origin" : 
			{
				"animation" : 
				{
					"c0" : 
					[
						{
							"back" : 
							{
								"enabled" : true,
								"x" : -0.41514161,
								"y" : 0.54884493
							},
							"frame" : 3,
							"front" : 
							{
								"enabled" : true,
								"x" : 0.41514161,
								"y" : -0.54884493
							},
							"lockangle" : true,
							"locklength" : true,
							"value" : 0
						},
						{
							"back" : 
							{
								"enabled" : true,
								"x" : -1,
								"y" : 0
							},
							"frame" : 21,
							"front" : 
							{
								"enabled" : true,
								"x" : 1,
								"y" : 0
							},
							"lockangle" : true,
							"locklength" : true,
							"value" : -2.7376201
						},
						{
							"back" : 
							{
								"enabled" : true,
								"x" : -0.39264706,
								"y" : -0.62750739
							},
							"frame" : 32,
							"front" : 
							{
								"enabled" : true,
								"x" : 0.39264706,
								"y" : 0.62750739
							},
							"lockangle" : true,
							"locklength" : true,
							"value" : -1.29184
						},
						{
							"back" : 
							{
								"enabled" : true,
								"x" : -0.70757079,
								"y" : 0
							},
							"frame" : 42,
							"front" : 
							{
								"enabled" : true,
								"x" : 0.70757079,
								"y" : -0.0
							},
							"lockangle" : true,
							"locklength" : true,
							"value" : 2.574935
						},
						{
							"back" : 
							{
								"enabled" : true,
								"x" : -0.41514161,
								"y" : 0.54884493
							},
							"frame" : 59,
							"front" : 
							{
								"enabled" : true,
								"x" : 0.41514161,
								"y" : -0.54884493
							},
							"lockangle" : true,
							"locklength" : true,
							"value" : 0
						}
					],
					"c1" : 
					[
						{
							"back" : 
							{
								"enabled" : true,
								"x" : -1.3824074,
								"y" : 1.7327819
							},
							"frame" : 3,
							"front" : 
							{
								"enabled" : true,
								"x" : 1.3824074,
								"y" : -1.7327819
							},
							"lockangle" : true,
							"locklength" : true,
							"value" : -0.02352
						},
						{
							"back" : 
							{
								"enabled" : true,
								"x" : -0.50690919,
								"y" : 0.078676827
							},
							"frame" : 18,
							"front" : 
							{
								"enabled" : true,
								"x" : 0.50690919,
								"y" : -0.078676827
							},
							"lockangle" : true,
							"locklength" : true,
							"value" : -1.9192704
						},
						{
							"back" : 
							{
								"enabled" : true,
								"x" : -0.55912286,
								"y" : -0.66506469
							},
							"frame" : 32,
							"front" : 
							{
								"enabled" : true,
								"x" : 0.55912286,
								"y" : 0.66506469
							},
							"lockangle" : true,
							"locklength" : true,
							"value" : 1.4862498
						},
						{
							"back" : 
							{
								"enabled" : true,
								"x" : -0.41514161,
								"y" : -0.0
							},
							"frame" : 42,
							"front" : 
							{
								"enabled" : true,
								"x" : 0.41514161,
								"y" : 0
							},
							"lockangle" : true,
							"locklength" : true,
							"value" : 2.434845
						},
						{
							"back" : 
							{
								"enabled" : true,
								"x" : -1.3824074,
								"y" : 1.7327819
							},
							"frame" : 59,
							"front" : 
							{
								"enabled" : true,
								"x" : 1.3824074,
								"y" : -1.7327819
							},
							"lockangle" : true,
							"locklength" : true,
							"value" : -0.02352
						}
					],
					"c2" : 
					[
						{
							"back" : 
							{
								"enabled" : true,
								"x" : -1.2249455,
								"y" : 0.5174824
							},
							"frame" : 3,
							"front" : 
							{
								"enabled" : true,
								"x" : 1.2249455,
								"y" : -0.5174824
							},
							"lockangle" : true,
							"locklength" : true,
							"value" : 1.79063
						},
						{
							"back" : 
							{
								"enabled" : false,
								"x" : -1,
								"y" : 0
							},
							"frame" : 21,
							"front" : 
							{
								"enabled" : true,
								"x" : 0.95501089,
								"y" : -1.6505835
							},
							"lockangle" : true,
							"locklength" : true,
							"value" : -0.21019006
						},
						{
							"back" : 
							{
								"enabled" : true,
								"x" : -0.84253812,
								"y" : -1.7347235e-18
							},
							"frame" : 36,
							"front" : 
							{
								"enabled" : true,
								"x" : 0.84253812,
								"y" : 1.7347235e-18
							},
							"lockangle" : true,
							"locklength" : true,
							"value" : -3.493722
						},
						{
							"back" : 
							{
								"enabled" : true,
								"x" : -0.46013072,
								"y" : -1.7171326
							},
							"frame" : 47,
							"front" : 
							{
								"enabled" : true,
								"x" : 0.46013072,
								"y" : 1.7171326
							},
							"lockangle" : true,
							"locklength" : true,
							"value" : 0.78618008
						},
						{
							"back" : 
							{
								"enabled" : true,
								"x" : -1.2249455,
								"y" : 0.5174824
							},
							"frame" : 59,
							"front" : 
							{
								"enabled" : true,
								"x" : 1.2249455,
								"y" : -0.5174824
							},
							"lockangle" : true,
							"locklength" : true,
							"value" : 1.79063
						}
					],
					"options" : 
					{
						"children" : 
						[
							{
								"key" : "angles"
							}
						],
						"fps" : 5.9000001,
						"length" : 59,
						"mode" : "loop",
						"name" : "smallcube"
					}
				},
				"value" : "0.00000 -0.02352 1.79063"
			},
			"parallaxDepth" : "1.00000 1.00000",
			"perspective" : false,
			"scale" : "0.00020 0.00020 0.00020"
		},
		{
			"angles" : "0.00000 0.00000 0.00000",
			"id" : 1762,
			"locktransforms" : false,
			"model" : "models/glasstest/glasstest.mdl",
			"name" : "glasstest",
			"origin" : 
			{
				"animation" : 
				{
					"c0" : 
					[
						{
							"back" : 
							{
								"enabled" : true,
								"x" : -1,
								"y" : 0
							},
							"frame" : 0,
							"front" : 
							{
								"enabled" : true,
								"x" : 1,
								"y" : 0
							},
							"lockangle" : true,
							"locklength" : true,
							"value" : 0
						},
						{
							"back" : 
							{
								"enabled" : true,
								"x" : -1,
								"y" : 0
							},
							"frame" : 59,
							"front" : 
							{
								"enabled" : true,
								"x" : 1,
								"y" : 0
							},
							"lockangle" : true,
							"locklength" : true,
							"value" : 0
						}
					],
					"c1" : 
					[
						{
							"back" : 
							{
								"enabled" : true,
								"x" : -1,
								"y" : 0
							},
							"frame" : 0,
							"front" : 
							{
								"enabled" : true,
								"x" : 1,
								"y" : 0
							},
							"lockangle" : true,
							"locklength" : true,
							"value" : 0
						},
						{
							"back" : 
							{
								"enabled" : true,
								"x" : -1,
								"y" : 0
							},
							"frame" : 59,
							"front" : 
							{
								"enabled" : true,
								"x" : 1,
								"y" : 0
							},
							"lockangle" : true,
							"locklength" : true,
							"value" : 2.1669564
						}
					],
					"c2" : 
					[
						{
							"back" : 
							{
								"enabled" : true,
								"x" : -1,
								"y" : 0
							},
							"frame" : 0,
							"front" : 
							{
								"enabled" : true,
								"x" : 1,
								"y" : 0
							},
							"lockangle" : true,
							"locklength" : true,
							"value" : 0
						},
						{
							"back" : 
							{
								"enabled" : true,
								"x" : -1,
								"y" : 0
							},
							"frame" : 59,
							"front" : 
							{
								"enabled" : true,
								"x" : 1,
								"y" : 0
							},
							"lockangle" : true,
							"locklength" : true,
							"value" : 0
						}
					],
					"options" : 
					{
						"children" : 
						[
							{
								"key" : "scale"
							}
						],
						"fps" : 11.8,
						"length" : 59,
						"mode" : "loop"
					},
					"relative" : true
				},
				"script" : "'use strict';\n\n/**\n * @param {Vec3} value - for property 'origin'\n * @return {Vec3} - update current property value\n */\nexport function update(value) {\n\t\n\treturn value;\n}\n",
				"value" : "0.07527 1.49482 -0.90127"
			},
			"parallaxDepth" : "1.00000 1.00000",
			"perspective" : false,
			"scale" : 
			{
				"animation" : 
				{
					"c0" : 
					[
						{
							"back" : 
							{
								"enabled" : true,
								"x" : -1,
								"y" : 0
							},
							"frame" : 0,
							"front" : 
							{
								"enabled" : true,
								"x" : 1,
								"y" : 0
							},
							"lockangle" : true,
							"locklength" : true,
							"value" : 0.00089999998
						},
						{
							"back" : 
							{
								"enabled" : true,
								"x" : -1,
								"y" : 0
							},
							"frame" : 59,
							"front" : 
							{
								"enabled" : true,
								"x" : 1,
								"y" : 0
							},
							"lockangle" : true,
							"locklength" : true,
							"value" : -9.9999997e-05
						}
					],
					"c1" : 
					[
						{
							"back" : 
							{
								"enabled" : true,
								"x" : -1,
								"y" : 0
							},
							"frame" : 0,
							"front" : 
							{
								"enabled" : true,
								"x" : 1,
								"y" : 0
							},
							"lockangle" : true,
							"locklength" : true,
							"value" : 0.00121
						},
						{
							"back" : 
							{
								"enabled" : true,
								"x" : -1,
								"y" : 0
							},
							"frame" : 59,
							"front" : 
							{
								"enabled" : true,
								"x" : 1,
								"y" : 0
							},
							"lockangle" : true,
							"locklength" : true,
							"value" : -9.9999997e-05
						}
					],
					"c2" : 
					[
						{
							"back" : 
							{
								"enabled" : true,
								"x" : -1,
								"y" : 0
							},
							"frame" : 0,
							"front" : 
							{
								"enabled" : true,
								"x" : 1,
								"y" : 0
							},
							"lockangle" : true,
							"locklength" : true,
							"value" : 0.00089999998
						},
						{
							"back" : 
							{
								"enabled" : true,
								"x" : -1,
								"y" : 0
							},
							"frame" : 59,
							"front" : 
							{
								"enabled" : true,
								"x" : 1,
								"y" : 0
							},
							"lockangle" : true,
							"locklength" : true,
							"value" : -9.9999997e-05
						}
					],
					"options" : 
					{
						"fps" : 11.8,
						"length" : 59,
						"mode" : "loop",
						"parent" : 
						{
							"key" : "origin"
						}
					},
					"relative" : true
				},
				"value" : "0.00010 0.00010 0.00010"
			}
		},
		{
			"angles" : "0.00000 0.00000 0.00000",
			"id" : 1763,
			"locktransforms" : false,
			"model" : "models/glasstest/glasstest.mdl",
			"name" : "glasstest",
			"origin" : 
			{
				"animation" : 
				{
					"c0" : 
					[
						{
							"back" : 
							{
								"enabled" : true,
								"x" : -1,
								"y" : 0
							},
							"frame" : 0,
							"front" : 
							{
								"enabled" : true,
								"x" : 1,
								"y" : 0
							},
							"lockangle" : true,
							"locklength" : true,
							"value" : 0
						},
						{
							"back" : 
							{
								"enabled" : true,
								"x" : -1,
								"y" : 0
							},
							"frame" : 59,
							"front" : 
							{
								"enabled" : true,
								"x" : 1,
								"y" : 0
							},
							"lockangle" : true,
							"locklength" : true,
							"value" : 0
						}
					],
					"c1" : 
					[
						{
							"back" : 
							{
								"enabled" : true,
								"x" : -1,
								"y" : 0
							},
							"frame" : 0,
							"front" : 
							{
								"enabled" : true,
								"x" : 1,
								"y" : 0
							},
							"lockangle" : true,
							"locklength" : true,
							"value" : 0
						},
						{
							"back" : 
							{
								"enabled" : true,
								"x" : -1,
								"y" : 0
							},
							"frame" : 59,
							"front" : 
							{
								"enabled" : true,
								"x" : 1,
								"y" : 0
							},
							"lockangle" : true,
							"locklength" : true,
							"value" : 2.1669564
						}
					],
					"c2" : 
					[
						{
							"back" : 
							{
								"enabled" : true,
								"x" : -1,
								"y" : 0
							},
							"frame" : 0,
							"front" : 
							{
								"enabled" : true,
								"x" : 1,
								"y" : 0
							},
							"lockangle" : true,
							"locklength" : true,
							"value" : 0
						},
						{
							"back" : 
							{
								"enabled" : true,
								"x" : -1,
								"y" : 0
							},
							"frame" : 59,
							"front" : 
							{
								"enabled" : true,
								"x" : 1,
								"y" : 0
							},
							"lockangle" : true,
							"locklength" : true,
							"value" : 0
						}
					],
					"options" : 
					{
						"children" : 
						[
							{
								"key" : "scale"
							}
						],
						"fps" : 11.8,
						"length" : 59,
						"mode" : "loop"
					},
					"relative" : true
				},
				"value" : "-0.44607 1.19486 -1.19325"
			},
			"parallaxDepth" : "1.00000 1.00000",
			"perspective" : false,
			"scale" : 
			{
				"animation" : 
				{
					"c0" : 
					[
						{
							"back" : 
							{
								"enabled" : true,
								"x" : -1,
								"y" : 0
							},
							"frame" : 0,
							"front" : 
							{
								"enabled" : true,
								"x" : 1,
								"y" : 0
							},
							"lockangle" : true,
							"locklength" : true,
							"value" : 0.00089999998
						},
						{
							"back" : 
							{
								"enabled" : true,
								"x" : -1,
								"y" : 0
							},
							"frame" : 59,
							"front" : 
							{
								"enabled" : true,
								"x" : 1,
								"y" : 0
							},
							"lockangle" : true,
							"locklength" : true,
							"value" : -9.9999997e-05
						}
					],
					"c1" : 
					[
						{
							"back" : 
							{
								"enabled" : true,
								"x" : -1,
								"y" : 0
							},
							"frame" : 0,
							"front" : 
							{
								"enabled" : true,
								"x" : 1,
								"y" : 0
							},
							"lockangle" : true,
							"locklength" : true,
							"value" : 0.00121
						},
						{
							"back" : 
							{
								"enabled" : true,
								"x" : -1,
								"y" : 0
							},
							"frame" : 59,
							"front" : 
							{
								"enabled" : true,
								"x" : 1,
								"y" : 0
							},
							"lockangle" : true,
							"locklength" : true,
							"value" : -9.9999997e-05
						}
					],
					"c2" : 
					[
						{
							"back" : 
							{
								"enabled" : true,
								"x" : -1,
								"y" : 0
							},
							"frame" : 0,
							"front" : 
							{
								"enabled" : true,
								"x" : 1,
								"y" : 0
							},
							"lockangle" : true,
							"locklength" : true,
							"value" : 0.00089999998
						},
						{
							"back" : 
							{
								"enabled" : true,
								"x" : -1,
								"y" : 0
							},
							"frame" : 59,
							"front" : 
							{
								"enabled" : true,
								"x" : 1,
								"y" : 0
							},
							"lockangle" : true,
							"locklength" : true,
							"value" : -9.9999997e-05
						}
					],
					"options" : 
					{
						"fps" : 11.8,
						"length" : 59,
						"mode" : "loop",
						"parent" : 
						{
							"key" : "origin"
						}
					},
					"relative" : true
				},
				"value" : "0.00010 0.00010 0.00010"
			}
		},
		{
			"angles" : "0.00000 0.00000 0.00000",
			"id" : 1764,
			"locktransforms" : false,
			"model" : "models/glasstest/glasstest.mdl",
			"name" : "glasstest",
			"origin" : 
			{
				"animation" : 
				{
					"c0" : 
					[
						{
							"back" : 
							{
								"enabled" : true,
								"x" : -1,
								"y" : 0
							},
							"frame" : -0.0,
							"front" : 
							{
								"enabled" : true,
								"x" : 1,
								"y" : 0
							},
							"lockangle" : true,
							"locklength" : true,
							"value" : 0.27526
						},
						{
							"back" : 
							{
								"enabled" : true,
								"x" : -1,
								"y" : 0
							},
							"frame" : 50,
							"front" : 
							{
								"enabled" : true,
								"x" : 1,
								"y" : 0
							},
							"lockangle" : true,
							"locklength" : true,
							"value" : 0.27526
						}
					],
					"c1" : 
					[
						{
							"back" : 
							{
								"enabled" : true,
								"x" : -1,
								"y" : 0
							},
							"frame" : 2,
							"front" : 
							{
								"enabled" : true,
								"x" : 1,
								"y" : 0
							},
							"lockangle" : true,
							"locklength" : true,
							"value" : 1.49482
						},
						{
							"back" : 
							{
								"enabled" : true,
								"x" : -1,
								"y" : 0
							},
							"frame" : 25,
							"front" : 
							{
								"enabled" : true,
								"x" : 1,
								"y" : 0
							},
							"lockangle" : true,
							"locklength" : true,
							"value" : 3.1217599
						},
						{
							"back" : 
							{
								"enabled" : true,
								"x" : -1,
								"y" : 0
							},
							"frame" : 59,
							"front" : 
							{
								"enabled" : true,
								"x" : 1,
								"y" : 0
							},
							"lockangle" : true,
							"locklength" : true,
							"value" : 3.6617765
						}
					],
					"c2" : 
					[
						{
							"back" : 
							{
								"enabled" : true,
								"x" : -1,
								"y" : 0
							},
							"frame" : -0.0,
							"front" : 
							{
								"enabled" : true,
								"x" : 1,
								"y" : 0
							},
							"lockangle" : true,
							"locklength" : true,
							"value" : -0.28163001
						},
						{
							"back" : 
							{
								"enabled" : true,
								"x" : -1,
								"y" : 0
							},
							"frame" : 50,
							"front" : 
							{
								"enabled" : true,
								"x" : 1,
								"y" : 0
							},
							"lockangle" : true,
							"locklength" : true,
							"value" : -0.28163001
						}
					],
					"options" : 
					{
						"children" : 
						[
							{
								"key" : "scale"
							}
						],
						"fps" : 9.833333,
						"length" : 59,
						"mode" : "loop"
					}
				},
				"value" : "0.27526 1.49482 -0.28163"
			},
			"parallaxDepth" : "1.00000 1.00000",
			"perspective" : false,
			"scale" : 
			{
				"animation" : 
				{
					"c0" : 
					[
						{
							"back" : 
							{
								"enabled" : true,
								"x" : -1,
								"y" : 0
							},
							"frame" : -0.0,
							"front" : 
							{
								"enabled" : true,
								"x" : 1,
								"y" : 0
							},
							"lockangle" : true,
							"locklength" : true,
							"value" : 0.00099999993
						},
						{
							"back" : 
							{
								"enabled" : true,
								"x" : -1,
								"y" : 0
							},
							"frame" : 25,
							"front" : 
							{
								"enabled" : true,
								"x" : 1,
								"y" : 0
							},
							"lockangle" : true,
							"locklength" : true,
							"value" : 0
						},
						{
							"back" : 
							{
								"enabled" : true,
								"x" : -1,
								"y" : 0
							},
							"frame" : 50,
							"front" : 
							{
								"enabled" : true,
								"x" : 1,
								"y" : 0
							},
							"lockangle" : true,
							"locklength" : true,
							"value" : 0
						}
					],
					"c1" : 
					[
						{
							"back" : 
							{
								"enabled" : true,
								"x" : -1,
								"y" : 0
							},
							"frame" : -0.0,
							"front" : 
							{
								"enabled" : true,
								"x" : 1,
								"y" : 0
							},
							"lockangle" : true,
							"locklength" : true,
							"value" : 0.00131
						},
						{
							"back" : 
							{
								"enabled" : true,
								"x" : -1,
								"y" : 0
							},
							"frame" : 25,
							"front" : 
							{
								"enabled" : true,
								"x" : 1,
								"y" : 0
							},
							"lockangle" : true,
							"locklength" : true,
							"value" : -9.9999997e-05
						},
						{
							"back" : 
							{
								"enabled" : true,
								"x" : -1,
								"y" : 0
							},
							"frame" : 50,
							"front" : 
							{
								"enabled" : true,
								"x" : 1,
								"y" : 0
							},
							"lockangle" : true,
							"locklength" : true,
							"value" : 0
						}
					],
					"c2" : 
					[
						{
							"back" : 
							{
								"enabled" : true,
								"x" : -1,
								"y" : 0
							},
							"frame" : -0.0,
							"front" : 
							{
								"enabled" : true,
								"x" : 1,
								"y" : 0
							},
							"lockangle" : true,
							"locklength" : true,
							"value" : 0.00099999993
						},
						{
							"back" : 
							{
								"enabled" : true,
								"x" : -1,
								"y" : 0
							},
							"frame" : 25,
							"front" : 
							{
								"enabled" : true,
								"x" : 1,
								"y" : 0
							},
							"lockangle" : true,
							"locklength" : true,
							"value" : 0
						},
						{
							"back" : 
							{
								"enabled" : true,
								"x" : -1,
								"y" : 0
							},
							"frame" : 50,
							"front" : 
							{
								"enabled" : true,
								"x" : 1,
								"y" : 0
							},
							"lockangle" : true,
							"locklength" : true,
							"value" : 0
						}
					],
					"options" : 
					{
						"fps" : 9.833333,
						"length" : 59,
						"mode" : "loop",
						"parent" : 
						{
							"key" : "origin"
						}
					}
				},
				"value" : "0.00000 0.00000 0.00010"
			}
		},
		{
			"alignment" : "center",
			"alpha" : 
			{
				"script" : "'use strict';\n\n/**\n * @param {Number} value - for property 'alpha'\n * @return {Number} - update current property value\n */\nexport function update(value) {\n\t\n\treturn value;\n}\n",
				"user" : "initialzooom",
				"value" : 1.2
			},
			"angles" : "0.65195 -0.99557 0.00000",
			"brightness" : 1.0,
			"color" : "0.89412 0.28235 0.96471",
			"colorBlendMode" : 0,
			"copybackground" : true,
			"effects" : 
			[
				{
					"file" : "effects/clouds/effect.json",
					"id" : 87,
					"name" : "",
					"passes" : 
					[
						{
							"combos" : 
							{
								"SHADING" : 0,
								"WRITEALPHA" : 1
							},
							"constantshadervalues" : 
							{
								"alpha" : 1,
								"colorend" : "0.9686274509803922 0 0",
								"colorstart" : "0.7647058823529411 0.08627450980392157 0.5647058823529412",
								"feather" : 0.51999998,
								"scale" : "1.3 1.3 0.5 0.5",
								"smoothness" : 3.23,
								"speed" : "0.05 0.05",
								"threshold" : 0.19,
								"ui_editor_properties_perspective_warp" : "0 0 0 0"
							},
							"id" : 88
						}
					],
					"visible" : 
					{
						"script" : "'use strict';\n\n/**\n * @param {Boolean} value - for property 'visible'\n * @return {Boolean} - update current property value\n */\nexport function update(value) {\n\t\n\treturn value;\n}\n\n/**\n * @param {Object} changedUserProperties - only includes user properties that were recently changed!\n */\nexport function applyUserProperties(changedUserProperties) {\n\tif (changedUserProperties.darkmode !== undefined){\n\t\tthisScene.getLayer(\"darkmode\").visible = changedUserProperties.darkmode;\n\t}\n\t\n}\n",
						"user" : "darkmode",
						"value" : true
					}
				},
				{
					"file" : "effects/tint/effect.json",
					"id" : 89,
					"name" : "",
					"passes" : 
					[
						{
							"constantshadervalues" : 
							{
								"alpha" : 1.0,
								"color" : "0.6784313725490196 0.2823529411764706 0.9568627450980393"
							},
							"id" : 90
						}
					],
					"visible" : true
				},
				{
					"file" : "effects/blur/effect.json",
					"id" : 118,
					"name" : "",
					"passes" : 
					[
						{
							"id" : 119
						},
						{
							"constantshadervalues" : 
							{
								"scale" : "1 1"
							},
							"id" : 120
						},
						{
							"combos" : 
							{
								"VERTICAL" : 1
							},
							"constantshadervalues" : 
							{
								"scale" : "1 1"
							},
							"id" : 121
						},
						{
							"constantshadervalues" : 
							{
								"compositecolor" : "1 1 1"
							},
							"id" : 122,
							"textures" : [ null, "util/white" ]
						}
					],
					"visible" : true
				}
			],
			"id" : 86,
			"image" : "models/util/solidlayer_depthtest.json",
			"ledsource" : false,
			"locktransforms" : false,
			"name" : "Solid",
			"origin" : "-3.50722 -3.41218 2.78083",
			"parallaxDepth" : "1.00000 1.00000",
			"perspective" : false,
			"scale" : "0.01000 0.01000 0.01000",
			"size" : "512.00000 512.00000",
			"solid" : true,
			"visible" : false
		},
		{
			"alignment" : "center",
			"alpha" : 1.0,
			"angles" : "0.65195 -0.99557 0.00000",
			"brightness" : 1.0,
			"color" : "1.00000 1.00000 1.00000",
			"colorBlendMode" : 26,
			"copybackground" : true,
			"effects" : 
			[
				{
					"file" : "effects/clouds/effect.json",
					"id" : 81,
					"name" : "",
					"passes" : 
					[
						{
							"combos" : 
							{
								"BLENDMODE" : 26,
								"SHADING" : 0,
								"WRITEALPHA" : 1
							},
							"constantshadervalues" : 
							{
								"alpha" : 1,
								"colorend" : "0.09804 0.57255 0.17647",
								"colorstart" : "0.6431372549019608 0.7215686274509804 0.20784313725490197",
								"feather" : 0.56999999,
								"scale" : "1.3 1.3 0.5 0.5",
								"smoothness" : 4.71,
								"speed" : "0.05 0.05",
								"threshold" : 0.30000001,
								"ui_editor_properties_perspective_warp" : "0 0 0 0"
							},
							"id" : 82
						}
					],
					"visible" : true
				},
				{
					"file" : "effects/tint/effect.json",
					"id" : 83,
					"name" : "",
					"passes" : 
					[
						{
							"constantshadervalues" : 
							{
								"alpha" : 1.0,
								"color" : "0.8745098039215686 1 0.611764705882353"
							},
							"id" : 84
						}
					],
					"visible" : false
				},
				{
					"file" : "effects/blur/effect.json",
					"id" : 130,
					"name" : "",
					"passes" : 
					[
						{
							"id" : 131
						},
						{
							"constantshadervalues" : 
							{
								"scale" : "1 1"
							},
							"id" : 132
						},
						{
							"combos" : 
							{
								"VERTICAL" : 1
							},
							"constantshadervalues" : 
							{
								"scale" : "1 1"
							},
							"id" : 133
						},
						{
							"constantshadervalues" : 
							{
								"compositecolor" : "1 1 1"
							},
							"id" : 134,
							"textures" : [ null, "util/white" ]
						}
					],
					"visible" : false
				}
			],
			"id" : 80,
			"image" : "models/util/solidlayer_depthtest.json",
			"ledsource" : false,
			"locktransforms" : false,
			"name" : "Solid",
			"origin" : "-3.50722 -3.41218 2.78083",
			"parallaxDepth" : "1.00000 1.00000",
			"perspective" : false,
			"scale" : 
			{
				"script" : "'use strict';\nlet maskCube = engine.registerAsset(\"/models/maskcube/maskcube.mdl\");\nlet bgBlock = engine.registerAsset(\"/models/blockbg2/blockbg2.mdl\");\nexport var scriptProperties = createScriptProperties()\n\t.addSlider({\n\t\tname: 'frequency',\n\t\tlabel: 'ui_editor_properties_audio_frequency',\n\t\tvalue: 0,\n\t\tmin: 0,\n\t\tmax: 15,\n\t\tinteger: true\n\t})\n\t.addSlider({\n\t\tname: 'smoothing',\n\t\tlabel: 'ui_editor_properties_audio_response',\n\t\tvalue: 2,\n\t\tmin: 0,\n\t\tmax: 20,\n\t\tinteger: false\n\t})\n\t.addSlider({\n\t\tname: 'minvalue',\n\t\tlabel: 'ui_editor_properties_min',\n\t\tvalue: 0.8,\n\t\tmin: 0,\n\t\tmax: 3,\n\t\tinteger: false\n\t})\n\t.addSlider({\n\t\tname: 'maxvalue',\n\t\tlabel: 'ui_editor_properties_max',\n\t\tvalue: 5,\n\t\tmin: 0,\n\t\tmax: 100,\n\t\tinteger: false\n\t})\n\n\t.finish();\nlet wallDelay;\nvar bgCubes = [];\n/**\n * Configure these to control smoothing and the frequency.\n */\nlet frequencyResolution = 64; // Must be 16, 32 or 64 per channel.\n\n/**\n * This creates a permanent link to the audio response data.\n */\nlet audioBuffer = engine.registerAudioBuffers(frequencyResolution);\nvar smoothValue = 0;\nvar initialScale;\nvar index = [];\nvar cubeind = 0;\nvar time = Date.now();\nvar bgvisualizer = true;\nvar timer =0;\n/**\n * Drives the cube wall's movement when idle and audio.\n */\nexport function update() {\n\tif (bgCubes.length > 0) {\n\t\tif (((audioBuffer.average).reduce((a, b) => a + b) < 1 && Date.now() - time > 1000) || !bgvisualizer) {\n\n\t\t\tbgCubes.forEach(element => {\n\t\t\t\telement.scale = new Vec3(element.scale.x, element.scale.y, scriptProperties.minvalue + (Math.sin((engine.runtime) + Math.cos(cubeind) * cubeind) + 2) * 0.2);\n\t\t\t\tcubeind++;\n\t\t\t})\n\t\t\tcubeind = 0;\n\t\t} else if (bgvisualizer) {\n\t\t\tconst scaleDelta = scriptProperties.maxvalue - scriptProperties.minvalue;\n\t\t\tlet runIndex=0;\n\t\t\tfor (var i = 0; i < bgCubes.length; i++) {\n\t\t\t\t\n\n\t\t\t\tlet audioDelta;\n\n\t\t\t\taudioDelta = audioBuffer.average[index[i % 200]] - smoothValue;\n\t\t\t\tlet waveForm = (2*shared.smoothbass*(Math.sin((0.5*(timer+runIndex))/20))/2);\n\t\t\t\tsmoothValue += audioDelta * Math.min(1.0, engine.frametime * scriptProperties.smoothing);\n\t\t\t\tsmoothValue = Math.min(1.0, smoothValue);\n\t\t\t\tbgCubes[i].scale = new Vec3(bgCubes[i].scale.x, bgCubes[i].scale.y, initialScale.z * smoothValue * scaleDelta + scriptProperties.minvalue+waveForm);\n\t\t\t\t\n\t\t\t\t\n\t\t\t\ttimer+=shared.smoothbass/170;\n\t\t\t\trunIndex+=1;\n\n\t\t\t\tif (audioBuffer.average[0] > 0.1) {\n\t\t\t\t\ttime = Date.now();\n\t\t\t\t}\n\t\t\t}\n\n\n\t\t}\n\t}\n\n}\n\n\nexport function init(value) {\n\tif (engine.isMobileDevice()) {\n\t\twallDelay = 250;\n\n\t} else {\n\t\twallDelay = 0;\n\t}\n\tinitialScale = value;\n\tshared.walls = false;\n\n\treturn value;\n}\nvar fracturedwall = true;\n\nexport function deleteWalls() {\n\n\tbgCubes.forEach(element => thisScene.destroyLayer(element));\n\n\tbgCubes.length = [];\n\tindex.length = [];\n}\nlet wallLayerposition = 0;\nexport function createWalls() {\n\n\tvar row = 0;\n\tvar layer;\n\tfor (var col = 0; col < 32; col++) {\n\n\t\tfor (var row = 0; row < 14; row++) {\n\t\t\tif (fracturedwall && (Math.random() * 5000 | 0) > 4800) {\n\t\t\t\tlayer = thisScene.createLayer(maskCube);\n\t\t\t} else {\n\t\t\t\tlayer = thisScene.createLayer(bgBlock);\n\t\t\t}\n\t\t\tlayer.scale = new Vec3(1, 1, 1);\n\t\t\tlayer.origin = new Vec3(2.02 * row - 20, col * 2.02 - 20, -10);\n\t\t\tlayer.angles = new Vec3(0, 0, 0);\n\t\t\tbgCubes.push(layer);\n\n\t\t}\n\n\t}\n\n\n\tfor (var i = 0; i < 200; i++) {\n\t\tindex.push(Math.random() * (45) + 13 | 0);\n\t}\n\n\tengine.setTimeout(() => { // rendering walls seperately so it works for slower devices\n\t\tfor (var col = 0; col < 13; col++) {\n\n\t\t\tfor (var row = 0; row < 32 && bgCubes.length < 1024; row++) {\n\n\t\t\t\tif (fracturedwall && (Math.random() * 5000 | 0) > 4800) {\n\t\t\t\t\tlayer = thisScene.createLayer(maskCube);\n\t\t\t\t} else {\n\t\t\t\t\tlayer = thisScene.createLayer(bgBlock);\n\t\t\t\t}\n\t\t\t\tlayer.scale = new Vec3(1, 1, 1);\n\t\t\t\tlayer.origin = new Vec3(9, 2.02 * row - 20, 2.02 * col - 10);\n\t\t\t\tlayer.angles = new Vec3(-90, -90, -90);\n\t\t\t\tbgCubes.push(layer);\n\n\t\t\t}\n\n\n\t\t}\n\n\n\t\tfor (var i = 0; i < bgCubes.length; i++) {\n\t\t\tthisScene.sortLayer(bgCubes[i], 41 + i);\n\t\t}\n\t\tshared.walls = true;\n\t}, wallDelay);\n\n}\nexport function rebuildWalls() {\n\tdeleteWalls();\n\tcreateWalls();\n\n}\n\n/**\n * @param {Object} changedUserProperties - only includes user properties that were recently changed!\n */\nlet created = false;\nlet wallsEnabled = false;\nexport function applyUserProperties(changedUserProperties) {\n\n\tif (changedUserProperties.fractured !== undefined) {\n\t\tfracturedwall = changedUserProperties.fractured;\n\t}\n\n\tif (changedUserProperties.enablewalls !== undefined || changedUserProperties.fractured !== undefined) {\n\t\tdeleteWalls();\n\t\tif (changedUserProperties.enablewalls !== undefined) {\n\t\t\twallsEnabled = changedUserProperties.enablewalls;\n\t\t}\n\t\tif (wallsEnabled) {\n\n\t\t\tengine.setTimeout(createWalls(), 250);\n\t\t}\n\n\t}\n\n\tif (changedUserProperties.bgvisualizer != undefined) {\n\t\tbgvisualizer = changedUserProperties.bgvisualizer;\n\t}\n\tcreated = false;\n\n}\n",
				"scriptproperties" : 
				{
					"frequency" : 0,
					"maxvalue" : 
					{
						"user" : "maxvalue",
						"value" : 5
					},
					"minvalue" : 0.80000001,
					"smoothing" : 60
				},
				"value" : "0.01000 0.01000 0.01000"
			},
			"size" : "600.00000 600.00000",
			"solid" : true,
			"visible" : 
			{
				"user" : "colorshifting",
				"value" : true
			}
		},
		{
			"alignment" : "center",
			"alpha" : 1.0,
			"angles" : "0.65195 -0.99557 0.00000",
			"brightness" : 1.0,
			"color" : "1.00000 1.00000 1.00000",
			"colorBlendMode" : 26,
			"copybackground" : true,
			"effects" : 
			[
				{
					"file" : "effects/clouds/effect.json",
					"id" : 27,
					"name" : "",
					"passes" : 
					[
						{
							"combos" : 
							{
								"BLENDMODE" : 26,
								"SHADING" : 0,
								"WRITEALPHA" : 1
							},
							"constantshadervalues" : 
							{
								"alpha" : 0.60000002,
								"colorend" : "0.00000 0.35686 0.92549",
								"colorstart" : "0.77255 0.78824 0.08235",
								"feather" : 0.12,
								"scale" : "1.3 1.3 0.5 0.5",
								"smoothness" : 3.6500001,
								"speed" : "0.1 0.1",
								"threshold" : 0.07,
								"ui_editor_properties_perspective_warp" : "0 0 0 0"
							},
							"id" : 28
						}
					],
					"visible" : true
				},
				{
					"file" : "effects/tint/effect.json",
					"id" : 46,
					"name" : "",
					"passes" : 
					[
						{
							"constantshadervalues" : 
							{
								"alpha" : 1.0,
								"color" : "0.8745098039215686 1 0.611764705882353"
							},
							"id" : 47
						}
					],
					"visible" : false
				},
				{
					"file" : "effects/blur/effect.json",
					"id" : 106,
					"name" : "",
					"passes" : 
					[
						{
							"id" : 107
						},
						{
							"constantshadervalues" : 
							{
								"scale" : "1 1"
							},
							"id" : 108
						},
						{
							"combos" : 
							{
								"VERTICAL" : 1
							},
							"constantshadervalues" : 
							{
								"scale" : "1 1"
							},
							"id" : 109
						},
						{
							"constantshadervalues" : 
							{
								"compositecolor" : "1 1 1"
							},
							"id" : 110,
							"textures" : [ null, "util/white", null ]
						}
					],
					"visible" : true
				}
			],
			"id" : 25,
			"image" : "models/util/solidlayer_depthtest.json",
			"ledsource" : false,
			"locktransforms" : false,
			"name" : "Solid1",
			"origin" : "-3.50722 -3.41218 2.78083",
			"parallaxDepth" : "1.00000 1.00000",
			"perspective" : false,
			"scale" : "0.01000 0.01000 0.01000",
			"size" : "600.00000 600.00000",
			"solid" : true,
			"visible" : 
			{
				"user" : "colorshifting",
				"value" : true
			}
		},
		{
			"alignment" : "center",
			"alpha" : 1.0,
			"angles" : "0.65195 -0.99557 0.00000",
			"brightness" : 1.0,
			"color" : "1.00000 1.00000 1.00000",
			"colorBlendMode" : 26,
			"copybackground" : true,
			"effects" : 
			[
				{
					"file" : "effects/clouds/effect.json",
					"id" : 144,
					"name" : "",
					"passes" : 
					[
						{
							"combos" : 
							{
								"BLENDMODE" : 11,
								"SHADING" : 0,
								"WRITEALPHA" : 1
							},
							"constantshadervalues" : 
							{
								"alpha" : 1,
								"colorend" : "0.43922 0.03529 0.91765",
								"colorstart" : "0.08627450980392157 0.7647058823529411 0.49411764705882355",
								"feather" : 0.41,
								"scale" : "2 2 2 0.5",
								"smoothness" : 1.28,
								"speed" : "0.1 0.1",
								"threshold" : 0.039999999,
								"ui_editor_properties_perspective_warp" : "0 0 0 0"
							},
							"id" : 145
						}
					],
					"visible" : true
				},
				{
					"file" : "effects/tint/effect.json",
					"id" : 146,
					"name" : "",
					"passes" : 
					[
						{
							"constantshadervalues" : 
							{
								"alpha" : 1.0,
								"color" : "0.8745098039215686 1 0.611764705882353"
							},
							"id" : 147
						}
					],
					"visible" : false
				},
				{
					"file" : "effects/blur/effect.json",
					"id" : 148,
					"name" : "",
					"passes" : 
					[
						{
							"id" : 149
						},
						{
							"constantshadervalues" : 
							{
								"scale" : "1 1"
							},
							"id" : 150
						},
						{
							"combos" : 
							{
								"VERTICAL" : 1
							},
							"constantshadervalues" : 
							{
								"scale" : "1 1"
							},
							"id" : 151
						},
						{
							"constantshadervalues" : 
							{
								"compositecolor" : "1 1 1"
							},
							"id" : 152,
							"textures" : [ null, "util/white", null ]
						}
					],
					"visible" : true
				}
			],
			"id" : 137,
			"image" : "models/util/solidlayer_depthtest.json",
			"ledsource" : false,
			"locktransforms" : false,
			"name" : "Solid",
			"origin" : "-3.50722 -3.41218 2.78083",
			"parallaxDepth" : "1.00000 1.00000",
			"perspective" : false,
			"scale" : "0.01000 0.01000 0.01000",
			"size" : "600.00000 600.00000",
			"solid" : true,
			"visible" : 
			{
				"user" : "colorshifting",
				"value" : true
			}
		},
		{
			"alignment" : "center",
			"alpha" : 1.0,
			"angles" : "0.39368 -0.67083 -0.06510",
			"brightness" : 1.0,
			"color" : "1.00000 1.00000 1.00000",
			"colorBlendMode" : 0,
			"config" : 
			{
				"passthrough" : true
			},
			"copybackground" : true,
			"effects" : 
			[
				{
					"file" : "effects/edgedetection/effect.json",
					"id" : 262,
					"name" : "wite",
					"passes" : 
					[
						{
							"combos" : 
							{
								"BLENDMODE" : 11
							},
							"constantshadervalues" : 
							{
								"alpha" : 0.99000001,
								"brightness" : 1,
								"detectmultiply" : 2.5999999,
								"detectthreshold" : 0,
								"outlinecolor" : "0 0 0",
								"outlinecolorbg" : "0.8901960784313725 0.8901960784313725 0.8901960784313725",
								"size" : 5
							},
							"id" : 263
						}
					],
					"visible" : 
					{
						"user" : 
						{
							"condition" : "whitecel",
							"name" : "whitecel"
						},
						"value" : true
					}
				},
				{
					"file" : "effects/edgedetection/effect.json",
					"id" : 359,
					"name" : "normal",
					"passes" : 
					[
						{
							"combos" : 
							{
								"BLENDMODE" : 22
							},
							"constantshadervalues" : 
							{
								"alpha" : 0.99000001,
								"brightness" : 1.01,
								"detectmultiply" : 2.5999999,
								"detectthreshold" : 0,
								"outlinecolor" : "0.27450980392156865 0.24313725490196078 0.28627450980392155",
								"outlinecolorbg" : "0 0 0",
								"size" : 5
							},
							"id" : 0
						}
					],
					"visible" : 
					{
						"user" : 
						{
							"condition" : "celshading",
							"name" : "whitecel"
						},
						"value" : false
					}
				},
				{
					"file" : "effects/blurprecise/effect.json",
					"id" : 200,
					"name" : "blur",
					"passes" : 
					[
						{
							"constantshadervalues" : 
							{
								"scale" : 
								{
									"script" : "'use strict';\n\nimport * as WEMath from 'WEMath';\n\nexport var scriptProperties = createScriptProperties()\n\t.addSlider({\n\t\tname: 'frequency',\n\t\tlabel: 'ui_editor_properties_audio_frequency',\n\t\tvalue: 0,\n\t\tmin: 0,\n\t\tmax: 15,\n\t\tinteger: true\n\t})\n\t.addSlider({\n\t\tname: 'smoothing',\n\t\tlabel: 'ui_editor_properties_audio_response',\n\t\tvalue: 60,\n\t\tmin: 0,\n\t\tmax: 100,\n\t\tinteger: false\n\t})\n\t.addSlider({\n\t\tname: 'minvalue',\n\t\tlabel: 'ui_editor_properties_min',\n\t\tvalue: 0.8,\n\t\tmin: 0,\n\t\tmax: 3,\n\t\tinteger: false\n\t})\n\t.addSlider({\n\t\tname: 'maxvalue',\n\t\tlabel: 'ui_editor_properties_max',\n\t\tvalue: 3,\n\t\tmin: 0,\n\t\tmax: 3,\n\t\tinteger: false\n\t})\n\t.addSlider({\n\t\tname: 'maxzoom',\n\t\tlabel: 'Max Zoom',\n\t\tvalue: 1.5,\n\t\tmin: 0,\n\t\tmax: 10,\n\t\tinteger: false\n\t})\n\t.addCheckbox({\n\t\tname: 'bassblur',\n\t\tlabel: 'Bass Blur',\n\t\tvalue: true\n\t})\n\t.addSlider({\n\t\tname: 'initialzooom',\n\t\tlabel: 'Initial Zoom',\n\t\tvalue: 1,\n\t\tmin: 0.1,\n\t\tmax: 2,\n\t\tinteger: false\n\t})\n\t.finish();\n\t\n/**\n * Configure these to control smoothing and the frequency.\n */\nlet frequencyResolution = 16; // Must be 16, 32 or 64 per channel.\nlet bloomstr;\n/**\n * This creates a permanent link to the audio response data.\n */\nlet audioBuffer = engine.registerAudioBuffers(frequencyResolution);\nvar smoothValue = 0;\nvar initialValue;\nlet thisFov;\nlet time = 0;\nlet smoothaudio = false;\n/**\n */\nexport function update() {\n\t\n\tconst valueDelta = scriptProperties.maxvalue - scriptProperties.minvalue;\n\tlet audioDelta = audioBuffer.average[scriptProperties.frequency] - smoothValue;\n\t\n\tsmoothValue += audioDelta * Math.min(1.0, engine.frametime * scriptProperties.smoothing);\n\tsmoothValue = Math.min(1.0, smoothValue);\n\n\tvar processed = initialValue * (smoothValue * valueDelta + scriptProperties.minvalue);\n\n\tlet bass = (smoothaudio ? shared.smoothbass: WEMath.smoothStep(0.2,0.3,processed)); \n\tthisScene.fov = thisFov-Math.max(0.2,bass)*5*scriptProperties.maxzoom;\t\t\n\tif (processed>0.2){\n\n\n\t\t\n\t\t\tif(scriptProperties.bassblur && thisScene.bloomstrength< bloomstr+1.3){\n\t\t\t\tthisScene.bloomstrength+=0.05;\n\t\t\t\n\t\t\n\t\t//thisScene.fov = -Math.sin(initialValue * (smoothValue * valueDelta + scriptProperties.minvalue),initialValue * (smoothValue * valueDelta + scriptProperties.minvalue))*200+thisFov;\n\t\t}\n\t\tif(scriptProperties.bassblur){\n\t\t\tthisLayer.getEffect(\"blur\").visible = true;\n\t\t}\n\t\treturn new Vec2(initialValue * (smoothValue * valueDelta + scriptProperties.minvalue)*10,initialValue * (smoothValue * valueDelta + scriptProperties.minvalue)*10);\n\t}else{\n\t\tif(time>0){\n\t\t\ttime-=2.5;\n\t\t}\n\t\t\t\t\tif(thisScene.bloomstrength> bloomstr){\n\n\t\t\t\tthisScene.bloomstrength-=0.05;\n\t\t\t}\n\n\t\tthisLayer.getEffect(\"blur\").visible = false;\n\t\t\n\t}\n\n/*\t\t\tif(thisScene.fov < thisFov){\n\t\t\t\t\t\tthisScene.fov -= WEMath.smoothStep(thisFov,thisFov-scriptProperties.maxzoom, (Date.now()-time)/100)*0.1;\n\t\t}\n*/\t\n\t\n}\n\nexport function smootherstep(a, b,x){\n\tx = clamp((x - a)/(b - a), 0., 1.);\n\treturn x * x * x * (x * (x * 6. - 15.) + 10.);\n}\n\nfunction clamp(num, min, max) {\n  return num <= min ? min : num >= max ? max : num;\n}\n\n\n/**\n */\nexport function init(value) {\n\ttime = thisScene.fov;\n\tthisScene.bloomstrength = 1;\n\tbloomstr = thisScene.bloomstrength;\n\tthisFov = thisScene.fov;\n\t\t\t\tthisScene.camerashake = true;\n\tthisScene.camerashakeamplitude = 1;\n\tthisScene.camerashakespeed = 0.3;\n\tinitialValue = value.y+value.x;\n}\n\n/**\n * @param {Object} changedUserProperties - only includes user properties that were recently changed!\n */\n\n\n\nexport function applyUserProperties(userProperties) {\n\tif(userProperties.bloomstrength != undefined){\n\t\tthisScene.bloomstrength = userProperties.bloomstrength;\n\t\t\n\t\tbloomstr = userProperties.bloomstrength;\n\t\t\n\n\t}\n\tif( userProperties.smoothaudio != undefined){\n\t\tsmoothaudio = userProperties.smoothaudio;\n\t}\n}\n",
									"scriptproperties" : 
									{
										"bassblur" : 
										{
											"user" : "bassblur",
											"value" : false
										},
										"frequency" : 0,
										"initialzooom" : 
										{
											"user" : "initialzooom",
											"value" : 1
										},
										"maxvalue" : 3,
										"maxzoom" : 
										{
											"user" : "maxzoom",
											"value" : 1.5
										},
										"minvalue" : 0.80000001,
										"smoothing" : 11.11
									},
									"value" : "0.05000 0.05000"
								}
							},
							"id" : 201
						},
						{
							"combos" : 
							{
								"ENABLEMASK" : 1,
								"VERTICAL" : 1
							},
							"constantshadervalues" : 
							{
								"scale" : 
								{
									"script" : "'use strict';\n\nimport * as WEMath from 'WEMath';\n\nexport var scriptProperties = createScriptProperties()\n\t.addSlider({\n\t\tname: 'frequency',\n\t\tlabel: 'ui_editor_properties_audio_frequency',\n\t\tvalue: 0,\n\t\tmin: 0,\n\t\tmax: 15,\n\t\tinteger: true\n\t})\n\t.addSlider({\n\t\tname: 'smoothing',\n\t\tlabel: 'ui_editor_properties_audio_response',\n\t\tvalue: 60,\n\t\tmin: 0,\n\t\tmax: 100,\n\t\tinteger: false\n\t})\n\t.addSlider({\n\t\tname: 'minvalue',\n\t\tlabel: 'ui_editor_properties_min',\n\t\tvalue: 0.8,\n\t\tmin: 0,\n\t\tmax: 3,\n\t\tinteger: false\n\t})\n\t.addSlider({\n\t\tname: 'maxvalue',\n\t\tlabel: 'ui_editor_properties_max',\n\t\tvalue: 3,\n\t\tmin: 0,\n\t\tmax: 3,\n\t\tinteger: false\n\t})\n\t.addSlider({\n\t\tname: 'maxzoom',\n\t\tlabel: 'Max Zoom',\n\t\tvalue: 1.5,\n\t\tmin: 0,\n\t\tmax: 10,\n\t\tinteger: false\n\t})\n\t.addCheckbox({\n\t\tname: 'bassblur',\n\t\tlabel: 'Bass Blur',\n\t\tvalue: true\n\t})\n\t.addSlider({\n\t\tname: 'initialzooom',\n\t\tlabel: 'Initial Zoom',\n\t\tvalue: 1,\n\t\tmin: 0.1,\n\t\tmax: 2,\n\t\tinteger: false\n\t})\n\t.finish();\n\t\n/**\n * Configure these to control smoothing and the frequency.\n */\nlet frequencyResolution = 16; // Must be 16, 32 or 64 per channel.\nlet bloomstr;\n/**\n * This creates a permanent link to the audio response data.\n */\nlet audioBuffer = engine.registerAudioBuffers(frequencyResolution);\nvar smoothValue = 0;\nvar initialValue;\nlet thisFov;\nlet time = 0;\nlet smoothaudio = false;\n/**\n */\nexport function update() {\n\t\n\tconst valueDelta = scriptProperties.maxvalue - scriptProperties.minvalue;\n\tlet audioDelta = audioBuffer.average[scriptProperties.frequency] - smoothValue;\n\t\n\tsmoothValue += audioDelta * Math.min(1.0, engine.frametime * scriptProperties.smoothing);\n\tsmoothValue = Math.min(1.0, smoothValue);\n\n\tvar processed = initialValue * (smoothValue * valueDelta + scriptProperties.minvalue);\n\n\tlet bass = (smoothaudio ? shared.smoothbass: WEMath.smoothStep(0.2,0.3,processed)); \n\tthisScene.fov = thisFov-Math.max(0.2,bass)*5*scriptProperties.maxzoom;\t\t\n\tif (processed>0.2){\n\n\n\t\t\n\t\t\tif(scriptProperties.bassblur && thisScene.bloomstrength< bloomstr+1.3){\n\t\t\t\tthisScene.bloomstrength+=0.05;\n\t\t\t\n\t\t\n\t\t//thisScene.fov = -Math.sin(initialValue * (smoothValue * valueDelta + scriptProperties.minvalue),initialValue * (smoothValue * valueDelta + scriptProperties.minvalue))*200+thisFov;\n\t\t}\n\t\tif(scriptProperties.bassblur){\n\t\t\tthisLayer.getEffect(\"blur\").visible = true;\n\t\t}\n\t\treturn new Vec2(initialValue * (smoothValue * valueDelta + scriptProperties.minvalue)*10,initialValue * (smoothValue * valueDelta + scriptProperties.minvalue)*10);\n\t}else{\n\t\tif(time>0){\n\t\t\ttime-=2.5;\n\t\t}\n\t\t\t\t\tif(thisScene.bloomstrength> bloomstr){\n\n\t\t\t\tthisScene.bloomstrength-=0.05;\n\t\t\t}\n\n\t\tthisLayer.getEffect(\"blur\").visible = false;\n\t\t\n\t}\n\n/*\t\t\tif(thisScene.fov < thisFov){\n\t\t\t\t\t\tthisScene.fov -= WEMath.smoothStep(thisFov,thisFov-scriptProperties.maxzoom, (Date.now()-time)/100)*0.1;\n\t\t}\n*/\t\n\t\n}\n\nexport function smootherstep(a, b,x){\n\tx = clamp((x - a)/(b - a), 0., 1.);\n\treturn x * x * x * (x * (x * 6. - 15.) + 10.);\n}\n\nfunction clamp(num, min, max) {\n  return num <= min ? min : num >= max ? max : num;\n}\n\n\n/**\n */\nexport function init(value) {\n\ttime = thisScene.fov;\n\tthisScene.bloomstrength = 1;\n\tbloomstr = thisScene.bloomstrength;\n\tthisFov = thisScene.fov;\n\t\t\t\tthisScene.camerashake = true;\n\tthisScene.camerashakeamplitude = 1;\n\tthisScene.camerashakespeed = 0.3;\n\tinitialValue = value.y+value.x;\n}\n\n/**\n * @param {Object} changedUserProperties - only includes user properties that were recently changed!\n */\n\n\n\nexport function applyUserProperties(userProperties) {\n\tif(userProperties.bloomstrength != undefined){\n\t\tthisScene.bloomstrength = userProperties.bloomstrength;\n\t\t\n\t\tbloomstr = userProperties.bloomstrength;\n\t\t\n\n\t}\n\tif( userProperties.smoothaudio != undefined){\n\t\tsmoothaudio = userProperties.smoothaudio;\n\t}\n}\n",
									"scriptproperties" : 
									{
										"bassblur" : 
										{
											"user" : "bassblur",
											"value" : false
										},
										"frequency" : 0,
										"initialzooom" : 
										{
											"user" : "initialzooom",
											"value" : 1
										},
										"maxvalue" : 3,
										"maxzoom" : 
										{
											"user" : "maxzoom",
											"value" : 1.5
										},
										"minvalue" : 0.80000001,
										"smoothing" : 11.11
									},
									"value" : "0.05000 0.05000"
								}
							},
							"id" : 202
						}
					],
					"visible" : true
				},
				{
					"file" : "effects/tint/effect.json",
					"id" : 242,
					"name" : "",
					"passes" : 
					[
						{
							"combos" : 
							{
								"BLENDMODE" : 26
							},
							"constantshadervalues" : 
							{
								"alpha" : 1.0,
								"color" : 
								{
									"script" : "'use strict';\n\nimport * as WEColor from 'WEColor';\n\nlet rainbowSpeed = 0.2;\nlet rainbowSaturation = 0.01;\nlet rainbowBrightness = 1;\n\n/**\n * @param {Vec3} value\n */\nexport function update(value) {\n\n\tvalue = WEColor.hsv2rgb({\n\t\tx: Date.now() / 2000 * rainbowSpeed % 1,\n\t\ty: rainbowSaturation,\n\t\tz: rainbowBrightness\n\t});\n\t\n\treturn value;\n}\n",
									"value" : "1.00000 0.00000 0.00000"
								}
							},
							"id" : 243
						}
					],
					"visible" : 
					{
						"user" : "colorrotation",
						"value" : false
					}
				},
				{
					"file" : "effects/tint/effect.json",
					"id" : 305,
					"name" : "shift",
					"passes" : 
					[
						{
							"combos" : 
							{
								"BLENDMODE" : 26
							},
							"constantshadervalues" : 
							{
								"alpha" : 1.0,
								"color" : 
								{
									"script" : "'use strict';\n\nimport * as WEColor from 'WEColor';\n\nexport var scriptProperties = createScriptProperties()\n\t.addSlider({\n\t\tname: 'strength',\n\t\tlabel: 'strength',\n\t\tvalue: 0.5,\n\t\tmin: 0.05,\n\t\tmax: 1,\n\t\tinteger: false\n\t})\n\t.finish();\n\nlet rainbowSpeed = 1;\nlet rainbowSaturation = 1;\nlet rainbowBrightness = 1;\nlet color;\nlet smooth;\n/**\n * @param {Vec3} value\n */\nexport function update(value) {\n\t\tif (smooth){\n\t\t\t\t\tvalue = WEColor.hsv2rgb({\n\t\t\tx: (shared.smoothbass*scriptProperties.strength +color.y)%1  ,\n\t\t\ty: rainbowSaturation,\n\t\t\tz: rainbowBrightness\n\t\t});\n\t\t}else{\n\t\t\t\t\tvalue = WEColor.hsv2rgb({\n\t\t\tx: (shared.audiodata*scriptProperties.strength +color.y)%1  ,\n\t\t\ty: rainbowSaturation,\n\t\t\tz: rainbowBrightness\n\t\t});\n\t\t}\n\n\t\n\treturn value;\n}\n\n\n\n/**\n * @param {Object} changedUserProperties - only includes user properties that were recently changed!\n */\nexport function applyUserProperties(properties) {\n\tif(properties.audioshift != undefined){\n\t\tcolor = properties.audioshift;\n\t}\n\tif(properties.enableaudioshift != undefined){\n\t\tthisLayer.getEffect(\"shift\").visible = properties.enableaudioshift;\n\t}\n\tif(properties.smoothaudio != undefined){\n\t\tsmooth = properties.smoothaudio;\n\t}\n\n}\n",
									"scriptproperties" : 
									{
										"strength" : 
										{
											"user" : "shiftstrength",
											"value" : 0.5
										}
									},
									"user" : "audioshift",
									"value" : "1.00000 0.00000 0.00000"
								}
							},
							"id" : 306
						}
					],
					"visible" : true
				}
			],
			"id" : 189,
			"image" : "models/util/composelayer_depthtest.json",
			"ledsource" : false,
			"locktransforms" : false,
			"name" : "Compose",
			"origin" : "-2.48658 -3.13203 2.51225",
			"parallaxDepth" : "1.00000 1.00000",
			"perspective" : false,
			"scale" : "0.00150 0.00150 0.00200",
			"size" : "4500.00000 4500.00000",
			"solid" : true,
			"visible" : true
		},
		{
			"angles" : "0.00000 0.00000 0.00000",
			"color" : "1.00000 1.00000 1.00000",
			"id" : 95,
			"intensity" : 
			{
				"user" : "initialzoom",
				"value" : 1.0
			},
			"light" : "point",
			"locktransforms" : false,
			"name" : "",
			"origin" : "7.10375 6.71545 23.30295",
			"parallaxDepth" : "1.00000 1.00000",
			"radius" : 70.0,
			"scale" : "-4.48885 1.00000 1.00000",
			"visible" : true
		},
		{
			"alignment" : "center",
			"alpha" : 1.0,
			"angles" : "0.00000 0.00000 0.00000",
			"brightness" : 1.0,
			"color" : "1.00000 1.00000 1.00000",
			"colorBlendMode" : 0,
			"copybackground" : true,
			"id" : 706,
			"image" : "models/util/solidlayer_depthtest.json",
			"ledsource" : false,
			"locktransforms" : false,
			"name" : "parallax",
			"origin" : "0.00000 0.00000 -0.72891",
			"parallaxDepth" : "1.00000 1.00000",
			"perspective" : false,
			"scale" : "0.01000 0.01000 0.01000",
			"size" : "2.00000 2.00000",
			"solid" : true,
			"visible" : 
			{
				"script" : "'use strict';\nimport * as WEMath from 'WEMath';\n\nexport var scriptProperties = createScriptProperties()\n\t.addCheckbox({\n\t\tname: 'parallax',\n\t\tlabel: 'parallax',\n\t\tvalue: true\n\t})\n\t.addCheckbox({\n\t\tname: 'autoMove',\n\t\tlabel: 'autoMove',\n\t\tvalue: false\n\t})\n\t.finish();\n\n/**\n * @param {Vec3} value - for property 'origin'\n * @return {Vec3} - update current property value\n */\nvar driver = 0;\nvar driverY = 0;\nvar initialzoom = 1;\nvar time = 0;\n\nexport function update(value) {\n\n\n\tif (scriptProperties.autoMove) {\n\t\tdriver = Math.sin(time / 3) * 0.2 + 1.85 - 1.2 / ((1 + WEMath.smoothStep(0, engine.screenResolution.x, engine.screenResolution.x / 2)) - 4.1);\n\t\tdriverY = Math.cos(time / 3) * 0.2 + 1.85 - 1.2 / ((1 + WEMath.smoothStep(0, engine.screenResolution.y, engine.screenResolution.y / 2)) - 4.1);\n\t} else if (scriptProperties.parallax && !engine.isScreensaver()) {\n\t\tdriver = 1.85 - 1.2 / ((1 + WEMath.smoothStep(0, engine.screenResolution.x, input.cursorScreenPosition.x)) - 4.1);\n\t\tdriverY = 1.85 - 1.2 / ((1 + WEMath.smoothStep(0, engine.screenResolution.y, input.cursorScreenPosition.y)) - 4.1);\n\n\n\t} else {\n\t\tdriver = 1.85 - 1.2 / ((1 + WEMath.smoothStep(0, engine.screenResolution.x, engine.screenResolution.x / 2)) - 4.1);\n\t\tdriverY = 1.85 - 1.2 / ((1 + WEMath.smoothStep(0, engine.screenResolution.y, engine.screenResolution.y / 2)) - 4.1);\n\t}\n\n\tthisScene.setCameraTransforms({\n\t\tcenter: new Vec3(0, 0, -0.72891),\n\t\teye: new Vec3((-thisLayer.origin.x - (Math.sin(driver) * 10)) * initialzoom, (thisLayer.origin.y - 16 + (Math.sin(driverY) * 10)) * initialzoom, (thisLayer.origin.z - Math.cos(driver) * 10) * initialzoom)\n\t});\n\n\ttime += engine.frametime;\n\t(time > (6 * Math.PI) ? time = 0 : time = time);\n\treturn value;\n}\n\n/**\n * @param {Vec3} value - for property 'origin'\n * @return {Vec3} - update current property value\n */\nexport function init(value) {\n\tdriver = input.cursorScreenPosition.x;\n\tdriverY = input.cursorScreenPosition.y;\n\n\treturn value;\n}\n\n/**\n * @param {Object} changedUserProperties - only includes user properties that were recently changed!\n */\n\n/**\n * @param {Object} changedUserProperties - only includes user properties that were recently changed!\n */\nexport function applyUserProperties(changedUserProperties) {\n\tif (changedUserProperties.initialzooom != undefined) {\n\t\tinitialzoom = changedUserProperties.initialzooom;\n\n\t}\n}\n",
				"scriptproperties" : 
				{
					"autoMove" : 
					{
						"user" : "autoparallax",
						"value" : false
					},
					"parallax" : 
					{
						"user" : "parallax",
						"value" : true
					}
				},
				"value" : true
			}
		},
		{
			"angles" : "0.00000 0.00000 0.00000",
			"id" : 244,
			"locktransforms" : false,
			"model" : "models/blockbg2/blockbg2.mdl",
			"name" : "blockbg2",
			"origin" : "0.00000 0.00000 0.00000",
			"parallaxDepth" : "1.00000 1.00000",
			"perspective" : false,
			"scale" : "0.00000 0.00000 0.00000"
		},
		{
			"alpha" : 1.0,
			"anchor" : "none",
			"angles" : "0.52621 -0.81823 0.02845",
			"backgroundbrightness" : 1.0,
			"backgroundcolor" : "0.00000 0.00000 0.00000",
			"blockalign" : false,
			"brightness" : 1.0,
			"color" : "0.52941 0.52941 0.52941",
			"colorBlendMode" : 0,
			"copybackground" : true,
			"font" : "fonts/futureforcescond.ttf",
			"horizontalalign" : "center",
			"id" : 186,
			"ledsource" : false,
			"limitrows" : false,
			"limituseellipsis" : false,
			"limitwidth" : false,
			"locktransforms" : false,
			"maxrows" : 1,
			"maxwidth" : 500.0,
			"name" : "clock",
			"opaquebackground" : false,
			"origin" : 
			{
				"script" : "'use strict';\n\n\nlet oldvalue;\n/**\n * @param {Vec3} value - for property 'origin'\n * @return {Vec3} - update current property value\n */\nexport function update(value) {\n\n\treturn value;\n}\n\n\n/**\n * @param {Vec3} value - for property 'origin'\n * @return {Vec3} - update current property value\n */\nexport function init(value) {\n\toldvalue = value;\n\treturn value;\n}\n\n/**\n * @param {Object} changedUserProperties - only includes user properties that were recently changed!\n */\nexport function applyUserProperties(changedUserProperties) {\n\tif(changedUserProperties.clockx != undefined){\n\t\tthisLayer.origin = new Vec3(oldvalue.x+changedUserProperties.clockx,thisLayer.origin.y,thisLayer.origin.z);\n\n\t}\n\t\tif(changedUserProperties.clocky != undefined){\n\t\tthisLayer.origin = new Vec3(thisLayer.origin.x,oldvalue.y+changedUserProperties.clocky,thisLayer.origin.z);\n\n\t}\n\tif(changedUserProperties.clockz != undefined){\n\t\tthisLayer.origin = new Vec3(thisLayer.origin.x,thisLayer.origin.y,oldvalue.z+ changedUserProperties.clockz);\n\t}\n}\n",
				"value" : "-1.47809 -1.39556 0.69718"
			},
			"padding" : 25,
			"parallaxDepth" : "1.00000 1.00000",
			"perspective" : false,
			"pointsize" : 
			{
				"user" : "clocksize",
				"value" : 30.0
			},
			"scale" : "0.00406 0.00406 0.00406",
			"size" : "460.00000 125.00000",
			"solid" : true,
			"text" : 
			{
				"script" : "'use strict';\nlet azonix = engine.registerAsset(\"fonts/azonix.otf\");\nlet future = engine.registerAsset(\"fonts/futureforcescond.ttf\");\nlet alc = engine.registerAsset(\"fonts/Alcubierre.otf\");\n\n\n\nexport var scriptProperties = createScriptProperties()\n\t.addCheckbox({\n\t\tname: 'normaltime',\n\t\tlabel: '24H Format',\n\t\tvalue: true\n\t})\n\t.addCheckbox({\n\t\tname: 'seconds',\n\t\tlabel: 'Seconds',\n\t\tvalue: true\n\t})\n\t.addCheckbox({\n\t\tname: 'vertical',\n\t\tlabel: 'Vertical alignment',\n\t\tvalue: false\n\t})\n\t.finish();\n\nlet cel;\nlet override;\n/**\n * @param {String} value - for property 'text'\n * @return {String} - update current property value\n */\nexport function update(value) {\n\n\t\n\tvar date = new Date();\n\t\tlet seconds = (date.getSeconds()<10?0:\"\")+\"\"+date.getSeconds();\n\t\tlet minutes = (date.getMinutes()<10?0:\"\")+\"\"+date.getMinutes();\n\t\tlet hours =((date.getHours()<10?0:\"\")+\"\"+date.getHours());\n\t\tlet is12 = date.getHours()%12? date.getHours()%12:12;\n\t\tlet hours12 =((is12<10?0:\"\")+\"\"+(is12));\n\t\t\n\t\tlet dots = \"\\n\";\n\t\tlet vertical = \"\";\n\t\tscriptProperties.vertical? vertical = \"\\n\":vertical = \"\";  \n\t\tscriptProperties.vertical? dots = \"\\n\":dots = \":\"; \n\t\tif(scriptProperties.normaltime){\n\n\t\t\n\t\tvalue = hours+dots + minutes +(scriptProperties.seconds? dots+seconds :\"\");\n\t}else{\n\t\tvalue = (hours12+dots+minutes+(scriptProperties.seconds? dots+seconds:\"\")+vertical+(hours>11?\"PM\":\"AM\"));\n\t}\n\treturn value;\n}\n\n/**\n * @param {Object} changedUserProperties - only includes user properties that were recently changed!\n */\nexport function applyUserProperties(changedUserProperties) {\n\n\tif(changedUserProperties.txtcoloroverride !=undefined )\n\t\t{\n\t\t\toverride = changedUserProperties.txtcoloroverride;\n\t\t}\n\tif(( cel!= undefined || changedUserProperties.whitecel != undefined) && !override){\n\t\t\tif(changedUserProperties.whitecel != undefined){\n\t\t\t\tcel = changedUserProperties.whitecel;\n\t\t\t}\n\t\t\n\t\t\tif (cel == \"celshading\"){\n\t\t\t\tthisLayer.color = new Vec3(1,1,1);\n\n\t\t\t}else{\n\t\t\t\tthisLayer.color = new Vec3(0,0,0);\n\t\t\t}\n\t\t\n\t}else if( changedUserProperties.txtcolor != undefined){\n\t\tthisLayer.color =changedUserProperties.txtcolor;\n\t\t\n\t}\n\n\tif(changedUserProperties.hasOwnProperty(\"font\")){\n\n\t\tif (changedUserProperties.font == \"futureforcescond\"){\n\t\t\tthisLayer.font = future;\n\t\t\t\n\n\t\t}else if(changedUserProperties.font == \"azonix\"){\n\t\t\tthisLayer.font = azonix;\n\n\n\t\t}else{\n\t\t\tthisLayer.font = alc;\n\t\t}\n\t}\n}\n",
				"scriptproperties" : 
				{
					"normaltime" : 
					{
						"user" : "normaltime",
						"value" : true
					},
					"seconds" : 
					{
						"user" : "seconds",
						"value" : true
					},
					"vertical" : 
					{
						"user" : "vertical",
						"value" : false
					}
				},
				"value" : "clock"
			},
			"verticalalign" : "center",
			"visible" : 
			{
				"user" : "clock",
				"value" : false
			}
		},
		{
			"alignment" : "center",
			"alpha" : 1.0,
			"angles" : "-0.00000 -0.74421 0.00000",
			"brightness" : 1.0,
			"color" : "0.01569 0.01569 0.01569",
			"colorBlendMode" : 0,
			"copybackground" : true,
			"id" : 156,
			"image" : "models/util/solidlayer_depthtest.json",
			"ledsource" : false,
			"locktransforms" : false,
			"name" : "darkmode",
			"origin" : "12.64092 -0.18503 -15.81711",
			"parallaxDepth" : "1.00000 1.00000",
			"perspective" : false,
			"scale" : "1.00000 1.21884 0.01000",
			"size" : "512.00000 512.00000",
			"solid" : true,
			"visible" : 
			{
				"script" : "'use strict';\n\n\n/**\n * @param {Object} changedUserProperties - only includes user properties that were recently changed!\n */\nexport function applyUserProperties(uProps) {\n\tif(uProps.darkmode != undefined){\n\t\tif (uProps.darkmode){\n\t\t\tthisScene.clearcolor = thisLayer.color;\n\t\t}else{\n\t\t\tthisScene.clearcolor = new Vec3(1,1,1);\n\t\t}\n\t}\n\t\n}\n",
				"user" : "darkmode",
				"value" : true
			}
		},
		{
			"alignment" : "center",
			"alpha" : 1.0,
			"angles" : "0.00000 0.00000 0.00000",
			"brightness" : 1.0,
			"color" : "0.16078 0.16078 0.16078",
			"colorBlendMode" : 0,
			"copybackground" : true,
			"id" : 1221,
			"image" : "models/util/solidlayer_depthtest.json",
			"ledsource" : false,
			"locktransforms" : false,
			"name" : "bgsolid",
			"origin" : "-4.98895 0.92117 -1.95107",
			"parallaxDepth" : "1.00000 1.00000",
			"perspective" : false,
			"scale" : "0.30333 0.30333 0.30333",
			"size" : "512.00000 512.00000",
			"solid" : true,
			"visible" : false
		},
		{
			"angles" : "0.00000 0.00000 0.00000",
			"id" : 158,
			"locktransforms" : false,
			"model" : "models/Maskcube/Maskcube.mdl",
			"name" : "Maskcube",
			"origin" : "0.00000 0.00000 0.00000",
			"parallaxDepth" : "1.00000 1.00000",
			"perspective" : false,
			"scale" : "1.00000 1.00000 1.00000"
		},
		{
			"alignment" : "center",
			"alpha" : 1.0,
			"angles" : "0.00000 0.00000 0.00000",
			"brightness" : 1.0,
			"color" : "1.00000 1.00000 1.00000",
			"colorBlendMode" : 0,
			"copybackground" : true,
			"id" : 1235,
			"image" : "models/white.json",
			"ledsource" : false,
			"locktransforms" : false,
			"name" : "white",
			"origin" : "0.00000 0.00000 0.00000",
			"parallaxDepth" : "1.00000 1.00000",
			"perspective" : false,
			"scale" : "0.01000 0.01000 0.01000",
			"size" : "1024.00000 1024.00000",
			"solid" : true,
			"visible" : false
		},
		{
			"alignment" : "center",
			"alpha" : 0.0,
			"angles" : "1.02366 -1.21103 -0.09593",
			"brightness" : 1.0,
			"color" : "1.00000 1.00000 1.00000",
			"colorBlendMode" : 0,
			"copybackground" : true,
			"effects" : 
			[
				{
					"file" : "effects/godrays/effect.json",
					"id" : 274,
					"name" : "",
					"passes" : 
					[
						{
							"constantshadervalues" : 
							{
								"noiseamount" : 0.40000001,
								"noisescale" : 3.0,
								"noisesmoothness" : 0.2,
								"noisespeed" : 0.15000001,
								"raythreshold" : 0.1
							},
							"id" : 275,
							"textures" : [ null, "util/white", null ]
						},
						{
							"constantshadervalues" : 
							{
								"center" : "0.5 0.5",
								"color" : "1 1 1",
								"rayintensity" : 
								{
									"script" : "'use strict';\n\n/**\n * @param {Number} value - for property 'rayintensity'\n * @return {Number} - update current property value\n */\nexport function update(value) {\n\t\n\treturn shared.audiodata;\n}\n",
									"value" : 1.27
								},
								"raylength" : 0.36000001
							},
							"id" : 276
						},
						{
							"combos" : 
							{
								"KERNEL" : 2
							},
							"constantshadervalues" : 
							{
								"blurscale" : "0.27 0.27"
							},
							"id" : 277
						},
						{
							"combos" : 
							{
								"KERNEL" : 2,
								"VERTICAL" : 1
							},
							"constantshadervalues" : 
							{
								"blurscale" : "0.27 0.27"
							},
							"id" : 278
						},
						{
							"combos" : 
							{
								"BLENDMODE" : 28,
								"COPYBG" : 1
							},
							"id" : 279
						}
					],
					"visible" : true
				},
				{
					"file" : "effects/edgedetection/effect.json",
					"id" : 283,
					"name" : "",
					"passes" : 
					[
						{
							"combos" : 
							{
								"BLENDMODE" : 11
							},
							"constantshadervalues" : 
							{
								"alpha" : 1.0,
								"brightness" : 1.0,
								"detectmultiply" : 4.6900001,
								"detectthreshold" : 0.25999999,
								"outlinecolor" : "0 0 0",
								"outlinecolorbg" : "0.4392156862745098 0.4392156862745098 0.4392156862745098",
								"size" : 5
							},
							"id" : 284
						}
					],
					"visible" : true
				}
			],
			"id" : 1765,
			"image" : "models/party-cube-table-decoration_thumb.json",
			"ledsource" : true,
			"locktransforms" : false,
			"name" : "party-cube-table-decoration_thumb",
			"origin" : "-3.61264 -4.31838 2.30428",
			"parallaxDepth" : "1.00000 1.00000",
			"perspective" : false,
			"scale" : "0.01000 0.01000 0.01000",
			"size" : "410.00000 230.00000",
			"solid" : false,
			"visible" : true
		},
		{
			"alignment" : "center",
			"alpha" : 1.0,
			"angles" : "-0.00000 -0.91456 0.00000",
			"brightness" : 1.0,
			"color" : "1.00000 1.00000 1.00000",
			"colorBlendMode" : 0,
			"config" : 
			{
				"passthrough" : true
			},
			"copybackground" : true,
			"effects" : 
			[
				{
					"file" : "effects/shine/effect.json",
					"id" : 509,
					"name" : "",
					"passes" : 
					[
						{
							"constantshadervalues" : 
							{
								"noiseamount" : 0.16,
								"noisescale" : 3.9100001,
								"noisespeed" : 0.15000001,
								"raythreshold" : 0
							},
							"id" : 510,
							"textures" : 
							[
								null,
								"util/white",
								"masks/blend_mask_ee0d9bbc6d0516b8583c8fb3e841485c0b7ec4e8"
							]
						},
						{
							"combos" : 
							{
								"EDGES" : 2,
								"SAMPLES" : 0
							},
							"constantshadervalues" : 
							{
								"color" : "1 1 1",
								"direction" : 0,
								"rayintensity" : 
								{
									"script" : "'use strict';\n\nimport * as WEColor from 'WEColor';\n\n/**\n * @param {Number} value - for property 'rayintensity'\n * @return {Number} - update current property value\n */\nvar max = 1;\nexport function update(value) {\n\n\treturn max;\n}\n\n/**\n * @param {Object} changedUserProperties - only includes user properties that were recently changed!\n */\nexport function applyUserProperties(properties) {\n\n\tif (properties.whitecel !== undefined) {\n\t\tif (properties.whitecel == \"celshading\") {\n\t\t\tmax = 2;\n\t\t} else {\n\t\t\tmax = 0.88;\n\t\t}\n\t} if (properties.walls !== undefined || properties.darkmode != undefined || properties.enablewalls != undefined || properties.cubeshine) {\n\t\tif (engine.userProperties.walls == new Vec3(0,0,0).toString() || (!engine.userProperties.enablewalls && engine.userProperties.cubeshine)) {\n\t\t\tthisLayer.visible = true;\n\t\t} else {\n\n\t\t\tthisLayer.visible = false;\n\t\t}\n\n\t}\n\t\n}\n",
									"value" : 2
								},
								"raylength" : 0.40000001,
								"speed" : 0.0
							},
							"id" : 511
						},
						{
							"combos" : 
							{
								"KERNEL" : 2
							},
							"constantshadervalues" : 
							{
								"scale" : "0.01 6"
							},
							"id" : 512
						},
						{
							"combos" : 
							{
								"KERNEL" : 2,
								"VERTICAL" : 1
							},
							"constantshadervalues" : 
							{
								"scale" : "0.01 6"
							},
							"id" : 513
						},
						{
							"combos" : 
							{
								"BLENDMODE" : 16,
								"COPYBG" : 1
							},
							"id" : 514
						}
					],
					"visible" : 
					{
						"user" : "cubeshine",
						"value" : false
					}
				}
			],
			"id" : 473,
			"image" : "models/util/composelayer_depthtest.json",
			"ledsource" : false,
			"locktransforms" : false,
			"name" : "shining",
			"origin" : "2.04790 1.77146 -2.42652",
			"parallaxDepth" : "1.00000 1.00000",
			"perspective" : false,
			"scale" : "0.01000 0.01000 0.01000",
			"size" : "700.00000 2000.00000",
			"solid" : true,
			"visible" : true
		},
		{
			"angles" : "-0.00000 -0.48114 0.00000",
			"id" : 162,
			"instanceoverride" : 
			{
				"colorn" : 
				{
					"script" : "'use strict';\n\n/**\n * @param {Vec3} value - for property 'colorn'\n * @return {Vec3} - update current property value\n */\n\nexport function update(value) {\n\tif(shared.walls||thisScene.getLayer(\"darkmode\").visible){\n\t\tvalue = new Vec3(255,255,255);\n\t}else{\n\t\tvalue = new Vec3(0,0,0);\n\t}\n\treturn value;\n}\n\n/**\n * @param {Object} changedUserProperties - only includes user properties that were recently changed!\n */\n\n",
					"value" : "0.00000 0.00000 0.00000"
				},
				"count" : 0.23,
				"id" : 164,
				"lifetime" : 2.0,
				"size" : 0.11,
				"speed" : 0.51999998
			},
			"locktransforms" : false,
			"name" : "shimmer",
			"origin" : "0.89035 0.86710 -2.95394",
			"parallaxDepth" : "1.00000 1.00000",
			"particle" : "particles/shimmer.json",
			"scale" : "0.01000 0.01000 0.01000",
			"visible" : 
			{
				"script" : "'use strict';\n\nexport var scriptProperties = createScriptProperties()\n\t.addCheckbox({\n\t\tname: 'particles',\n\t\tlabel: 'Particles',\n\t\tvalue: false\n\t})\n\t.finish();\n\nvar layers =[];\n/**\n * @param {Boolean} value - for property 'visible'\n * @return {Boolean} - update current property value\n */\nexport function update(value) {\n\tif(scriptProperties.particles && !layers[1].isPlaying() ){\n\t\tlayers.forEach(element=>element.play());\n\t}else if(!scriptProperties.particles && layers[1].isPlaying()){\n\t\tlayers.forEach(element=>element.stop());\n\n\t}\n\treturn value;\n}\n\n\n/**\n * @param {Boolean} value - for property 'visible'\n * @return {Boolean} - update current property value\n */\nexport function init(value) {\n\tlayers.push(thisLayer,thisScene.getLayer(\"shimmer2\"));\n\treturn value;\n}\n",
				"scriptproperties" : 
				{
					"particles" : 
					{
						"user" : "particles",
						"value" : false
					}
				},
				"value" : true
			}
		},
		{
			"angles" : "-0.00000 -0.48114 0.00000",
			"id" : 176,
			"instanceoverride" : 
			{
				"colorn" : 
				{
					"script" : "'use strict';\n\n/**\n * @param {Vec3} value - for property 'colorn'\n * @return {Vec3} - update current property value\n */\n\nexport function update(value) {\n\tif(shared.walls||thisScene.getLayer(\"darkmode\").visible){\n\t\tvalue = new Vec3(255,255,255);\n\t}else{\n\t\tvalue = new Vec3(0,0,0);\n\t}\n\treturn value;\n}\n\n/**\n * @param {Object} changedUserProperties - only includes user properties that were recently changed!\n */\n\n",
					"value" : "0.00000 0.00000 0.00000"
				},
				"count" : 0.23999999,
				"id" : 75,
				"lifetime" : 2.0,
				"size" : 0.039999999,
				"speed" : 0.51999998
			},
			"locktransforms" : false,
			"name" : "shimmer2",
			"origin" : "-1.67877 0.86710 1.42690",
			"parallaxDepth" : "1.00000 1.00000",
			"particle" : "particles/shimmer.json",
			"scale" : "0.01000 0.01000 0.01000",
			"visible" : true
		},
		{
			"alignment" : "center",
			"alpha" : 
			{
				"script" : "'use strict';\n\nimport * as WEMath from 'WEMath';\n\n/**\n * @param {Number} value - for property 'alpha'\n * @return {Number} - update current property value\n */\n/*\nlet funct;\nlet time = Date.now();\nlet interval =Math.random()*500 ;\nlet rand = Math.random()*0.5;\nexport function update(value) {\n\t\n\tif(Date.now()-time>interval){\n\t\ttime = Date.now();\n\t\tinterval = Math.random()*150;\n\t\trand = Math.sin(Math.random())*0.3+0.2;\n\n\treturn rand;\n\t}\n\treturn rand;\n}\n*/\nlet smooth = true;\nexport function update(value) {\n\t\nreturn WEMath.smoothStep(0.1,1,shared.smoothbass)*0.25;\n\n}\n\n\n/**\n * @param {Number} value - for property 'alpha'\n * @return {Number} - update current property value\n */\nexport function init(value) {\n\n\n\treturn value;\n}\n\n/**\n * @param {Object} changedUserProperties - only includes user properties that were recently changed!\n */\nexport function applyUserProperties(properties) {\n\tif(properties.smoothaudio != undefined){\n\t\tsmooth=properties.smoothaudio;\n\t}\n}\n",
				"value" : 0.47
			},
			"angles" : 
			{
				"script" : "'use strict';\n\n/**\n * @param {Vec3} value - for property 'origin'\n * @param {AnimationEvent} event - info about the event\n * @return {Vec3} - update current property value\n */\nexport function animationEvent(event, value) {\n\tconsole.log(event.name);\n}\n",
				"value" : "2.67322 0.84020 3.14015"
			},
			"brightness" : 1.0,
			"color" : "0.49020 0.50588 1.00000",
			"colorBlendMode" : 31,
			"copybackground" : true,
			"effects" : 
			[
				{
					"file" : "effects/pulse/effect.json",
					"id" : 269,
					"name" : "",
					"passes" : 
					[
						{
							"combos" : 
							{
								"BLENDMODE" : 11,
								"PULSEALPHA" : 1
							},
							"constantshadervalues" : 
							{
								"amount" : 1.02,
								"audioamount" : 0.97000003,
								"audiobounds" : "0.5 1",
								"audioexponent" : 0.79000002,
								"bounds" : "0 1",
								"frequencymax" : 0,
								"frequencymin" : 0,
								"noiseamount" : 0.91000003,
								"noisespeed" : 0.73000002,
								"phase" : 0.0,
								"power" : 0.47999999,
								"speed" : 0.36000001,
								"tinthigh" : "1 1 1",
								"tintlow" : "1 1 1"
							},
							"id" : 270
						}
					],
					"visible" : true
				}
			],
			"id" : 254,
			"image" : "models/GargantuanShowyKiskadee-mobile.json",
			"ledsource" : false,
			"locktransforms" : false,
			"name" : "lensflare",
			"origin" : "-2.26562 -2.49904 -4.48835",
			"parallaxDepth" : "1.00000 1.00000",
			"perspective" : false,
			"scale" : "0.01814 0.01814 0.01814",
			"size" : "2560.00000 720.00000",
			"solid" : true,
			"visible" : 
			{
				"user" : "lensflare",
				"value" : true
			}
		},
		{
			"alignment" : "center",
			"alpha" : 1.0,
			"brightness" : 1.0,
			"color" : "1.00000 1.00000 1.00000",
			"colorBlendMode" : 0,
			"copybackground" : true,
			"effects" : 
			[
				{
					"file" : "effects/motionblur/effect.json",
					"id" : 422,
					"name" : "mb",
					"passes" : 
					[
						{
							"constantshadervalues" : 
							{
								"rate" : 
								{
									"script" : "'use strict';\n\nimport * as WEMath from 'WEMath';\n\n/**\n * @param {Number} value - for property 'rate'\n * @return {Number} - update current property value\n */\nvar parallaxspeed;\nvar parallamp;\nvar size = 0;\nexport function update(value) {\n\tif(thisLayer.visible && !shared.glitchenabled){\n\tshared.smoothbass>0.8?value= 0.4:value = 1;\n\tshared.smoothbass>0.8? thisScene.camerashakeamplitude= WEMath.smoothStep(0.8,1,shared.smoothbass)*0.1+parallamp*0.9:thisScene.camerashakeamplitude = parallamp;\n\tthisScene.camerashakespeed =WEMath.smoothStep(0.8,1,shared.smoothbass)*8+ parallaxspeed;\n\tthisScene.camerashakeroughness = 0;\n\t}else{\n\t\tthisScene.camerashakeamplitude = parallamp;\n\t}\n\t\t\n\t\n\treturn value;\n}\n\n/**\n * @param {Number} value - for property 'rate'\n * @return {Number} - update current property value\n */\nexport function init(value) {\n\t\t\tthisScene.camerashakespeed = 0.4;\n\tparallamp= thisScene.camerashakeamplitude;\n\tparallaxspeed = thisScene.camerashakespeed;\n\treturn value;\n}\n\n/**\n * @param {Object} changedUserProperties - only includes user properties that were recently changed!\n */\nexport function applyUserProperties(prprties) {\n\tif(prprties.bassshake != undefined){\n\t\tthisLayer.visible = prprties.bassshake;\n\t\tif(!prprties.bassshake){\n\t\t\tthisScene.camerashakeamplitude = parallamp;\n\t\t\tthisScene.camerashakespeed = parallaxspeed;\n\t\t}\n\t}\n}\n",
									"value" : 0.18000001
								}
							},
							"id" : 423
						},
						{
							"id" : 266
						}
					],
					"visible" : true
				},
				{
					"file" : "effects/vhs/effect.json",
					"id" : 416,
					"name" : "",
					"passes" : 
					[
						{
							"combos" : 
							{
								"GREYSCALE" : 1,
								"INVERTARTIFACTS" : 0
							},
							"constantshadervalues" : 
							{
								"artifacts" : 0,
								"chromatic" : 0.94,
								"distortionspeed" : 0.34,
								"distortionstrength" : 0,
								"distortionwidth" : 0,
								"scale" : 0.0099999998,
								"strength" : 2
							},
							"id" : 417
						}
					],
					"visible" : false
				}
			],
			"id" : 409,
			"image" : "models/util/fullscreenlayer.json",
			"ledsource" : false,
			"locktransforms" : false,
			"name" : "Shake and parallax",
			"parallaxDepth" : "1.00000 1.00000",
			"perspective" : false,
			"solid" : true,
			"visible" : true
		},
		{
			"alignment" : "center",
			"alpha" : 1.0,
			"angles" : "0.00000 0.00000 0.00000",
			"brightness" : 1.0,
			"color" : "1.00000 1.00000 1.00000",
			"colorBlendMode" : 0,
			"copybackground" : true,
			"id" : 830,
			"image" : "models/util/solidlayer_depthtest.json",
			"ledsource" : false,
			"locktransforms" : false,
			"name" : "cubeparticles",
			"origin" : 
			{
				"script" : "'use strict';\n\nimport * as WEMath from 'WEMath';\n\n/**\n * @param {Vec3} value - for property 'angles'\n * @return {Vec3} - update current property value\n */\nlet anim;\nlet blocks=[];\nlet blocksize=[];\nlet maxCubes = 200;\nvar pattern;\nvar enabled;\nexport function update(value) {\n\tif(blocks.length>0){\n\t\tblocks.forEach((block,index)=>{\n\t\t\t\n\t\t\tblock.origin= new Vec3(block.origin.x,block.origin.y+engine.frametime+(shared.smoothbass>=0?shared.smoothbass/15:shared.audiodata),block.origin.z);\n\t\t\t\n\t\t\tblock.rotateObjectSpace(new Vec2(0.0001+  ( (shared.smoothbass >= 0? shared.smoothbass*20: shared.audiodata)+block.scale.x*8)/500));\n\t\t\tif(block.origin.y>15){\n\t\t\t\tlet scaling =block.scale.x-0.001;\n\t\t\t\tblock.scale = new Vec3( scaling,scaling,scaling);\n\t\t\t\tif(block.scale.x<=0){\n\t\t\t\t\tblock.origin = new Vec3(block.origin.x,block.origin.y-60.1,block.origin.z);\n\t\t\t\t}\n\t\t\t}else{\n\t\t\t\tblock.scale = new Vec3(Math.min(block.scale.x+0.01,blocksize[index].x),Math.min(block.scale.y+0.01,blocksize[index].y),Math.min(block.scale.z+0.01,blocksize[index].z));\n\t\t\t}\n\t\t});\n\t}\n\t\n\t\n\treturn value;\n}\n\n/**\n * @param {Vec3} value - for property 'angles'\n * @return {Vec3} - update current property value\n */\nlet ind = 0;\nlet ind2 = 0;\nexport function ranpos(range, pattern){\n\t\n\tlet pos;\n\tif(range!= undefined){\n\t\tind+=1;\n\t\tif(pattern == \"twirl\"){\n\t\t\tpos = new Vec3((Math.sin(ind)*5)-0.5,(range.y-ind/15)*7-0.5,((Math.cos(ind)*5)-0.5));\n\t\t}\n\t\telse if(pattern == \"rings\"){\n\t\t\t\n\t\t\tind%(maxCubes/5) == 0? ind2+=50:0;\n\t\t\tpos = new Vec3(Math.sin(ind)*5-0.5,range.y-(ind2)/5,Math.cos(ind)*5-0.5);\n\t\t}\n\t\telse{\n\t\tpos = new Vec3((Math.random()-0.5)*range.x,(Math.random()-0.5)*range.y,(Math.random()-0.5)*range.z);\n\t\t}\n\t\t\n\t}\n\t\n\treturn (pos !== undefined? pos:new Vec3((Math.random()*5-0.5)*20,(Math.random()-0.5)*70,-(20*(Math.random()-0.5))));\n\t\n}\n\nexport function createCubes(pos,pattern){\n\tlet layer = thisScene.getLayerIndex(\"shining\")+1;\n\n\tfor(let i = 0;i<maxCubes ;i++){\n\t\tlet block = thisScene.createLayer(\"models/particleblock/particleblock.mdl\");\n\t\tblock.name = \"pCube\"+i;\n\t\tblocks.unshift(block);\n\t\tthisScene.sortLayer(block,layer+i);\n\t\tblock.scale= new Vec3(1,1,1);\n\t\tlet ransize = Math.random()*0.2;\n\t\tblock.scale = new Vec3(ransize,ransize,ransize);\n\t\tblocksize.unshift(block.scale);\n\t\t\n\t\tblock.origin = ranpos(pos,pattern);\n\t\tlet center  = thisScene.getLayer(\"block\").origin;\n\t\tlet blockcenter= block.origin\n\n\t\twhile(((center.x<3 && center.x >-3) && (center.z<3 && center.z>-3))   ){\n\t\t\t\t\tblock.origin = ranpos(pos,pattern);\n\t\t\t\t\tcenter  = block.origin;\n\t\t}\n\t\tblock.angles = new Vec3(ransize*53,ransize*325,ransize*25);\n\n\t\t\n\t\t\n\t}\n\tind = 1;\n\tind2 = 0;\n}\nexport function destroyCubes(){\n\tlet layers = thisScene.enumerateLayers();\n\tlet state;\n\tblocks.forEach((layer)=>{\n\t\t thisScene.destroyLayer(layer);\n\t\t});\n\t\tblocks = [];\n\t\tblocksize = [];\n\t\n}\n\nexport function init(value) {\n\tanim = thisLayer.getAnimation();\n\t\n\t\n\n\treturn value;\n}\n\n\n\n/**\n * @param {Object} changedUserProperties - only includes user properties that were recently changed!\n */\nexport function applyUserProperties(properties) {\n\t\n\tif(properties.enablecubes !== undefined ){\n\t\tenabled = properties.enablecubes;\n\t\tdestroyCubes();\n\t\tif((properties.enablecubes && blocks.length<maxCubes)){\n\n\n\t\t}else if(!properties.enablecubes){\n\t\t\tdestroyCubes();\n\t\t}\n\t}\n\t\nif((properties.particlepattern != undefined || properties.enablecubes != undefined)&& enabled){\n\tdestroyCubes();\n\tif(properties.particlepattern != undefined){\n\t\tpattern = properties.particlepattern;\t\n\t}\n\t\t\tlet pos = new Vec3(20,70,20);\n\t\t\tmaxCubes = 50;\n\t\t\tif(pattern != undefined){\n\t\t\t\tif(pattern != \"distributed\"){\n\t\t\t\t\t pos = new Vec3(300,20,300);\n\t\t\t\t\t maxCubes = 200;\n\t\t\t}\n\t\t\t\t\n\t\t\t}\n\t\t\tcreateCubes(pos,pattern);\n\t\t\tconsole.log(blocks.length);\n}\n\n\n\t\n}\n",
				"value" : "-16.68651 1.70493 0.00000"
			},
			"parallaxDepth" : "1.00000 1.00000",
			"perspective" : false,
			"scale" : "0.01000 0.01000 0.01000",
			"size" : "1.00000 1.00000",
			"solid" : true,
			"visible" : true
		},
		{
			"angles" : "0.00000 0.00000 0.00000",
			"id" : 709,
			"locktransforms" : false,
			"model" : "models/particleblock/particleblock.mdl",
			"name" : "particleblock",
			"origin" : "0.00000 0.00000 0.00000",
			"parallaxDepth" : "1.00000 1.00000",
			"perspective" : false,
			"scale" : "0.00000 0.00000 0.00000"
		},
		{
			"alignment" : "center",
			"alpha" : 1.0,
			"brightness" : 1.0,
			"color" : "1.00000 1.00000 1.00000",
			"colorBlendMode" : 0,
			"copybackground" : true,
			"effects" : 
			[
				{
					"file" : "effects/refraction/effect.json",
					"id" : 717,
					"name" : "",
					"passes" : 
					[
						{
							"id" : 723
						},
						{
							"constantshadervalues" : 
							{
								"scale" : 
								{
									"script" : "'use strict';\n\n/**\n * @param {Vec2} value - for property 'scale'\n * @return {Vec2} - update current property value\n */\nexport function update(value) {\n\tif(shared.glitchenabled){\n\t\tvalue.x = shared.smoothbass;\n\t\tvalue.y = shared.smoothbass;\n\t}\n\treturn value;\n}\n",
									"value" : "0.00000 0.00000"
								},
								"strength" : 
								{
									"script" : "'use strict';\n\n/**\n * @param {Number} value - for property 'strength'\n * @return {Number} - update current property value\n */\nexport function update(value) {\n\tif(shared.glitchenabled){\n\t\treturn ((Math.random()*2)-1)*shared.smoothbass/8;\n\t}else{\n\t\treturn 0;\n\t}\n}\n",
									"value" : 0
								}
							},
							"id" : 724,
							"textures" : 
							[
								null,
								null,
								"2800x2100_glitch-distortion-lines-interference-abstraction"
							]
						}
					],
					"visible" : true
				},
				{
					"file" : "effects/audio_abb/effect.json",
					"id" : 1324,
					"name" : "audio abb",
					"passes" : 
					[
						{
							"combos" : 
							{
								"BLENDMODE" : 0,
								"GREYSCALE" : 1
							},
							"constantshadervalues" : 
							{
								"artifacts" : 1.38,
								"chromatic" : 3.72,
								"distortionspeed" : 0.69,
								"distortionstrength" : 1,
								"distortionwidth" : 1.0,
								"scale" : 0.0099999998,
								"strength" : 
								{
									"script" : "'use strict';\n\nimport * as WEMath from 'WEMath';\n\nexport var scriptProperties = createScriptProperties()\n\t.addCheckbox({\n\t\tname: 'bassGlitch',\n\t\tlabel: 'Bass Glitch',\n\t\tvalue: false\n\t})\n\t.finish();\n\n/**\n * @param {Number} value - for property 'strength'\n * @return {Number} - update current property value\n */\nexport function update(value) {\n\t\tlet bass = WEMath.smoothStep(0.6,1,shared.smoothbass);\n\tif(scriptProperties.bassGlitch&&bass>0.2){\n\t\tthisLayer.getEffect(\"audio abb\").visible = true;\n\t\t\n\t\tshared.glitchenabled = true;\n\t}else{\n\t\tthisLayer.getEffect(\"audio abb\").visible = false;\n\t\tshared.glitchenabled = false;\n\t}\n\treturn bass/2;\n}\n",
									"scriptproperties" : 
									{
										"bassGlitch" : 
										{
											"user" : "bassglitching",
											"value" : false
										}
									},
									"value" : 0.61000001
								}
							},
							"id" : 1325
						}
					],
					"visible" : true
				}
			],
			"id" : 558,
			"image" : "models/util/fullscreenlayer.json",
			"ledsource" : false,
			"locktransforms" : false,
			"name" : "Fullscreen",
			"parallaxDepth" : "1.00000 1.00000",
			"perspective" : false,
			"solid" : true,
			"visible" : true
		},
		{
			"alignment" : "center",
			"alpha" : 
			{
				"script" : "'use strict';\n\n/**\n * @param {Number} value - for property 'alpha'\n * @return {Number} - update current property value\n */\nlet flare;\nexport function update(value) {\n\t\n\treturn flare.alpha*2;\n}\n\n/**\n * @param {Number} value - for property 'alpha'\n * @return {Number} - update current property value\n */\nexport function init(value) {\n\tflare = thisScene.getLayer(\"lensflare\");\n\treturn value;\n}\n",
				"value" : 1.0
			},
			"angles" : "0.48181 -0.65836 0.00000",
			"brightness" : 1.0,
			"color" : "0.14118 0.39216 1.00000",
			"colorBlendMode" : 31,
			"copybackground" : true,
			"effects" : 
			[
				{
					"file" : "effects/workshop/2487531853/lens_flare_sun/effect.json",
					"id" : 377,
					"name" : "",
					"passes" : 
					[
						{
							"combos" : 
							{
								"BLENDMODE" : 0,
								"SUN" : 1
							},
							"constantshadervalues" : 
							{
								"Color" : "0.3254901960784314 0.5764705882352941 0.984313725490196",
								"Opacity" : 1,
								"Position offset" : "-4 -4",
								"Scale" : 0.0049999999,
								"Sun Scale" : 5.3299999,
								"angle" : -0.24497867,
								"pointerspeed" : -0.66000003,
								"rotationspeed" : 0,
								"speed" : 0,
								"speed secondary" : 0
							},
							"id" : 378
						}
					],
					"visible" : true
				},
				{
					"file" : "effects/shine/effect.json",
					"id" : 411,
					"name" : "",
					"passes" : 
					[
						{
							"constantshadervalues" : 
							{
								"noiseamount" : 0.40000001,
								"noisescale" : 3.0,
								"noisespeed" : 0.15000001,
								"raythreshold" : 0
							},
							"id" : 412,
							"textures" : [ null, "util/white", null ]
						},
						{
							"constantshadervalues" : 
							{
								"color" : "1 1 1",
								"direction" : 0.0,
								"rayintensity" : 1.0700001,
								"raylength" : 0.1,
								"speed" : 0.0
							},
							"id" : 413
						},
						{
							"constantshadervalues" : 
							{
								"scale" : "1 1"
							},
							"id" : 414
						},
						{
							"combos" : 
							{
								"VERTICAL" : 1
							},
							"constantshadervalues" : 
							{
								"scale" : "1 1"
							},
							"id" : 415
						},
						{
							"id" : 418
						}
					],
					"visible" : true
				},
				{
					"file" : "effects/edgedetection/effect.json",
					"id" : 394,
					"name" : "",
					"passes" : 
					[
						{
							"combos" : 
							{
								"BLENDMODE" : 4
							},
							"constantshadervalues" : 
							{
								"alpha" : 1.0,
								"brightness" : 1,
								"detectmultiply" : 2.5799999,
								"detectthreshold" : 0,
								"outlinecolor" : "0 0 0",
								"outlinecolorbg" : "1 1 1",
								"size" : 4.6900001
							},
							"id" : 395
						}
					],
					"visible" : true
				}
			],
			"id" : 375,
			"image" : "models/util/solidlayer_depthtest.json",
			"ledsource" : false,
			"locktransforms" : false,
			"name" : "Solid",
			"origin" : "-1.25966 -1.48594 0.92606",
			"parallaxDepth" : "1.00000 1.00000",
			"perspective" : false,
			"scale" : "0.01000 0.01000 0.01000",
			"size" : "2000.00000 2000.00000",
			"solid" : true,
			"visible" : 
			{
				"script" : "'use strict';\nvar isToggled;\n\n\n/**\n * @param {Object} changedUserProperties - only includes user properties that were recently changed!\n */\nexport function applyUserProperties(properties) {\n\t\n\tif(properties.dynamiclensflare != undefined){\n\t\t\n\t\tthisLayer.visible = properties.dynamiclensflare;\n\t\tisToggled = properties.dynamiclensflare;\n\t}\n\tif(isToggled){\n\t\tthisLayer.visible = true;\n\t\tisToggled = true;\n\t}\n\tif(properties.lensflare !=undefined ){\n\t\tif(!properties.lensflare ){\n\t\t\tthisLayer.visible = false;\n\t\t}\n\t}\n\tif(engine.isMobileDevice()){\n\t\tthisLayer.visible = false;\n\t}\n}\n",
				"value" : true
			}
		},
		{
			"angles" : "0.00000 0.00000 0.00000",
			"id" : 735,
			"locktransforms" : false,
			"maxtime" : 5.0,
			"mintime" : 1.0,
			"muteineditor" : true,
			"name" : "Rob Gasser - Happy.mp3 t:166",
			"origin" : "0.00000 0.00000 0.00000",
			"parallaxDepth" : "1.00000 1.00000",
			"playbackmode" : "single",
			"scale" : "1.00000 1.00000 1.00000",
			"sound" : [ "sounds/Rob Gasser - Happy [NCS Release].mp3" ],
			"startsilent" : true,
			"volume" : 0.5
		},
		{
			"angles" : "-1.58380 1.03808 -3.13112",
			"id" : 543,
			"instanceoverride" : 
			{
				"alpha" : 0.49000001,
				"colorn" : "0.50196 0.00000 1.00000",
				"id" : 550,
				"lifetime" : 2.0,
				"rate" : 5.0,
				"size" : 0.23999999,
				"speed" : 1.47
			},
			"locktransforms" : false,
			"name" : "Laserlight",
			"origin" : "1.87440 1.37535 -1.81299",
			"parallaxDepth" : "1.00000 1.00000",
			"particle" : "particles/workshop/2268828268/presets/ember.json",
			"scale" : "0.01000 0.01000 1.00000",
			"visible" : 
			{
				"user" : "ghostlights",
				"value" : false
			}
		},
		{
			"alignment" : "center",
			"alpha" : 1.0,
			"brightness" : 1.0,
			"color" : "1.00000 1.00000 1.00000",
			"colorBlendMode" : 0,
			"copybackground" : true,
			"effects" : 
			[
				{
					"file" : "effects/tint/effect.json",
					"id" : 721,
					"name" : "",
					"passes" : 
					[
						{
							"combos" : 
							{
								"BLENDMODE" : 26
							},
							"constantshadervalues" : 
							{
								"alpha" : 0.76999998,
								"color" : 
								{
									"script" : "'use strict';\n\n/**\n * @param {Vec3} value - for property 'color'\n * @return {Vec3} - update current property value\n */\nexport function update(value) {\n\t\n\treturn shared.accentColor;\n}\n",
									"value" : "1.00000 0.00000 0.00000"
								}
							},
							"id" : 722
						}
					],
					"visible" : true
				},
				{
					"file" : "effects/edgedetection/effect.json",
					"id" : 737,
					"name" : "",
					"passes" : 
					[
						{
							"combos" : 
							{
								"BLENDMODE" : 28
							},
							"constantshadervalues" : 
							{
								"alpha" : 0.69999999,
								"brightness" : 1,
								"detectmultiply" : 0.31,
								"detectthreshold" : 0.07,
								"outlinecolor" : 
								{
									"script" : "'use strict';\n\n/**\n * @param {Vec3} value - for property 'outlinecolor'\n * @return {Vec3} - update current property value\n */\nexport function update(value) {\n\t\n\treturn shared.accentColor;\n}\n",
									"value" : "0.85098 0.07059 0.07059"
								},
								"outlinecolorbg" : 
								{
									"script" : "'use strict';\nlet color;\n/**\n * @param {Vec3} value - for property 'outlinecolorbg'\n * @return {Vec3} - update current property value\n */\nexport function update(value) {\n\t\n\treturn shared.secondaryColor;\n}\n\n/**\n * @param {MediaThumbnailEvent} event\n */\nexport function mediaThumbnailChanged(event) {\n\tcolor = event.secondaryColor;\n}\n",
									"value" : "1.00000 1.00000 1.00000"
								},
								"size" : 1.4
							},
							"id" : 738
						}
					],
					"visible" : true
				},
				{
					"file" : "effects/chromaticaberration/effect.json",
					"id" : 1357,
					"name" : "",
					"passes" : 
					[
						{
							"combos" : 
							{
								"MODE" : 2
							},
							"constantshadervalues" : 
							{
								"ui_editor_properties_center" : "0.5 0.5",
								"ui_editor_properties_center_falloff" : 0.94999999,
								"ui_editor_properties_direction" : 1.570796,
								"ui_editor_properties_strength" : 
								{
									"script" : "'use strict';\n\n/**\n * @param {Number} value - for property 'ui_editor_properties_strength'\n * @return {Number} - update current property value\n */\nexport function update(value) {\n\t\n\treturn shared.smoothbass;\n}\n",
									"value" : 1.0599999
								}
							},
							"id" : 1358
						}
					],
					"visible" : 
					{
						"user" : "chromaticabberration",
						"value" : true
					}
				}
			],
			"id" : 719,
			"image" : "models/util/fullscreenlayer.json",
			"ledsource" : false,
			"locktransforms" : false,
			"name" : "Media integr Colors",
			"parallaxDepth" : "0.00000 0.00000",
			"perspective" : false,
			"solid" : true,
			"visible" : 
			{
				"script" : "'use strict';\n\n/**\n * @param {Boolean} value - for property 'visible'\n * @return {Boolean} - update current property value\n */\nexport function update(value) {\n\t\n\treturn shared.isMediaIntegrationActive;\n}\n",
				"value" : true
			}
		},
		{
			"alignment" : "center",
			"alpha" : 1.0,
			"angles" : "0.00000 0.00000 0.00000",
			"brightness" : 1.0,
			"color" : "1.00000 1.00000 1.00000",
			"colorBlendMode" : 0,
			"config" : 
			{
				"passthrough" : true
			},
			"copybackground" : true,
			"id" : 570,
			"image" : "models/util/composelayer.json",
			"ledsource" : false,
			"locktransforms" : false,
			"name" : "----MUSIC PLAYER ----",
			"origin" : "933.48517 308.18982 0.00000",
			"parallaxDepth" : "1.00000 1.00000",
			"perspective" : false,
			"scale" : "0.88642 0.88642 0.88642",
			"size" : "1.00000 1.00000",
			"solid" : true,
			"visible" : true
		},
		{
			"alignment" : "center",
			"alpha" : 1.0,
			"angles" : "0.00000 0.00000 0.00000",
			"brightness" : 1.0,
			"color" : "1.00000 1.00000 1.00000",
			"colorBlendMode" : 0,
			"copybackground" : true,
			"id" : 571,
			"image" : "models/util/solidlayer.json",
			"ledsource" : false,
			"locktransforms" : false,
			"name" : "Player Options",
			"origin" : "-568.48303 -373.70285 0.00000",
			"parallaxDepth" : "1.00000 1.00000",
			"perspective" : false,
			"scale" : "1.00000 1.00000 1.00000",
			"size" : "0.00000 0.00000",
			"solid" : false,
			"visible" : 
			{
				"script" : "'use strict';\n\nimport * as WEColor from 'WEColor';\nimport * as WEMath from 'WEMath';\nimport * as WEVector from 'WEVector';\n// Please note: Do not remove this line or asset references may break.\nexport let __workshopId = '2499516781';\nexport var scriptProperties = createScriptProperties()\n\t.addCheckbox({\n\t\tname: 'playstatus',\n\t\tlabel: 'Play on startup',\n\t\tvalue: false\n\t})\n\n\t.addCheckbox({\n\t\tname: 'enableplayer',\n\t\tlabel: 'Enable music player',\n\t\tvalue: true\n\t})\n\n\t.addSlider({\n\t\tname: 'maxTitleLineTxt',\n\t\tlabel: 'Threshold for line breaking title name',\n\t\tvalue: 15,\n\t\tmin: 5,\n\t\tmax: 100,\n\t\tinteger: true\n\t})\n\t.addColor({\n\t\tname: 'accentColor',\n\t\tlabel: 'Accent Color',\n\t\tvalue: new Vec3(0.2, 0.976, 0.396)\n\t})\n\t.addCheckbox({\n\t\tname: 'autoAccent',\n\t\tlabel: 'Accent Color Automatic to song album',\n\t\tvalue: false\n\t})\n\t.finish();\nlet startSecondary = new Vec3();\nlet targetSecondary;\nlet currentSecondary;\nlet currentColor;\nlet start;\nlet targetColor;\nlet time = 0;\n/**\n * @param {Object} changedUserProperties - only includes user properties that were recently changed!\n */\nexport function applyUserProperties(changedUserProperties) {\n\tshared.playOnStart = scriptProperties.playstatus;\n\tshared.enablePlayer = scriptProperties.enableplayer;\n\tshared.maxTitleLineTxt = scriptProperties.maxTitleLineTxt;\n\tif (!scriptProperties.autoAccent) {\n\t\tshared.accentColor = scriptProperties.accentColor;\n\t\tshared.isMediaIntegrationActive = false;\n\t} else {\n\t\tshared.isMediaIntegrationActive = true;\n\t}\n}\n\n/**\n * @param {Boolean} value - for property 'visible'\n * @return {Boolean} - update current property value\n */\nexport function init() {\n\n\tshared.playOnStart = scriptProperties.playstatus;\n\tshared.maxTitleLineTxt = scriptProperties.maxTitleLineTxt;\n}\n\n/**\n * @param {MediaThumbnailEvent} event\n */\nexport function mediaThumbnailChanged(event) {\n\n\tif (shared.accentColor == undefined) {\n\t\tcurrentColor = event.primaryColor;\n\t\tcurrentSecondary = event.secondaryColor;\n\t\tshared.accentColor = event.primaryColor;\n\t\tshared.secondaryColor = event.secondaryColor;\n\t}\n\ttargetColor = event.primaryColor;\n\tstart = currentColor;\n\ttime = 0;\n\ttargetSecondary = event.secondaryColor;\n\tstartSecondary = currentSecondary;\n\n\n}\n\n/**\n * This update interpolates from primary/secondary color A to color B over time and stores \n * it inside shared.accentColor and shared.secondaryColor\n */\nexport function update() {\n\tif (!scriptProperties.autoAccent) {\n\t\treturn;\n\t}\n\tcurrentColor = shared.accentColor;\n\tcurrentSecondary = shared.secondaryColor;\n\tif (start == undefined) {\n\t\tstart = targetColor;\n\t\tstartSecondary = currentSecondary;\n\t}\n\tif (targetColor == shared.accentColor) {\n\t\treturn;\n\t}\n\tlet accent = currentColor;\n\tlet target = targetColor;\n\taccent = linear(start, target, time);\n\tshared.accentColor = accent;\n\n\taccent = linear(startSecondary, targetSecondary, time);\n\tshared.secondaryColor = accent;\n\n\ttime = Math.min(time + engine.frametime / 3, 1);\n}\n\n//linear Vec 3 interpolation \n\nfunction linear(a, b, t) {\n\treturn a.multiply((1 - t)).add(b.multiply(t));\n}\n",
				"scriptproperties" : 
				{
					"accentColor" : "0.20000 0.97255 0.39216",
					"autoAccent" : 
					{
						"user" : "mediaintegrationeffects",
						"value" : true
					},
					"enableplayer" : 
					{
						"user" : "musicplayer",
						"value" : true
					},
					"maxTitleLineTxt" : 15,
					"playstatus" : false
				},
				"value" : true
			}
		},
		{
			"alignment" : "center",
			"alpha" : 1.0,
			"angles" : "0.00000 0.00000 0.00000",
			"brightness" : 1.0,
			"color" : "1.00000 1.00000 1.00000",
			"colorBlendMode" : 0,
			"copybackground" : true,
			"id" : 572,
			"image" : "models/workshop/2499516781/Comp 1_00000.json",
			"ledsource" : false,
			"locktransforms" : false,
			"name" : "playeroutlineanim",
			"origin" : "-5.79835 -2.80935 -0.03207",
			"parallaxDepth" : "1.00000 1.00000",
			"perspective" : false,
			"scale" : "0.00737 0.00582 0.43571",
			"size" : "500.00000 400.00000",
			"solid" : true,
			"visible" : true
		},
		{
			"alignment" : "center",
			"alpha" : 1.0,
			"angles" : "0.00000 0.00000 0.00000",
			"brightness" : 1.0,
			"color" : "1.00000 1.00000 1.00000",
			"colorBlendMode" : 0,
			"copybackground" : true,
			"effects" : 
			[
				{
					"file" : "effects/blendgradient/effect.json",
					"id" : 555,
					"name" : "",
					"passes" : 
					[
						{
							"combos" : 
							{
								"WRITEALPHA" : 1
							},
							"constantshadervalues" : 
							{
								"alpha" : 1,
								"gradientscale" : 0.152,
								"multiply" : 
								{
									"script" : "'use strict';\n\nimport * as WEMath from 'WEMath';\n\nlet changed=false;\n\nlet time=0;\n/**\n * @param {Number} value - for property 'multiply'\n * @return {Number} - update current property value\n */\nexport function update(value) {\n\t\n\tif(!changed){\n\t\treturn value;\n\t}\n\ttime+=engine.frametime/2;\n\tvalue = 1-WEMath.smoothStep(0,1,time);\n\tif(value ==0){\n\t\tchanged=false;\n\t\ttime = 0;\n\t}\n\treturn value;\n}\n\n/**\n * @param {MediaThumbnailEvent} event\n */\nexport function mediaThumbnailChanged(event) {\n\tchanged = true;\n}\n",
									"value" : 0
								}
							},
							"id" : 556,
							"textures" : [ null, "workshop/2492047799/index", "effects/waterflowphase" ],
							"usertextures" : 
							[
								null,
								{
									"name" : "$mediaPreviousThumbnail",
									"type" : "system"
								},
								{
									"name" : "$mediaThumbnail",
									"type" : "system"
								}
							]
						}
					],
					"visible" : true
				},
				{
					"file" : "effects/opacity/effect.json",
					"id" : 728,
					"name" : "",
					"passes" : 
					[
						{
							"constantshadervalues" : 
							{
								"alpha" : 0.41
							},
							"id" : 729
						}
					],
					"visible" : true
				}
			],
			"id" : 573,
			"image" : "models/workshop/2499516781/placeholder.json",
			"ledsource" : false,
			"locktransforms" : false,
			"name" : "playerthumbnailexception",
			"origin" : "-4.85265 -3.22169 0.00000",
			"parallaxDepth" : "1.00000 1.00000",
			"perspective" : false,
			"scale" : "0.00132 0.00132 0.49622",
			"size" : "512.00000 512.00000",
			"solid" : true,
			"visible" : true
		},
		{
			"alignment" : "center",
			"alpha" : 0.76999998,
			"angles" : "0.00000 0.00000 0.00000",
			"brightness" : 1.0,
			"color" : "1.00000 1.00000 1.00000",
			"colorBlendMode" : 0,
			"copybackground" : true,
			"effects" : 
			[
				{
					"file" : "effects/blendgradient/effect.json",
					"id" : 563,
					"name" : "",
					"passes" : 
					[
						{
							"combos" : 
							{
								"WRITEALPHA" : 1
							},
							"constantshadervalues" : 
							{
								"alpha" : 1,
								"gradientscale" : 0.25,
								"multiply" : 
								{
									"script" : "'use strict';\n\nimport * as WEMath from 'WEMath';\n\nlet changed=false;\n\nlet time=0;\n/**\n * @param {Number} value - for property 'multiply'\n * @return {Number} - update current property value\n */\nexport function update(value) {\n\t\n\tif(!changed){\n\t\treturn value;\n\t}\n\ttime+=engine.frametime;\n\tvalue = 1-WEMath.smoothStep(0,1,time);\n\tif(value ==0){\n\t\tchanged=false;\n\t\ttime = 0;\n\t}\n\treturn value;\n}\n\n/**\n * @param {MediaThumbnailEvent} event\n */\nexport function mediaThumbnailChanged(event) {\n\tchanged = true;\n}\n",
									"value" : 0
								}
							},
							"id" : 564,
							"textures" : [ null, "workshop/2499516781/placeholder", "effects/waterflowphase" ],
							"usertextures" : 
							[
								null,
								{
									"name" : "$mediaPreviousThumbnail",
									"type" : "system"
								},
								{
									"name" : "$mediaThumbnail",
									"type" : "system"
								}
							]
						}
					],
					"visible" : true
				},
				{
					"file" : "effects/workshop/2499516781/opacity/effect.json",
					"id" : 579,
					"name" : "",
					"passes" : 
					[
						{
							"constantshadervalues" : 
							{
								"alpha" : 0.57999998
							},
							"id" : 580,
							"textures" : [ null, "workshop/2499516781/masks/opacity_mask_04a251dd" ]
						}
					],
					"visible" : true
				},
				{
					"file" : "effects/workshop/2499516781/blurprecise/effect.json",
					"id" : 583,
					"name" : "",
					"passes" : 
					[
						{
							"combos" : 
							{
								"KERNEL" : 2
							},
							"constantshadervalues" : 
							{
								"scale" : "5 5"
							},
							"id" : 584
						},
						{
							"combos" : 
							{
								"ENABLEMASK" : 1,
								"KERNEL" : 2,
								"VERTICAL" : 1
							},
							"constantshadervalues" : 
							{
								"scale" : "5 5"
							},
							"id" : 585
						}
					],
					"visible" : true
				},
				{
					"file" : "effects/workshop/2499516781/blurprecise/effect.json",
					"id" : 586,
					"name" : "",
					"passes" : 
					[
						{
							"combos" : 
							{
								"KERNEL" : 2
							},
							"constantshadervalues" : 
							{
								"scale" : "2 2"
							},
							"id" : 587
						},
						{
							"combos" : 
							{
								"ENABLEMASK" : 1,
								"KERNEL" : 2,
								"VERTICAL" : 1
							},
							"constantshadervalues" : 
							{
								"scale" : "2 2"
							},
							"id" : 588
						}
					],
					"visible" : true
				},
				{
					"file" : "effects/workshop/2499516781/blurradial/effect.json",
					"id" : 589,
					"name" : "",
					"passes" : 
					[
						{
							"constantshadervalues" : 
							{
								"center" : "0.51118165 0.54027808",
								"scale" : 2
							},
							"id" : 590
						}
					],
					"visible" : true
				},
				{
					"file" : "effects/workshop/2499516781/tint/effect.json",
					"id" : 591,
					"name" : "",
					"passes" : 
					[
						{
							"combos" : 
							{
								"BLENDMODE" : 11
							},
							"constantshadervalues" : 
							{
								"alpha" : 1,
								"color" : 
								{
									"script" : "'use strict';\n// Please note: Do not remove this line or asset references may break.\nexport let __workshopId = '2499516781';\nlet color;\n/**\n * @param {Vec3} value - for property 'color'\n * @return {Vec3} - update current property value\n */\nexport function update(value) {\n\t\n\treturn color;\n}\n\n/**\n * @param {MediaThumbnailEvent} event\n */\nexport function mediaThumbnailChanged(event) {\n\tcolor=event.primaryColor;\n}\n",
									"value" : "0.5450980392156862 0.5450980392156862 0.5450980392156862"
								}
							},
							"id" : 592
						}
					],
					"visible" : false
				}
			],
			"id" : 578,
			"image" : "models/workshop/2499516781/placeholder.json",
			"ledsource" : false,
			"locktransforms" : false,
			"name" : "playerbackgroundalbumexception",
			"origin" : "-5.74607 -2.74653 -0.41344",
			"parallaxDepth" : "1.00000 1.00000",
			"perspective" : false,
			"scale" : "0.00800 0.00760 0.98532",
			"size" : "512.00000 512.00000",
			"solid" : true,
			"visible" : true
		},
		{
			"alignment" : "center",
			"alpha" : 1.0,
			"angles" : "0.00000 0.00000 0.00000",
			"brightness" : 1.0,
			"color" : "1.00000 1.00000 1.00000",
			"colorBlendMode" : 0,
			"config" : 
			{
				"passthrough" : true
			},
			"copybackground" : true,
			"effects" : 
			[
				{
					"file" : "effects/workshop/2499516781/tint/effect.json",
					"id" : 605,
					"name" : "",
					"passes" : 
					[
						{
							"combos" : 
							{
								"BLENDMODE" : 0
							},
							"constantshadervalues" : 
							{
								"alpha" : 1,
								"color" : "0.0784313725490196 0.08235294117647059 0.23529411764705882"
							},
							"id" : 606
						}
					],
					"visible" : true
				},
				{
					"file" : "effects/workshop/2499516781/opacity/effect.json",
					"id" : 607,
					"name" : "",
					"passes" : 
					[
						{
							"constantshadervalues" : 
							{
								"alpha" : 1
							},
							"id" : 608,
							"textures" : 
							[
								null,
								"workshop/2499516781/masks/opacity_mask_b46090becade15742727de64041260c1ab4bade4"
							]
						}
					],
					"visible" : true
				},
				{
					"file" : "effects/workshop/2499516781/opacity/effect.json",
					"id" : 609,
					"name" : "Round corners",
					"passes" : 
					[
						{
							"constantshadervalues" : 
							{
								"alpha" : 
								{
									"script" : "'use strict';\n// Please note: Do not remove this line or asset references may break.\nexport let __workshopId = '2499516781';\n\n/**\n * @param {Number} value - for property 'alpha'\n * @return {Number} - update current property value\n */\nexport function update(value) {\n\t\n\treturn shared.uiopacity;\n}\n",
									"value" : 1
								}
							},
							"id" : 610,
							"textures" : [ null, "workshop/2499516781/cornered" ]
						}
					],
					"visible" : true
				}
			],
			"id" : 599,
			"image" : "models/util/composelayer.json",
			"ledsource" : false,
			"locktransforms" : false,
			"name" : "playerbounds",
			"origin" : "-5.87536 -2.77953 -0.04797",
			"parallaxDepth" : "1.00000 1.00000",
			"perspective" : false,
			"scale" : "0.00000 0.00000 0.66552",
			"size" : "512.00000 512.00000",
			"solid" : true,
			"visible" : 
			{
				"script" : "'use strict';\n// Please note: Do not remove this line or asset references may break.\nexport let __workshopId = '2499516781';\n\n/**\n * @param {ICursorEvent} event\n */\nexport function cursorEnter(event) {\n\tshared.playerproximity = true;\n\n}\n\n/**\n * @param {ICursorEvent} event\n */\nexport function cursorLeave(event) {\n\tshared.playerproximity = false;\n\t\n}\n\n",
				"value" : true
			}
		},
		{
			"alignment" : "right",
			"alpha" : 1.0,
			"angles" : "0.00000 0.00000 0.00000",
			"brightness" : 1.0,
			"color" : 
			{
				"script" : "'use strict';\n// Please note: Do not remove this line or asset references may break.\nexport let __workshopId = '2499516781';\n\n\n\n\n/**\n * @param {Vec3} value - for property 'color'\n * @return {Vec3} - update current property value\n */\nexport function update(value) {\n\treturn shared.accentColor;\n}\n",
				"value" : "0.20000 0.97647 0.39608"
			},
			"colorBlendMode" : 0,
			"copybackground" : true,
			"id" : 613,
			"image" : "models/util/solidlayer.json",
			"ledsource" : false,
			"locktransforms" : false,
			"name" : "playervolumebar",
			"origin" : "-5.45253 -2.17943 0.00000",
			"parallaxDepth" : "1.00000 1.00000",
			"perspective" : false,
			"scale" : "0.00000 -0.00006 0.10853",
			"size" : "512.00000 512.00000",
			"solid" : true,
			"visible" : true
		},
		{
			"alignment" : "center",
			"alpha" : 1.0,
			"angles" : "0.00000 0.00000 0.00000",
			"brightness" : 1.0,
			"color" : "1.00000 1.00000 1.00000",
			"colorBlendMode" : 0,
			"copybackground" : true,
			"id" : 614,
			"image" : "models/util/solidlayer.json",
			"ledsource" : false,
			"locktransforms" : false,
			"name" : "playervolume",
			"origin" : 
			{
				"script" : "'use strict';\n// Please note: Do not remove this line or asset references may break.\nexport let __workshopId = '2499516781';\n\nvar isDragging = false;\nvar dragOffset;\nvar initval;\nlet maxoffset = 50;\nlet barinit;\nlet barinitlayer;\nlet percentageLayer;\n/**\n * @param {ICursorEvent} event\n */\nexport function cursorDown(event) {\n\tisDragging = true;\n\t\tpercentageLayer.text = ((shared.volume*100) | 0)+\"%\";\n\t\tpercentageLayer.visible = true;\n\t\tdragOffset =  thisLayer.origin.x-event.worldPosition.x;\n\t\t\n\t\n\n}\n\n/**\n * @param {ICursorEvent} event\n */\nexport function cursorUp(event) {\n\tisDragging = false;\n\tpercentageLayer.opacity = 0;\n\tpercentageLayer.text =\"\";\n}\n\n/**\n * @param {ICursorEvent} event\n */\nexport function cursorMove(event) {\n\tif (isDragging) {\n\t\tpercentageLayer.text = ((shared.volume*100) | 0)+\"%\";\n\t\tlet xoffset = event.worldPosition.x + dragOffset;\n\t\txoffset= Math.min(initval.x+maxoffset,xoffset);\n\t\txoffset= Math.max(initval.x-maxoffset,xoffset);\n\t\tthisLayer.origin = new Vec3(xoffset,initval.y,0);\n\t\tshared.volume =  Math.abs(initval.x-maxoffset -xoffset)/100;\n\t\tbarinitlayer.scale = new Vec3((-shared.volume/5.1)+0.001,barinit.y,barinit.z);\n\t\t\n\t}else{\n\t\tpercentageLayer.text =\"\";\n\t}\n\t\n}\n\n/**\n * @param {Vec3} value - for property 'origin'\n * @return {Vec3} - update current property value\n */\nexport function init(value) {\n\tinitval = value;\n\tbarinit = thisScene.getLayer(\"playervolumebar\").scale;\n\tbarinitlayer = thisScene.getLayer(\"playervolumebar\");\n\tpercentageLayer = thisScene.getLayer(\"playervolumepercentage\");\n\t\n}\n",
				"value" : "-4.92757 -2.17715 0.00000"
			},
			"parallaxDepth" : "1.00000 1.00000",
			"perspective" : false,
			"scale" : "0.00000 0.00000 0.23196",
			"size" : "512.00000 512.00000",
			"solid" : true,
			"visible" : true
		},
		{
			"alignment" : "center",
			"alpha" : 1.0,
			"angles" : "0.00000 0.00000 0.00000",
			"brightness" : 1.0,
			"color" : "1.00000 1.00000 1.00000",
			"colorBlendMode" : 0,
			"copybackground" : true,
			"effects" : 
			[
				{
					"file" : "effects/workshop/2499516781/tint/effect.json",
					"id" : 619,
					"name" : "",
					"passes" : 
					[
						{
							"combos" : 
							{
								"BLENDMODE" : 31
							},
							"constantshadervalues" : 
							{
								"alpha" : 1.0,
								"color" : "1 1 1"
							},
							"id" : 620
						}
					],
					"visible" : true
				},
				{
					"file" : "effects/workshop/2499516781/opacity/effect.json",
					"id" : 621,
					"name" : "",
					"passes" : 
					[
						{
							"constantshadervalues" : 
							{
								"alpha" : 
								{
									"script" : "'use strict';\n// Please note: Do not remove this line or asset references may break.\nexport let __workshopId = '2499516781';\nlet prevVol =0.5;\n/**\n * @param {Number} value - for property 'alpha'\n * @return {Number} - update current property value\n */\nexport function update(value) {\n\tif(shared.volume==0){\n\t\treturn Math.max( 0.5,value/1.01);\n\t}\n\treturn Math.min( 1,value*1.01);\n}\n\n/**\n * @param {CursorEvent} event\n */\nexport function cursorClick(event) {\n\tif(shared.volume ==0){\n\t\tshared.volume = prevVol;\n\t}\n\telse{\n\t\tprevVol = shared.volume;\n\t\tshared.volume = 0;\n\t}\n\t\n}\n\n\n\n/**\n * @param {Number} value - for property 'alpha'\n * @return {Number} - update current property value\n */\nexport function init(value) {\nshared.volume = 0.5;\n\treturn value;\n}\n",
									"value" : 1
								}
							},
							"id" : 622
						}
					],
					"visible" : true
				}
			],
			"id" : 618,
			"image" : "models/workshop/2499516781/volume_max_speaker_sound_audio_icon_149179.json",
			"ledsource" : false,
			"locktransforms" : false,
			"name" : "playervolumeicon",
			"origin" : "-4.75156 -2.17353 0.00000",
			"parallaxDepth" : "1.00000 1.00000",
			"perspective" : false,
			"scale" : "0.00000 0.00000 0.23196",
			"size" : "512.00000 512.00000",
			"solid" : true,
			"visible" : true
		},
		{
			"alignment" : "left",
			"alpha" : 1.0,
			"angles" : "0.00000 0.00000 0.00000",
			"brightness" : 1.0,
			"color" : "1.00000 1.00000 1.00000",
			"colorBlendMode" : 0,
			"copybackground" : true,
			"effects" : 
			[
				{
					"file" : "effects/workshop/2499516781/blur/effect.json",
					"id" : 626,
					"name" : "",
					"passes" : 
					[
						{
							"id" : 627
						},
						{
							"constantshadervalues" : 
							{
								"scale" : "2 2"
							},
							"id" : 628
						},
						{
							"combos" : 
							{
								"VERTICAL" : 1
							},
							"constantshadervalues" : 
							{
								"scale" : "2 2"
							},
							"id" : 629
						},
						{
							"combos" : 
							{
								"COMPOSITE" : 1
							},
							"constantshadervalues" : 
							{
								"compositealpha" : 1.2,
								"compositecolor" : "1 1 1",
								"compositeoffset" : "-2.28 -2.28"
							},
							"id" : 630
						}
					],
					"visible" : false
				},
				{
					"file" : "effects/workshop/2499516781/opacity/effect.json",
					"id" : 631,
					"name" : "",
					"passes" : 
					[
						{
							"constantshadervalues" : 
							{
								"alpha" : 1
							},
							"id" : 632,
							"textures" : [ null, "workshop/2413251683/1AV circle" ]
						}
					],
					"visible" : true
				}
			],
			"id" : 625,
			"image" : "models/util/solidlayer.json",
			"ledsource" : false,
			"locktransforms" : false,
			"name" : "playerbackgroundprogbarexception",
			"origin" : 
			{
				"script" : "'use strict';\n// Please note: Do not remove this line or asset references may break.\nexport let __workshopId = '2499516781';\n\n/**\n * @param {Vec3} value - for property 'origin'\n * @return {Vec3} - update current property value\n */\nexport function update(value) {\n\t\n\treturn value;\n}\n\n/**\n * @param {Vec3} value - for property 'origin'\n * @return {Vec3} - update current property value\n */\nexport function init(value) {\n\tthisScene.getLayer(\"playerprogexception\").origin = thisLayer.origin;\n\t\n\n\treturn value;\n}\n",
				"value" : "-7.43064 -2.44634 0.00000"
			},
			"parallaxDepth" : "1.00000 1.00000",
			"perspective" : false,
			"scale" : "0.00597 -0.00006 0.23196",
			"size" : "512.00000 512.00000",
			"solid" : true,
			"visible" : true
		},
		{
			"alignment" : "left",
			"alpha" : 1.0,
			"angles" : "0.00000 0.00000 0.00000",
			"brightness" : 1.0,
			"color" : 
			{
				"script" : "'use strict';\n// Please note: Do not remove this line or asset references may break.\nexport let __workshopId = '2499516781';\n\n/**\n * @param {Vec3} value - for property 'color'\n * @return {Vec3} - update current property value\n */\nexport function update(value) {\n\treturn shared.accentColor;\n}\n\n",
				"value" : "0.20000 0.97647 0.39608"
			},
			"colorBlendMode" : 0,
			"copybackground" : true,
			"effects" : 
			[
				{
					"file" : "effects/opacity/effect.json",
					"id" : 660,
					"name" : "",
					"passes" : 
					[
						{
							"constantshadervalues" : 
							{
								"alpha" : 1.0
							},
							"id" : 661,
							"textures" : [ null, "2800x2100_glitch-distortion-lines-interference-abstraction" ]
						}
					],
					"visible" : false
				}
			],
			"id" : 636,
			"image" : "models/util/solidlayer.json",
			"ledsource" : false,
			"locktransforms" : false,
			"name" : "playerprogexception",
			"origin" : "-7.43064 -2.44634 0.00000",
			"parallaxDepth" : "1.00000 1.00000",
			"perspective" : false,
			"scale" : 
			{
				"script" : "'use strict';\n// Please note: Do not remove this line or asset references may break.\nexport let __workshopId = '2499516781';\n\n\n/**\n * @param {Vec3} value - for property 'origin'\n * @return {Vec3} - update current property value\n */\nexport function update(value) {\n\t\n\t\n}\n\n\n",
				"value" : "0.00597 -0.00006 0.23196"
			},
			"size" : "512.00000 512.00000",
			"solid" : true,
			"visible" : true
		},
		{
			"alignment" : "center",
			"alpha" : 
			{
				"script" : "'use strict';\n// Please note: Do not remove this line or asset references may break.\nexport let __workshopId = '2499516781';\n\n\nlet audio = engine.registerAudioBuffers(16);\nlet playerLayers =[];\nlet playerExceptions =[];\nlet timeout = 0;\nlet appearAnim;\nlet resetAnim = false;\nlet screenSaver = false;\nlet hoverdelay = 0;\nlet layersdiabled = false;\n/**\n * @param {Number} value - for property 'alpha'\n * @return {Number} - update current property value\n */\nexport function update(value) {\n\tif(appearAnim.getFrame()==appearAnim.frameCount-1){\n\t\tappearAnim.stop();\n\t}\n\t\n\t\n\tif(!layersdiabled && shared.uiopacity ==0 ){\n\t\tplayerLayers.forEach(element=>{\n\t\t\tif(element.alpha ==0){\n\t\t\t\telement.visible = false;\n\t\t\t\tif(element.name != \"playerbounds\"){\n\t\t\t\t\telement.solid = false;\n\t\t\t\t}\n\t\t\t\tresetAnim = true;\n\t\t\t\n\t\t\t}\n\t\t\tlayersdiabled=true;\n\t\t\t\n\t\t});\n\t}else if( layersdiabled && shared.uiopacity >0 ){\n\t\tlayersdiabled = false;\n\t\t\t\tplayerLayers.forEach(element=>{\n\t\t\t\t\tif(element.alpha >0){\n\t\t\t\t\t\tif(resetAnim){\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tappearAnim.play();\n\t\t\t\t\t\t\tresetAnim =false;\n\t\t\t\t\t\t}\n\t\t\t\t\t\telement.visible = true;\n\t\t\t\t\t\telement.solid = true;\n\t\t\t\t\t}\n\t\t\t\n\t\t\t\n\t\t});\n\t}\n\tif(!shared.enablePlayer  || (screenSaver && !shared.mediaSesPlaying)  ){\n\t\t\tplayerLayers.forEach((element,i)=>{\n\t\t\t\tif(((playerExceptions.indexOf(element)==-1 ) || !shared.enablePlayer)){\n\t\t\t\t\t\n\t\t\t\t\telement.alpha = Math.max(element.alpha-engine.frametime*3,0);\n\t\t\t\t\t\n\t\t\t\t}\n\t\t\t\t\n\t\t\t});\n\t\n\t\ttimeout = 0;\n\t\t\n\n\t}else{\n\t\tif((timeout>1 && (shared.songplays || shared.mediaSesPlaying)) || shared.playerproximity || shared.mediaSesPlaying ){\n\t\t\t\tplayerLayers.forEach(element=>{\n\t\t\n\t\t\telement.alpha = Math.min(element.alpha+engine.frametime*3,0.9);\n\t\t\t\n\t\t});\n\t\t\n\t\t}else{\n\t\t\ttimeout+=engine.frametime;\n\t\t}\n\t\t\n\t}\n\tshared.uiopacity = playerLayers[0].alpha;\n\tif(shared.playerproximity){\n\t\thoverdelay = 0;\n\n\t}else{\n\t\thoverdelay += engine.frametime;\n\t}\n}\n\n/**\n * @param {Number} value - for property 'alpha'\n * @return {Number} - update current property value\n */\nexport function init(value) {\n\tthisScene.enumerateLayers().forEach(element=>{\n\t\tif(element.name.includes(\"player\") && element.visible ){\n\t\t\tif(element.name.includes(\"exception\")){\n\t\t\t\tplayerExceptions.push(element);\n\t\t\t}\n\n\t\t\tplayerLayers.push(element);\n\t\t}\n\t});\n\tappearAnim= thisScene.getLayer(\"playeroutlineanim\").getTextureAnimation();\n\tappearAnim.rate = 10;\n\tscreenSaver = engine.isScreensaver();\n\treturn value;\n}\n",
				"value" : 1.0
			},
			"angles" : "0.00000 0.00000 0.00000",
			"brightness" : 1.0,
			"color" : "1.00000 1.00000 1.00000",
			"colorBlendMode" : 0,
			"copybackground" : true,
			"effects" : 
			[
				{
					"file" : "effects/workshop/2499516781/colorkey/effect.json",
					"id" : 648,
					"name" : "",
					"passes" : 
					[
						{
							"constantshadervalues" : 
							{
								"alpha" : 0,
								"color" : "0.13725490196078433 0.16470588235294117 0.18823529411764706",
								"fuzziness" : 1.71,
								"tolerance" : 0
							},
							"id" : 656
						}
					],
					"visible" : true
				},
				{
					"file" : "effects/workshop/2499516781/tint/effect.json",
					"id" : 657,
					"name" : "",
					"passes" : 
					[
						{
							"constantshadervalues" : 
							{
								"alpha" : 
								{
									"script" : "'use strict';\n// Please note: Do not remove this line or asset references may break.\nexport let __workshopId = '2499516781';\n\n/**\n * @param {Number} value - for property 'alpha'\n * @return {Number} - update current property value\n */\nexport function update(value) {\n\tshared.songplays? value= Math.min(1,value+engine.frametime):value= Math.max(0,value-engine.frametime);\n\treturn value;\n}\n",
									"value" : 0
								},
								"color" : 
								{
									"script" : "'use strict';\n// Please note: Do not remove this line or asset references may break.\nexport let __workshopId = '2499516781';\n\n\n/**\n * @param {Object} changedUserProperties - only includes user properties that were recently changed!\n */\nexport function applyUserProperties(changedUserProperties) {\n\tthisObject.color= shared.accentColor;\n}\n",
									"value" : "0.20000 0.97647 0.46275"
								}
							},
							"id" : 658
						}
					],
					"visible" : true
				}
			],
			"id" : 644,
			"image" : "models/workshop/2499516781/cropped.json",
			"ledsource" : false,
			"locktransforms" : false,
			"name" : "playerplay",
			"origin" : 
			{
				"script" : "'use strict';\n// Please note: Do not remove this line or asset references may break.\nexport let __workshopId = '2499516781';\n\n\nlet cachedSongs = [];\nlet index = 0; //position of the first song\nlet playStatus = true; //set to true if you want it to play on startup\nlet time = 0;\nlet songtime = 0;\nlet textLayer;\nlet progbar;\nlet proginit;\nlet progbeginpos;\nlet durationLayer;\nlet mediaPaused = false;\nlet mediaSessionName;\n\nexport function update(value) {\n\n\tif (shared.uiopacity > 0) {\n\n\t\tif (shared.prevtrack) {\n\t\t\tprevioustrack();\n\t\t\tshared.prevtrack = false;\n\t\t\tdisplayname();\n\t\t} else if (shared.skip) {\n\t\t\tskip();\n\t\t\tdisplayname();\n\t\t\tshared.skip = false;\n\n\t\t}\n\t\tduration();\n\t}\n\tanimateIcon();\n\n\tvar playing = anyPlaying(cachedSongs);\n\n\tif (playStatus && !playing) {\n\t\tskip();\n\t\tplayTrack();\n\t\tdisplayname();\n\t} else if (playing) {\n\t\ttime += engine.frametime;\n\n\t\tupdateProgBar(songtime > 0 ? (progbeginpos / songtime) * time : 0);\n\t}\n\t\n}\n\nexport function previoustrack() {\n\tif (index <= 0) {\n\t\tcachedSongs[index].stop();\n\t\tcachedSongs[cachedSongs.length - 1].play();\n\t\tindex = cachedSongs.length - 1;\n\t} else {\n\t\tcachedSongs[index].stop();\n\t\tcachedSongs[index - 1].play();\n\t\tindex = index - 1;\n\t}\n\ttime = 0;\n\tsongtime = parseInt(cachedSongs[index].name.split(\"t:\")[1]) + 1;\n}\n\nexport function skip() {\n\tcachedSongs[index].stop();\n\n\tif (shared.randomtrack) {\n\t\tlet newsong = (Math.random() * cachedSongs.length) | 0;\n\t\twhile (newsong == index) {\n\t\t\tnewsong = (Math.random() * cachedSongs.length) | 0;\n\t\t}\n\t\tcachedSongs[newsong].play();\n\t\tindex = newsong;\n\t} else if (shared.looptrack) {\n\t\tcachedSongs[index].play();\n\t}\n\telse if (index >= cachedSongs.length - 1) {\n\t\tcachedSongs[0].play();\n\t\tindex = 0;\n\t} else {\n\t\tcachedSongs[index + 1].play();\n\t\tindex = index + 1;\n\t}\n\ttime = 0;\n\tsongtime = parseInt(cachedSongs[index].name.split(\"t:\")[1]) + 1;\n}\n\nexport function updateProgBar(progress) {\n\tprogbar.scale = new Vec3(proginit.x + progress, proginit.y, proginit.z);\n}\n\nexport function animateIcon() {\n\tif (playStatus) {\n\t\tlet layer = thisLayer.getTextureAnimation();\n\t\tif (layer.getFrame() == 30) {\n\t\t\tlayer.rate = 0;\n\t\t} else {\n\t\t\tlayer.rate = 5;\n\t\t}\n\n\t} else if (!playStatus) {\n\t\tlet layer = thisLayer.getTextureAnimation();\n\t\tif (layer.getFrame() < layer.frameCount / 1.4) {\n\t\t\tlayer.rate = 5;\n\t\t} else {\n\t\t\tlayer.rate = 0;\n\t\t}\n\n\t}\n}\nexport function playTrack() {\n\tcachedSongs[index].play();\n\tduration();\n\tdisplayname();\n}\n\nexport function duration() {\n\tlet length = songtime - time;\n\tif (length <= 0 || length == undefined) {\n\t\tdurationLayer.text = \"--/--\"\n\t\treturn;\n\t}\n\tlength = (length <= 0 ? \" \" : length);\n\tlet secs = ((length % 60) | 0);\n\tlet mins = ((length / 60) | 0);\n\tdurationLayer.text = length <= 0 ? \"\" : \"\" + (mins < 10 ? \"0\" + mins : mins) + \":\" + (secs < 10 ? \"0\" + secs : secs);\n\tif (textLayer.text == \"~\" || songtime <= 0) {\n\t\tdurationLayer.text = \"\"\n\t}\n}\nexport function displayname(name) {\n\tif(name!=null){\n\t\tshared.trackName = name;\n\n\t}else{\n\t\tshared.trackName= cachedSongs[index].name.split(\".mp3\")[0];\n\t\tmediaPaused = !anyPlaying(cachedSongs);\n\t\t\n\t}\n\tif (shared.trackName.length > 17) {\n\t\ttextLayer.pointsize = 20;\n\t\tlet split = shared.trackName;\n\t\tlet text = \"\";\n\t\tlet regex = \".{1,\" + shared.maxTitleLineTxt + \"}(\\\\s|$)\"\n\n\t\tlet formatted = split.match(new RegExp(regex, \"g\"));\n\t\tformatted.forEach(word => {\n\t\t\ttext = text + word + \"\\n\";\n\t\t});\n\t\tshared.trackName = text.trim();\n\n\t} else {\n\t\ttextLayer.pointsize = 25;\n\t}\n\t(mediaPaused &&!shared.mediaSesPlaying) ? shared.trackName = (textLayer.text + \"\\n\"+ \"(Paused) \") :  shared.trackName = shared.trackName; \n\n}\n\nexport function anyPlaying(array) {\n\t//Checks for every audiolayer's playstatus \n\tlet plays = false;\n\n\tfor (let i = 0; i < array.length; i++) {\n\t\tarray[i].volume = shared.volume;\n\t\tif (array[i].isPlaying()) {\n\t\t\tplays = true;\n\t\t\tplayStatus = true;\n\t\t\tshared.songplays = true;\n\n\t\t\treturn plays;\n\n\t\t}\n\t}\n\treturn plays;\n}\n\nexport function init(value) {\n\tlogTracks();\n\tplayStatus = shared.playOnStart;\n\tshared.progress = 0;\n\tshared.cachedSongs = cachedSongs;\n\tshared.songIndex = 0;\n\tthisLayer.alpha = 0.1;\n\ttextLayer = thisScene.getLayer(\"playertracknameexception\");\n\ttextLayer.text = \"~\";\n\tprogbar = thisScene.getLayer(\"playerprogexception\");\n\tprogbar.scale = new Vec3(0, progbar.scale.y, progbar.scale.z);\n\tproginit = progbar.scale;\n\tdurationLayer = thisScene.getLayer(\"playerdurationexception\");\n\tdurationLayer.text = \"\"\n\tprogbeginpos = thisScene.getLayer(\"playerbackgroundprogbarexception\").scale.x - proginit.x;\n\ttime = 0;\n\tsongtime = parseInt(cachedSongs[index].name.split(\"t:\")[1]) + 1;\n\tif (playStatus) {\n\t\tplayTrack();\n\t}\n\treturn value;\n}\n\nexport function logTracks() {\n\tlet i = 5;\n\n\tthisScene.enumerateLayers().forEach((element) => {\n\t\tif (element.name.toLowerCase().includes(\".mp3\")) {\n\t\t\tcachedSongs.push(element);\n\t\t\tif (i > 0) {\n\t\t\t\tconsole.log(\"Loaded track: \" + element.name);\n\t\t\t}\n\t\t\ti--;\n\t\t}\n\t});\n\tif (i < 0) {\n\t\tconsole.log(\"...\" + Math.abs(i) + \" more Audio track(s) loaded\");\n\t}\n}\n\n/**\n * @param {ICursorEvent} event\n */\nexport function cursorClick(event) {\n\tplayStatus = !playStatus;\n\n\ttextLayer.text == \"~\" ? displayname() : 0;\n\tif (playStatus == false) {\n\t\tshared.songplays = false;\n\t\tcachedSongs[index].pause();\n\t\tdisplayname();\n\t} else {\n\n\t\tplayTrack();\n\t\tdisplayname();\n\t}\n\n}\n\n\n/**\n * @param {MediaStatusEvent} event\n */\nexport function mediaStatusChanged(event) {\n\t\n}\n\n/**\n * @param {MediaPlaybackEvent} event\n */\nexport function mediaPlaybackChanged(event) {\n\t\n\tif(event.state==null){\n\t\treturn;\n\t}\n\tif(event.state == MediaPlaybackEvent.PLAYBACK_PLAYING){\n\t\tmediaPaused = false;\n\t\tshared.songplays=true;\n\t\tshared.mediaSesPlaying = true;\n\t}\n\telse{\n\tmediaPaused = true;\n\tshared.songplays=false;\n\tshared.mediaSesPlaying = false;\n\t\n\t}\n\tdisplayname(mediaSessionName);\n\t\n}\n\n/**\n * @param {MediaPropertiesEvent} event\n */\nexport function mediaPropertiesChanged(event) {\n\tif(event.title == null){\n\t\treturn;\n\t}\n\t\n\tif(event.artist != null){\n\tevent.title+= \" - \"+event.artist;\n\t}\n\tmediaSessionName = event.title;\n\tdisplayname(event.title);\n}\n\n/**\n * @param {MediaThumbnailEvent} event\n */\nexport function mediaThumbnailChanged(event) {\n\t\n}\n\n/**\n * @param {MediaTimelineEvent} event\n */\nexport function mediaTimelineChanged(event) {\n\tif(!anyPlaying(cachedSongs)){\n\t\tsongtime = event.duration;\n\t\ttime = event.position;\n\t\tupdateProgBar(songtime > 0 ? (progbeginpos / songtime) * event.position : 0);\n\t\tduration();\n\t}\n\tdisplayname(mediaSessionName);\n\t\n}\n",
				"value" : "-6.74910 -2.17715 0.00000"
			},
			"parallaxDepth" : "1.00000 1.00000",
			"perspective" : false,
			"scale" : "0.00000 0.00000 0.23196",
			"size" : "200.00000 200.00000",
			"solid" : true,
			"visible" : true
		},
		{
			"alignment" : "center",
			"alpha" : 1.0,
			"angles" : "0.00000 0.00000 0.00000",
			"brightness" : 1.0,
			"color" : "1.00000 1.00000 1.00000",
			"colorBlendMode" : 0,
			"copybackground" : true,
			"effects" : 
			[
				{
					"file" : "effects/workshop/2499516781/tint/effect.json",
					"id" : 664,
					"name" : "",
					"passes" : 
					[
						{
							"combos" : 
							{
								"BLENDMODE" : 31
							},
							"constantshadervalues" : 
							{
								"alpha" : 1.0,
								"color" : "1 1 1"
							},
							"id" : 665
						}
					],
					"visible" : true
				}
			],
			"id" : 663,
			"image" : "models/workshop/2499516781/iconfinder_skip-back_2561277.json",
			"ledsource" : false,
			"locktransforms" : false,
			"name" : "playerskip",
			"origin" : 
			{
				"script" : "'use strict';\n// Please note: Do not remove this line or asset references may break.\nexport let __workshopId = '2499516781';\n\n/**\n * @param {ICursorEvent} event\n */\nexport function cursorClick(event) {\n\tshared.skip = true;\n}\n",
				"value" : "-6.32295 -2.14614 0.00000"
			},
			"parallaxDepth" : "1.00000 1.00000",
			"perspective" : false,
			"scale" : 
			{
				"animation" : 
				{
					"c0" : 
					[
						{
							"back" : 
							{
								"enabled" : true,
								"x" : -1,
								"y" : 0
							},
							"frame" : 0,
							"front" : 
							{
								"enabled" : true,
								"x" : 1,
								"y" : 0
							},
							"lockangle" : true,
							"locklength" : true,
							"value" : 0
						},
						{
							"back" : 
							{
								"enabled" : true,
								"x" : -1,
								"y" : 0
							},
							"frame" : 18,
							"front" : 
							{
								"enabled" : true,
								"x" : 1,
								"y" : 0
							},
							"lockangle" : true,
							"locklength" : true,
							"value" : 0.062650003
						}
					],
					"c1" : 
					[
						{
							"back" : 
							{
								"enabled" : true,
								"x" : -1,
								"y" : 0
							},
							"frame" : 0,
							"front" : 
							{
								"enabled" : true,
								"x" : 1,
								"y" : 0
							},
							"lockangle" : true,
							"locklength" : true,
							"value" : 0
						},
						{
							"back" : 
							{
								"enabled" : true,
								"x" : -1,
								"y" : 0
							},
							"frame" : 18,
							"front" : 
							{
								"enabled" : true,
								"x" : 1,
								"y" : 0
							},
							"lockangle" : true,
							"locklength" : true,
							"value" : 0.062650003
						}
					],
					"c2" : 
					[
						{
							"back" : 
							{
								"enabled" : true,
								"x" : -1,
								"y" : 0
							},
							"frame" : 0,
							"front" : 
							{
								"enabled" : true,
								"x" : 1,
								"y" : 0
							},
							"lockangle" : true,
							"locklength" : true,
							"value" : 0
						},
						{
							"back" : 
							{
								"enabled" : true,
								"x" : -1,
								"y" : 0
							},
							"frame" : 18,
							"front" : 
							{
								"enabled" : true,
								"x" : 1,
								"y" : 0
							},
							"lockangle" : true,
							"locklength" : true,
							"value" : 0.11758
						}
					],
					"options" : 
					{
						"fps" : 30,
						"length" : 60,
						"mode" : "single",
						"name" : "hover",
						"startpaused" : true
					},
					"relative" : true
				},
				"script" : "'use strict';\n// Please note: Do not remove this line or asset references may break.\nexport let __workshopId = '2499516781';\n\n/**\n * @param {Vec3} value - for property 'scale'\n * @return {Vec3} - update current property value\n */\nexport function update(value) {\n\t\n\treturn value;\n}\n",
				"value" : "0.00000 0.00000 0.23196"
			},
			"size" : "512.00000 512.00000",
			"solid" : true,
			"visible" : true
		},
		{
			"alignment" : "center",
			"alpha" : 1.0,
			"angles" : "0.00000 0.00000 0.00000",
			"brightness" : 1.0,
			"color" : "1.00000 1.00000 1.00000",
			"colorBlendMode" : 0,
			"copybackground" : true,
			"effects" : 
			[
				{
					"file" : "effects/workshop/2499516781/tint/effect.json",
					"id" : 669,
					"name" : "",
					"passes" : 
					[
						{
							"combos" : 
							{
								"BLENDMODE" : 31
							},
							"constantshadervalues" : 
							{
								"alpha" : 1.0,
								"color" : "1 1 1"
							},
							"id" : 671
						}
					],
					"visible" : true
				}
			],
			"id" : 667,
			"image" : "models/workshop/2499516781/iconfinder_skip-back_2561277.json",
			"ledsource" : false,
			"locktransforms" : false,
			"name" : "playerback",
			"origin" : 
			{
				"script" : "'use strict';\n// Please note: Do not remove this line or asset references may break.\nexport let __workshopId = '2499516781';\n\n/**\n * @param {Vec3} value - for property 'origin'\n * @return {Vec3} - update current property value\n */\nexport function update(value) {\n\t\n\treturn value;\n}\n\nexport function cursorClick(event) {\n\tshared.prevtrack = true;\n}\n\n",
				"value" : "-7.14061 -2.14614 -0.06239"
			},
			"parallaxDepth" : "1.00000 1.00000",
			"perspective" : false,
			"scale" : "0.00000 0.00000 0.23196",
			"size" : "512.00000 512.00000",
			"solid" : true,
			"visible" : true
		},
		{
			"alpha" : 1.0,
			"anchor" : "right",
			"angles" : "0.00000 0.00000 0.00000",
			"backgroundbrightness" : 1.0,
			"backgroundcolor" : "0.00000 0.00000 0.00000",
			"blockalign" : false,
			"brightness" : 1.0,
			"color" : "1.00000 1.00000 1.00000",
			"colorBlendMode" : 0,
			"copybackground" : true,
			"effects" : 
			[
				{
					"file" : "effects/reflection/effect.json",
					"id" : 659,
					"name" : "",
					"passes" : 
					[
						{
							"constantshadervalues" : 
							{
								"alpha" : 0.44,
								"direction" : 0,
								"offset" : 0.059999999
							},
							"id" : 662
						}
					],
					"visible" : false
				},
				{
					"file" : "effects/workshop/2811235087/lens_distorsion/effect.json",
					"id" : 617,
					"name" : "lens",
					"passes" : 
					[
						{
							"constantshadervalues" : 
							{
								"Chromatic aberration" : -0.17,
								"Distorsion 1" : -0.25999999,
								"Distorsion 2" : 0.059999999,
								"Focus length" : 1,
								"General" : 
								{
									"script" : "'use strict';\n\n/**\n * @param {Number} value - for property 'General'\n * @return {Number} - update current property value\n */\nexport function update(value) {\n\t\n\treturn shared.textfx;\n}\n",
									"value" : 0.99000001
								},
								"Zoom" : 0.70999998,
								"center" : "0.5 0.5",
								"size" : 1.34
							},
							"id" : 623
						}
					],
					"visible" : false
				},
				{
					"file" : "effects/blurradial/effect.json",
					"id" : 567,
					"name" : "rad",
					"passes" : 
					[
						{
							"constantshadervalues" : 
							{
								"center" : "0.5 0.5",
								"scale" : 
								{
									"script" : "'use strict';\n\n/**\n * @param {Number} value - for property 'scale'\n * @return {Number} - update current property value\n */\nexport function update(value) {\n\t\n\treturn shared.textfx;\n}\n",
									"value" : 0.0099999998
								}
							},
							"id" : 568
						}
					],
					"visible" : false
				},
				{
					"file" : "effects/blurprecise/effect.json",
					"id" : 574,
					"name" : "",
					"passes" : 
					[
						{
							"constantshadervalues" : 
							{
								"scale" : 
								{
									"script" : "'use strict';\n\n/**\n * @param {Vec2} value - for property 'scale'\n * @return {Vec2} - update current property value\n */\nexport function update(value) {\n\t\n\treturn new Vec2(shared.textfx);\n}\n",
									"value" : "0.01000 0.01000"
								}
							},
							"id" : 638
						},
						{
							"combos" : 
							{
								"ENABLEMASK" : 1,
								"VERTICAL" : 1
							},
							"constantshadervalues" : 
							{
								"scale" : 
								{
									"script" : "'use strict';\n\n/**\n * @param {Vec2} value - for property 'scale'\n * @return {Vec2} - update current property value\n */\nexport function update(value) {\n\t\n\treturn new Vec2(shared.textfx);\n}\n",
									"value" : "0.01000 0.01000"
								}
							},
							"id" : 639
						}
					],
					"visible" : true
				},
				{
					"file" : "effects/transform/effect.json",
					"id" : 676,
					"name" : "",
					"passes" : 
					[
						{
							"combos" : 
							{
								"CLAMP" : 0
							},
							"constantshadervalues" : 
							{
								"angle" : 0.0,
								"offset" : 
								{
									"script" : "'use strict';\n\n/**\n * @param {Vec2} value - for property 'offset'\n * @return {Vec2} - update current property value\n */\nexport function update(value) {\n\t\n\treturn new Vec3(shared.textfx/100,0);\n}\n",
									"value" : "0.00000 0.00000"
								},
								"scale" : "1 1"
							},
							"id" : 677
						}
					],
					"visible" : true
				},
				{
					"file" : "effects/tint/effect.json",
					"id" : 544,
					"name" : "",
					"passes" : 
					[
						{
							"constantshadervalues" : 
							{
								"alpha" : 
								{
									"script" : "'use strict';\n\n/**\n * @param {Number} value - for property 'alpha'\n * @return {Number} - update current property value\n */\nexport function update(value) {\n\t\n\treturn shared.textfx;\n}\n",
									"value" : 1
								},
								"color" : 
								{
									"script" : "'use strict';\n\n/**\n * @param {Vec3} value - for property 'color'\n * @return {Vec3} - update current property value\n */\nexport function update(value) {\n\t\n\treturn shared.accentColor;\n}\n",
									"value" : "1 1 1"
								}
							},
							"id" : 545
						}
					],
					"visible" : true
				}
			],
			"font" : "fonts/Alcubierre.otf",
			"horizontalalign" : "left",
			"id" : 673,
			"ledsource" : false,
			"limitrows" : false,
			"limituseellipsis" : false,
			"limitwidth" : false,
			"locktransforms" : false,
			"maxrows" : 1,
			"maxwidth" : 713.93579,
			"name" : "playertracknameexception",
			"opaquebackground" : false,
			"origin" : "-7.45735 -2.68916 0.07059",
			"padding" : 32,
			"parallaxDepth" : "1.00000 1.00000",
			"perspective" : false,
			"pointsize" : 32.0,
			"scale" : "0.00307 0.00307 0.53859",
			"size" : "676.00000 220.00000",
			"solid" : false,
			"text" : 
			{
				"script" : "'use strict';\n\nimport * as WEMath from 'WEMath';\n\nexport var scriptProperties = createScriptProperties()\n\t.addText({\n\t\tname: 'queuedWord',\n\t\tlabel: 'Text',\n\t\tvalue: 'you can dynamically adjust this'\n\t})\n\t.finish();\nlet timer = 0;\nlet index = 0;\nlet newWord = \"\";\nlet timeout = 0.075;\nlet deleteWord = false;\nlet queuedWord = \"\";\nlet time = 0;\nlet notif = false;\nlet justNotified = false;\n\nlet posY;\n/**\n * @param {String} value - for property 'text'\n * @return {String} - update current property value\n */\nexport function update(value) {\n\t\n\tif(notif == false){\n\t\tqueuedWord = shared.trackName;\n\t\t\n\t}\n\tif (!deleteWord && time >= timeout && index < newWord.length) {\n\n\t\tvalue = addLastChar(value);\n\t\t\t\n\t\t\n\t}\n\n\telse if (deleteWord && time >= timeout && index > 0) {\n\t\tvalue = deleteLastChar(value)\n\t}\n\tif (newWord == queuedWord.slice(0, newWord.length)) {\n\t\tnewWord = queuedWord;\n\t\t\n\t} else {\n\t\tdeleteWord = true;\n\n\t\tif (index == 0 || queuedWord == value ) {\n\t\t\t\n\t\t\tif(index == 0 && !notif && !justNotified  ){\n\t\t\t\t\n\t\t\t\tqueuedWord = \"Now playing...\";\n\t\t\t\tnotif = true;\n\t\t\t\tengine.setTimeout(()=>{queuedWord=shared.trackName; notif = false; justNotified = true;},500);\n\t\t\t}\n\n\t\t\tnewWord = queuedWord;\n\t\t\tdeleteWord = false;\n\t\t}\n\t\t\n\n\t}\n\n\ttimer += engine.frametime;\n\ttime = (-(Math.cos(2 * Math.PI * (index / newWord.length)) / timeout) + (1 / (timeout)))/100 + timer;\n\t\n\treturn value;\n}\n\n\nfunction linear(a, b, t) {\n\treturn a.multiply((1 - t)).add(b.multiply(t));\n}\n\nfunction addLastChar(value) {\n\n\tshared.textfx = linear(new Vec3(0),new Vec3(1),1-index/(newWord.length-1)).x;\n\tconsole.log(shared.textfx)\n\tvalue = value + newWord[index];\n\tindex = value.length;\n\ttimer = 0;\n\treturn value;\n}\n\nfunction deleteLastChar(value) {\n\tvalue = value.slice(0, -1);\n\tindex = value.length;\n\ttimer = 0;\n\treturn value;\n}\n\n\n\n/**\n * @param {String} value - for property 'text'\n * @return {String} - update current property value\n */\nexport function init(value) {\n\n\tshared.trackName = value;\n\tqueuedWord = thisLayer.text;\n\tnewWord = value;\n\t\n\treturn \"\";\n\n\n}\n\n",
				"scriptproperties" : 
				{
					"queuedWord" : "you can dynamically adjust this"
				},
				"value" : "trackname"
			},
			"verticalalign" : "top",
			"visible" : true
		},
		{
			"alignment" : "center",
			"alpha" : 1.0,
			"angles" : "0.00000 0.00000 0.00000",
			"brightness" : 1.0,
			"color" : "1.00000 1.00000 1.00000",
			"colorBlendMode" : 0,
			"copybackground" : true,
			"effects" : 
			[
				{
					"file" : "effects/workshop/2499516781/tint/effect.json",
					"id" : 679,
					"name" : "",
					"passes" : 
					[
						{
							"combos" : 
							{
								"BLENDMODE" : 31
							},
							"constantshadervalues" : 
							{
								"alpha" : 1,
								"color" : "1 1 1"
							},
							"id" : 680
						}
					],
					"visible" : true
				},
				{
					"file" : "effects/workshop/2499516781/tint/effect.json",
					"id" : 686,
					"name" : "",
					"passes" : 
					[
						{
							"constantshadervalues" : 
							{
								"alpha" : 
								{
									"script" : "'use strict';\n// Please note: Do not remove this line or asset references may break.\nexport let __workshopId = '2499516781';\n\n/**\n * @param {Number} value - for property 'alpha'\n * @return {Number} - update current property value\n */\nexport function update(value) {\n\tif(shared.randomtrack || shared.looptrack){\n\t\t\n\t\n\t\treturn value=Math.min(1,value+engine.frametime*2);\n\t}else{\n\t\tvalue=Math.max(0,value-engine.frametime*2);\n\t}\n\treturn value;\n}\n",
									"value" : 0
								},
								"color" : 
								{
									"script" : "'use strict';\n// Please note: Do not remove this line or asset references may break.\nexport let __workshopId = '2499516781';\n\nimport * as WEColor from 'WEColor';\n\n\n/**\n * @param {Vec3} value - for property 'color'\n * @return {Vec3} - update current property value\n */\nexport function update(value) {\n\treturn shared.accentColor;\n}\n",
									"value" : "0.20000 0.97647 0.39608"
								}
							},
							"id" : 687
						}
					],
					"visible" : true
				}
			],
			"id" : 678,
			"image" : "models/workshop/2499516781/loop.json",
			"ledsource" : false,
			"locktransforms" : false,
			"name" : "playershufflebutton",
			"origin" : "-269.70660 -418.69269 0.00000",
			"parallaxDepth" : "1.00000 1.00000",
			"perspective" : false,
			"scale" : "0.28445 0.28445 0.28445",
			"size" : "150.00000 150.00000",
			"solid" : true,
			"visible" : 
			{
				"script" : "'use strict';\n// Please note: Do not remove this line or asset references may break.\nexport let __workshopId = '2499516781';\n\nvar clickCount = 1;\n/**\n * @param {Boolean} value - for property 'visible'\n * @return {Boolean} - update current property value\n */\nexport function update(value) {\n\n\treturn value;\n}\n\n/**\n * @param {ICursorEvent} event\n */\nexport function cursorClick(event) {\n\n\tif(!shared.randomtrack ){\n\n\t\tshared.randomtrack = true;\n\t\tshared.looptrack = false;\n\t\tthisLayer.getTextureAnimation().setFrame(1);\n\t}else{\n\t\tshared.randomtrack = false;\n\t\tshared.looptrack = true;\n\t\tthisLayer.getTextureAnimation().setFrame(0);\n\t}\n\tif(clickCount%3 == 0){\n\t\t\t\tshared.randomtrack = false;\n\t\tshared.looptrack = false;\n\t}\n\tclickCount++;\n\n}\n\n\n\n/**\n * @param {Boolean} value - for property 'visible'\n * @return {Boolean} - update current property value\n */\nexport function init(value) {\n\tthisLayer.getTextureAnimation().rate = 0;\n\tthisLayer.getTextureAnimation().setFrame(1);\n\treturn value;\n}\n",
				"value" : true
			}
		},
		{
			"alignment" : "center",
			"alpha" : 1.0,
			"angles" : "0.00000 0.00000 0.00000",
			"brightness" : 1.0,
			"color" : "1.00000 1.00000 1.00000",
			"colorBlendMode" : 0,
			"config" : 
			{
				"passthrough" : true
			},
			"copybackground" : true,
			"effects" : 
			[
				{
					"file" : "effects/workshop/2499516781/blurprecise/effect.json",
					"id" : 692,
					"name" : "",
					"passes" : 
					[
						{
							"constantshadervalues" : 
							{
								"scale" : "2 2"
							},
							"id" : 698
						},
						{
							"combos" : 
							{
								"VERTICAL" : 1
							},
							"constantshadervalues" : 
							{
								"scale" : "2 2"
							},
							"id" : 699
						}
					],
					"visible" : false
				},
				{
					"file" : "effects/workshop/2499516781/blur/effect.json",
					"id" : 703,
					"name" : "barblur",
					"passes" : 
					[
						{
							"id" : 705
						},
						{
							"constantshadervalues" : 
							{
								"scale" : "0.99 0"
							},
							"id" : 708
						},
						{
							"combos" : 
							{
								"VERTICAL" : 1
							},
							"constantshadervalues" : 
							{
								"scale" : "0.99 0"
							},
							"id" : 710
						},
						{
							"constantshadervalues" : 
							{
								"compositecolor" : "1 1 1"
							},
							"id" : 711
						}
					],
					"visible" : true
				},
				{
					"file" : "effects/workshop/2499516781/opacity/effect.json",
					"id" : 712,
					"name" : "",
					"passes" : 
					[
						{
							"constantshadervalues" : 
							{
								"alpha" : 
								{
									"script" : "'use strict';\n// Please note: Do not remove this line or asset references may break.\nexport let __workshopId = '2499516781';\n\n/**\n * @param {Number} value - for property 'alpha'\n * @return {Number} - update current property value\n */\nexport function update(value) {\n\t\n\treturn shared.uiopacity;\n}\n",
									"value" : 1
								}
							},
							"id" : 713
						}
					],
					"visible" : true
				}
			],
			"id" : 690,
			"image" : "models/util/composelayer.json",
			"ledsource" : false,
			"locktransforms" : false,
			"name" : "playerblur",
			"origin" : "-6.19381 -2.44634 0.00000",
			"parallaxDepth" : "1.00000 1.00000",
			"perspective" : false,
			"scale" : "-0.00390 0.00010 -0.40349",
			"size" : "1000.00000 500.00000",
			"solid" : true,
			"visible" : true
		},
		{
			"alpha" : 1.0,
			"anchor" : "none",
			"angles" : "0.00000 0.00000 0.00000",
			"backgroundbrightness" : 1.0,
			"backgroundcolor" : "0.00000 0.00000 0.00000",
			"blockalign" : false,
			"brightness" : 1.0,
			"color" : "1.00000 1.00000 1.00000",
			"colorBlendMode" : 0,
			"copybackground" : true,
			"font" : "fonts/Alcubierre.otf",
			"horizontalalign" : "center",
			"id" : 725,
			"ledsource" : false,
			"limitrows" : false,
			"limituseellipsis" : false,
			"limitwidth" : false,
			"locktransforms" : false,
			"maxrows" : 1,
			"maxwidth" : 500.0,
			"name" : "playerdurationexception",
			"opaquebackground" : false,
			"origin" : "-4.77909 -3.46917 0.00000",
			"padding" : 32,
			"parallaxDepth" : "1.00000 1.00000",
			"perspective" : false,
			"pointsize" : 32.0,
			"scale" : "0.00133 0.00133 0.23348",
			"size" : "446.00000 157.00000",
			"solid" : true,
			"text" : "duration",
			"verticalalign" : "center",
			"visible" : true
		},
		{
			"alignment" : "center",
			"alpha" : 1.0,
			"angles" : "0.00000 0.00000 0.00000",
			"brightness" : 1.0,
			"color" : "1.00000 1.00000 1.00000",
			"colorBlendMode" : 0,
			"copybackground" : true,
			"effects" : 
			[
				{
					"file" : "effects/blendgradient/effect.json",
					"id" : 549,
					"name" : "",
					"passes" : 
					[
						{
							"combos" : 
							{
								"WRITEALPHA" : 1
							},
							"constantshadervalues" : 
							{
								"alpha" : 1,
								"gradientscale" : 0.25,
								"multiply" : 
								{
									"script" : "'use strict';\n\nimport * as WEMath from 'WEMath';\n\nlet changed=false;\n\nlet time=0;\n/**\n * \n * Switches to other thumbnail \n */\nexport function update(value) {\n\t\n\tif(!changed){\n\t\treturn value;\n\t}\n\ttime+=engine.frametime/3;\n\tvalue = 1-WEMath.smoothStep(0,1,time);\n\tif(value ==0){\n\t\tchanged=false;\n\t\ttime = 0;\n\t}\n\treturn value;\n}\n\n/**\n * @param {MediaThumbnailEvent} event\n */\nexport function mediaThumbnailChanged(event) {\n\tchanged = true;\n}\n",
									"value" : 0.34999999
								}
							},
							"id" : 551,
							"textures" : [ null, "workshop/2499516781/placeholder", "effects/waterflowphase" ],
							"usertextures" : 
							[
								null,
								{
									"name" : "$mediaPreviousThumbnail",
									"type" : "system"
								},
								{
									"name" : "$mediaThumbnail",
									"type" : "system"
								}
							]
						}
					],
					"visible" : true
				},
				{
					"file" : "effects/blend/effect.json",
					"id" : 561,
					"name" : "",
					"passes" : 
					[
						{
							"combos" : 
							{
								"BLENDMODE" : 0
							},
							"constantshadervalues" : 
							{
								"alpha" : 1,
								"multiply" : 
								{
									"script" : "'use strict';\n\nimport * as WEMath from 'WEMath';\n\nlet changed=false;\n\nlet time=0;\n/**\n * @param {Number} value - for property 'multiply'\n * @return {Number} - update current property value\n */\nexport function update(value) {\n\t\n\tif(!changed){\n\t\treturn value;\n\t}\n\ttime+=engine.frametime;\n\tvalue = 1-WEMath.smoothStep(0,1,time);\n\tif(value ==0){\n\t\tchanged=false;\n\t\ttime = 0;\n\t}\n\treturn value;\n}\n\n/**\n * @param {MediaThumbnailEvent} event\n */\nexport function mediaThumbnailChanged(event) {\n\tchanged = true;\n}\n",
									"value" : 0.88999999
								}
							},
							"id" : 562,
							"textures" : [ null, "2800x2100_glitch-distortion-lines-interference-abstraction" ],
							"usertextures" : 
							[
								null,
								{
									"name" : "$mediaPreviousThumbnail",
									"type" : "system"
								}
							]
						}
					],
					"visible" : false
				}
			],
			"id" : 595,
			"image" : "models/workshop/2499516781/placeholder.json",
			"ledsource" : false,
			"locktransforms" : false,
			"name" : "playerthumbnailexception",
			"origin" : 
			{
				"script" : "'use strict';\nlet initPos;\n/**\n * @param {Vec3} value - for property 'origin'\n * @return {Vec3} - update current property value\n */\nexport function update(value) {\n\t\n\treturn new Vec3(initPos.x,initPos.y,(Math.sin(engine.runtime/3)*0.05)+initPos.z);\n}\n\n/**\n * @param {Vec3} value - for property 'origin'\n * @return {Vec3} - update current property value\n */\nexport function init(value) {\n\tinitPos= value;\n}\n",
				"value" : "-4.76101 -3.19654 0.25102"
			},
			"parallaxDepth" : "1.00000 1.00000",
			"perspective" : false,
			"scale" : "0.00132 0.00132 0.49622",
			"size" : "512.00000 512.00000",
			"solid" : true,
			"visible" : true
		},
		{
			"alpha" : 1.0,
			"anchor" : "none",
			"angles" : "0.00000 0.00000 0.00000",
			"backgroundbrightness" : 1.0,
			"backgroundcolor" : "0.00000 0.00000 0.00000",
			"blockalign" : false,
			"brightness" : 1.0,
			"color" : "1.00000 1.00000 1.00000",
			"colorBlendMode" : 0,
			"copybackground" : true,
			"font" : "fonts/Alcubierre.otf",
			"horizontalalign" : "center",
			"id" : 732,
			"ledsource" : false,
			"limitrows" : false,
			"limituseellipsis" : false,
			"limitwidth" : false,
			"locktransforms" : false,
			"maxrows" : 1,
			"maxwidth" : 500.0,
			"name" : "playervolumepercentage",
			"opaquebackground" : false,
			"origin" : "-360.58411 -276.33917 0.00000",
			"padding" : 32,
			"parallaxDepth" : "1.00000 1.00000",
			"perspective" : false,
			"pointsize" : 47.0,
			"scale" : "0.17909 0.17909 0.17909",
			"size" : "2.00000 2.00000",
			"solid" : true,
			"text" : "",
			"verticalalign" : "center",
			"visible" : true
		},
		{
			"alignment" : "center",
			"alpha" : 1.0,
			"angles" : "0.00000 0.00000 0.00000",
			"brightness" : 1.0,
			"color" : "1.00000 1.00000 1.00000",
			"colorBlendMode" : 0,
			"config" : 
			{
				"passthrough" : true
			},
			"copybackground" : true,
			"id" : 745,
			"image" : "models/util/composelayer.json",
			"ledsource" : false,
			"locktransforms" : false,
			"name" : "----MUSIC PLAYER ----",
			"origin" : "933.48517 453.77472 0.00000",
			"parallaxDepth" : "1.00000 1.00000",
			"perspective" : false,
			"scale" : "0.88642 0.88642 0.88642",
			"size" : "1.00000 1.00000",
			"solid" : true,
			"visible" : true
		}
	],
	"version" : 1
}